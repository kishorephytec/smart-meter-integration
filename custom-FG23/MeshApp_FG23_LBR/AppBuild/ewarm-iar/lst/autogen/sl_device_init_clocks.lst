###############################################################################
#
# IAR ANSI C/C++ Compiler V9.10.2.313/W64 for ARM         30/Apr/2024  13:12:21
# Copyright 1999-2021 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\SiliconLabs\autogen\sl_device_init_clocks.c
#    Command line      =
#        -f
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\autogen\sl_device_init_clocks.lst.rsp
#        (D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\SiliconLabs\autogen\sl_device_init_clocks.c
#        -D EFR32FG23A020F512GM40=1 -D SL_COMPONENT_CATALOG_PRESENT=1 -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -lC
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\autogen
#        --diag_suppress Pa050 -o
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\autogen
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse -e --fpu=VFPv5_sp --dlib_config "C:\Program
#        Files\IAR Systems\Embedded Workbench
#        9.0\arm\inc\c\DLib_Config_Normal.h" -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\.\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\AppConfigs\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\config\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\autogen\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\HAL\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\NVM\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Include\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\buffer_manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\event_manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\list_manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\queue_manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\timer_manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\hif\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\raw_uart_if\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\debug_console\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\Device\SiliconLabs\EFR32FG23\Include\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\CMSIS\Core\Include\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\device_init\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\mpu\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\toolchain\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\system\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\network-manager\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\RAIL_TRX\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MAC\Inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\wisun_modified\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\FANApp\AppInc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_callbacks\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ip\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\multicast\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\rpl\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\OS_interface\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\L2_L3_interface\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\cpu\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\contiki_mac_interface_layer\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\mac_sicslowpan_if\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emlib\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\platform\p3_lp_dk\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\common\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ble\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ieee802154\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\zwave\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\efr32xg1x\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_protocol\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_rssi\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MeterApp\Inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\dmadrv\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\common\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\FLASH\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\APP_LOG\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\config\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\NVM\nvm3\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\
#        -On --use_c++_inline) --dependencies=n
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\autogen\sl_device_init_clocks.o.d
#    Locale            =  C
#    List file         =
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\autogen\sl_device_init_clocks.lst
#    Object file       =
#        D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\autogen\sl_device_init_clocks.o
#    Runtime model:       
#      __SystemLibrary =  DLib
#      __dlib_version  =  6
#
###############################################################################

D:\NITHISH\EFR32FG\EFR32FG23\TestBench\Kimbal\Kimbal_MeshApp_FG23_LBR\SiliconLabs\autogen\sl_device_init_clocks.c
      1          /***************************************************************************//**
      2           * @file
      3           * @brief Device initialization for clocks.
      4           *******************************************************************************
      5           * # License
      6           * <b>Copyright 2019 Silicon Laboratories Inc. www.silabs.com</b>
      7           *******************************************************************************
      8           *
      9           * SPDX-License-Identifier: Zlib
     10           *
     11           * The licensor of this software is Silicon Laboratories Inc.
     12           *
     13           * This software is provided 'as-is', without any express or implied
     14           * warranty. In no event will the authors be held liable for any damages
     15           * arising from the use of this software.
     16           *
     17           * Permission is granted to anyone to use this software for any purpose,
     18           * including commercial applications, and to alter it and redistribute it
     19           * freely, subject to the following restrictions:
     20           *
     21           * 1. The origin of this software must not be misrepresented; you must not
     22           *    claim that you wrote the original software. If you use this software
     23           *    in a product, an acknowledgment in the product documentation would be
     24           *    appreciated but is not required.
     25           * 2. Altered source versions must be plainly marked as such, and must not be
     26           *    misrepresented as being the original software.
     27           * 3. This notice may not be removed or altered from any source distribution.
     28           *
     29           ******************************************************************************/
     30          #include "sl_device_init_clocks.h"
     31          
     32          #include "em_cmu.h"
     33          

   \                                 In section .text, align 4, keep-with-next
     34          sl_status_t sl_device_init_clocks(void)
     35          {
   \                     sl_device_init_clocks: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
     36            CMU_CLOCK_SELECT_SET(SYSCLK, HFXO);
   \        0x2   0x.... 0x....      BL       sli_em_cmu_HFXOSetForceEnable
   \        0x6   0x.... 0x....      BL       sli_em_cmu_SYSCLKInitPreClockSelect
   \        0xA   0x4826             LDR.N    R0,??sl_device_init_clocks_0
   \        0xC   0x6800             LDR      R0,[R0, #+0]
   \        0xE   0x08C0             LSRS     R0,R0,#+3
   \       0x10   0x00C0             LSLS     R0,R0,#+3
   \       0x12   0xF050 0x0003      ORRS     R0,R0,#0x3
   \       0x16   0x4923             LDR.N    R1,??sl_device_init_clocks_0
   \       0x18   0x6008             STR      R0,[R1, #+0]
   \       0x1A   0x.... 0x....      BL       sli_em_cmu_SYSCLKInitPostClockSelect
   \       0x1E   0x4822             LDR.N    R0,??sl_device_init_clocks_0+0x4
   \       0x20   0x6800             LDR      R0,[R0, #+0]
   \       0x22   0x01C0             LSLS     R0,R0,#+7
   \       0x24   0xD403             BMI.N    ??sl_device_init_clocks_1
   \       0x26   0xF45F 0x3080      MOVS     R0,#+65536
   \       0x2A   0x4920             LDR.N    R1,??sl_device_init_clocks_0+0x8
   \       0x2C   0x6008             STR      R0,[R1, #+0]
     37          #if defined(_CMU_EM01GRPACLKCTRL_MASK)
     38            CMU_CLOCK_SELECT_SET(EM01GRPACLK, HFXO);
   \                     ??sl_device_init_clocks_1: (+1)
   \       0x2E   0x4820             LDR.N    R0,??sl_device_init_clocks_0+0xC
   \       0x30   0x6800             LDR      R0,[R0, #+0]
   \       0x32   0x08C0             LSRS     R0,R0,#+3
   \       0x34   0x00C0             LSLS     R0,R0,#+3
   \       0x36   0xF050 0x0002      ORRS     R0,R0,#0x2
   \       0x3A   0x491D             LDR.N    R1,??sl_device_init_clocks_0+0xC
   \       0x3C   0x6008             STR      R0,[R1, #+0]
     39          #endif
     40          #if defined(_CMU_EM01GRPBCLKCTRL_MASK)
     41            CMU_CLOCK_SELECT_SET(EM01GRPBCLK, HFXO);
     42          #endif
     43          #if defined(_CMU_EM01GRPCCLKCTRL_MASK)
     44            CMU_CLOCK_SELECT_SET(EM01GRPCCLK, HFXO);
   \       0x3E   0x481D             LDR.N    R0,??sl_device_init_clocks_0+0x10
   \       0x40   0x6800             LDR      R0,[R0, #+0]
   \       0x42   0x08C0             LSRS     R0,R0,#+3
   \       0x44   0x00C0             LSLS     R0,R0,#+3
   \       0x46   0xF050 0x0002      ORRS     R0,R0,#0x2
   \       0x4A   0x491A             LDR.N    R1,??sl_device_init_clocks_0+0x10
   \       0x4C   0x6008             STR      R0,[R1, #+0]
     45          #endif
     46            CMU_CLOCK_SELECT_SET(EM23GRPACLK, LFRCO);
   \       0x4E   0x481A             LDR.N    R0,??sl_device_init_clocks_0+0x14
   \       0x50   0x6800             LDR      R0,[R0, #+0]
   \       0x52   0x0880             LSRS     R0,R0,#+2
   \       0x54   0x0080             LSLS     R0,R0,#+2
   \       0x56   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x5A   0x4917             LDR.N    R1,??sl_device_init_clocks_0+0x14
   \       0x5C   0x6008             STR      R0,[R1, #+0]
     47            CMU_CLOCK_SELECT_SET(EM4GRPACLK, LFRCO);
   \       0x5E   0x4817             LDR.N    R0,??sl_device_init_clocks_0+0x18
   \       0x60   0x6800             LDR      R0,[R0, #+0]
   \       0x62   0x0880             LSRS     R0,R0,#+2
   \       0x64   0x0080             LSLS     R0,R0,#+2
   \       0x66   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x6A   0x4914             LDR.N    R1,??sl_device_init_clocks_0+0x18
   \       0x6C   0x6008             STR      R0,[R1, #+0]
     48          #if defined(RTCC_PRESENT)
     49            CMU_CLOCK_SELECT_SET(RTCC, LFRCO);
     50          #endif
     51          #if defined(SYSRTC_PRESENT)
     52            CMU_CLOCK_SELECT_SET(SYSRTC, LFRCO);
   \       0x6E   0x4814             LDR.N    R0,??sl_device_init_clocks_0+0x1C
   \       0x70   0x6800             LDR      R0,[R0, #+0]
   \       0x72   0x0880             LSRS     R0,R0,#+2
   \       0x74   0x0080             LSLS     R0,R0,#+2
   \       0x76   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x7A   0x4911             LDR.N    R1,??sl_device_init_clocks_0+0x1C
   \       0x7C   0x6008             STR      R0,[R1, #+0]
     53          #endif
     54            CMU_CLOCK_SELECT_SET(WDOG0, LFRCO);
   \       0x7E   0x4811             LDR.N    R0,??sl_device_init_clocks_0+0x20
   \       0x80   0x6800             LDR      R0,[R0, #+0]
   \       0x82   0x08C0             LSRS     R0,R0,#+3
   \       0x84   0x00C0             LSLS     R0,R0,#+3
   \       0x86   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x8A   0x490E             LDR.N    R1,??sl_device_init_clocks_0+0x20
   \       0x8C   0x6008             STR      R0,[R1, #+0]
     55          #if WDOG_COUNT > 1
     56            CMU_CLOCK_SELECT_SET(WDOG1, LFRCO);
   \       0x8E   0x480E             LDR.N    R0,??sl_device_init_clocks_0+0x24
   \       0x90   0x6800             LDR      R0,[R0, #+0]
   \       0x92   0x08C0             LSRS     R0,R0,#+3
   \       0x94   0x00C0             LSLS     R0,R0,#+3
   \       0x96   0xF050 0x0001      ORRS     R0,R0,#0x1
   \       0x9A   0x490B             LDR.N    R1,??sl_device_init_clocks_0+0x24
   \       0x9C   0x6008             STR      R0,[R1, #+0]
     57          #endif
     58          
     59            return SL_STATUS_OK;
   \       0x9E   0x2000             MOVS     R0,#+0
   \       0xA0   0xBD02             POP      {R1,PC}
   \       0xA2   0xBF00             Nop
   \                     ??sl_device_init_clocks_0:
   \       0xA4   0x5000'8070        DC32     0x50008070
   \       0xA8   0x5A00'4028        DC32     0x5a004028
   \       0xAC   0x5A00'6028        DC32     0x5a006028
   \       0xB0   0x5000'8120        DC32     0x50008120
   \       0xB4   0x5000'8128        DC32     0x50008128
   \       0xB8   0x5000'8140        DC32     0x50008140
   \       0xBC   0x5000'8160        DC32     0x50008160
   \       0xC0   0x5000'8240        DC32     0x50008240
   \       0xC4   0x5000'8200        DC32     0x50008200
   \       0xC8   0x5000'8208        DC32     0x50008208
     60          }

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
       8   sl_device_init_clocks
         8   -> sli_em_cmu_HFXOSetForceEnable
         8   -> sli_em_cmu_SYSCLKInitPostClockSelect
         8   -> sli_em_cmu_SYSCLKInitPreClockSelect


   Section sizes:

   Bytes  Function/Label
   -----  --------------
     204  sl_device_init_clocks

 
 204 bytes in section .text
 
 204 bytes of CODE memory

Errors: none
Warnings: none

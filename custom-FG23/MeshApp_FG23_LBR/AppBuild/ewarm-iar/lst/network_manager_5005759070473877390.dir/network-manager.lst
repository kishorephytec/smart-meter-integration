###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         02/Dec/2024  12:57:44
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\network-manager\network-manager.c
#    Command line                 =
#        -f
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\network_manager_5005759070473877390.dir\network-manager.o.rsp
#        (D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\network-manager\network-manager.c
#        -D EFR32FG23A020F512GM40=1 -D SL_COMPONENT_CATALOG_PRESENT=1 -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -lC
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\network_manager_5005759070473877390.dir
#        --diag_suppress Pa050 -o
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\network_manager_5005759070473877390.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse -e --fpu=VFPv5_sp --dlib_config "C:\Program
#        Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\.\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\AppConfigs\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\config\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\autogen\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\HAL\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\NVM\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\buffer_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\event_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\list_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\queue_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\timer_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\hif\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\raw_uart_if\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\debug_console\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\Device\SiliconLabs\EFR32FG23\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\CMSIS\Core\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\device_init\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\mpu\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\toolchain\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\system\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\network-manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\RAIL_TRX\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MAC\Inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\wisun_modified\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\FANApp\AppInc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_callbacks\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ip\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\multicast\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\rpl\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\OS_interface\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\L2_L3_interface\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\cpu\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\contiki_mac_interface_layer\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\mac_sicslowpan_if\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emlib\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\platform\p3_lp_dk\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\common\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ble\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ieee802154\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\zwave\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\efr32xg1x\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_protocol\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_rssi\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MeterApp\Inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\dmadrv\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\common\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\FLASH\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\APP_LOG\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\config\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\NVM\nvm3\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\
#        -On --use_c++_inline) --dependencies=n
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\network_manager_5005759070473877390.dir\network-manager.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\network_manager_5005759070473877390.dir\network-manager.lst
#    Object file                  =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\network_manager_5005759070473877390.dir\network-manager.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\network-manager\network-manager.c
      1          /*****************************************************************************
      2           * network-manager.c
      3           *****************************************************************************/
      4          
      5          /** \file network-manager.c
      6           *******************************************************************************
      7           ** \brief This file is used to maintain the state machine and 
      8           **            802.15.4 MAC and PHY configurations
      9           **
     10           ** \cond STD_FILE_HEADER
     11           **
     12           ** COPYRIGHT(c) 2023-24 Procubed Innovations Pvt Ltd.
     13           ** All rights reserved.
     14           **
     15           ** THIS SOFTWARE IS PROVIDED BY "AS IS" AND ALL WARRANTIES OF ANY KIND,
     16           ** INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR USE,
     17           ** ARE EXPRESSLY DISCLAIMED.  THE DEVELOPER SHALL NOT BE LIABLE FOR ANY
     18           ** DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE. THIS SOFTWARE
     19           ** MAY NOT BE USED IN PRODUCTS INTENDED FOR USE IN IMPLANTATION OR OTHER
     20           ** DIRECT LIFE SUPPORT APPLICATIONS WHERE MALFUNCTION MAY RESULT IN THE DIRECT
     21           ** PHYSICAL HARM OR INJURY TO PERSONS. ALL SUCH IS USE IS EXPRESSLY PROHIBITED.
     22           **
     23           *******************************************************************************
     24           **  \endcond
     25           */
     26          
     27          /**
     28           *****************************************************************************
     29           * @ingroup sysdoc
     30           *
     31           * @{
     32           *****************************************************************************/
     33          
     34          /**
     35           *****************************************************************************
     36           * @defgroup RITSimpleDataNBpanc LE-RIT Data Transmission Demo-PAN Coordinator(non-beaconing)
     37           * @brief This module implements the PAN coordinator application for
     38           * demonstrating the Simple 16-bit and 64-bit addressing \n data transmission in a non-beacon
     39           * enabled network
     40           *
     41           * @attention This application is built over NO-SEC MAC library and Multi Band Multi Mode MRFSK-PHY library
     42           *
     43           * This application executes the following steps.\n\n
     44           * 1) Initialize the application variables by calling lrwpan_app_init()
     45           * and enter into  IDLE_STATE state\n\n
     46           * 2) Issue MLME-Reset.request primitive to the MAC-PHY Layer and wait for \n
     47           * MLME-Reset.confirm primitive.\n\n
     48           * 3) After getting  MLME-RESET.confirm primitive from MAC-PHY Layer, issue \n
     49           * MLME-SET.request primitive to set macIEEEAddress PIB which sets the device's \n
     50           * local 64-bit address for communication.\n\n
     51           * 4) Issue MLME-SET.request primitive to MAC-PHY layer for setting macShortAddress \n
     52           * PIB which sets the 16-bit short address used for communication.\n\n
     53           * 5) Issue MLME-Scan.request primitive to MAC layer to perform ED scanning on the \n
     54           * default channel list, for the default scan duration.\n\n
     55           * 6) Store the ED values reported in the MLME-Scan.confirm primitive issued by the \n
     56           * MAC-PHY Layer.  \n\n
     57           * 7) Issue MLME-Scan.request primitive for performing ACTIVE scanning on all the channels\n\n
     58           * 8) After getting MLME-Scan.confirm primitive from MAC-PHY Layer for the active scan request\n
     59           * select the best channel(least noisy) and a PAN ID which does not conflict with any of the \n
     60           * discovered network using ACTIVE scanning.\n\n
     61           * 9) Issue MLME-START.request primitive with the selected channel,the selected PAN ID,\n
     62           * PANCoordinator parameter set to TRUE and BO and SO set to 15 for establishing a \n
     63           * non-beacon enabled PAN coordinator.\n\n
     64           * 10) After getting MLME-START.confirm primitive with SUCCESS as the status from the MAC-PHY Layer,\n
     65           * issue MLME-SET.request for setting  macRxOnWhenIdle and macAssociationPermit \n
     66           * PIB attribute to TRUE. This is to keep the reciever ON and enable association \n
     67           * of new devices in the network respectively.\n\n
     68           * 11) Once the macAssociationPermit is set to TRUE successfully, PAN coordinator will \n
     69           * be in a state where it can receive associations from other devices.\n\n
     70           * 12) Accept association request from other devices and assign short addresses to the \n
     71           * attempting devices. Short addresses to be assigned as preconfirgured in child_address[] array.\n\n
     72           * 13) Issue MLME-SET.request primitive to set macLEenabled PIB to TRUE.\n\n
     73           * 14) Issue MLME-SET.request primitive to set the macRITDataWaitDuration PIB to DEF_RIT_DATA_WAIT_DURATION\n
     74           * value, and macRITTxWaitDuartion PIB to DEF_RIT_TX_WAIT_DURATION value and macRITPeriod to DEF_RIT_PERIOD\n
     75           * value.\n\n
     76           * 15) Set the macRITDataReqCmdConfig proprietary PIB to 1 value.\n\n
     77           * 16) This PAN Coordinator starts a timer to send data to its joined with the TxOption as indirect.\n
     78           * Once the timer expires the data request packet is put in the indirect queue and then the PAN Coordinator\n
     79           * keeps it receiver ON for macRITTxWaitDuartion duration and look only for RIT data request command frame from the\n
     80           * child device.\n\n
     81           * 17) After receiving the RIT data request command frame from the joined device,data is sent out and MCPS-Data.confirmation\n
     82           * is send from the MAC.\n\n
     83           * 18) This PAN Coordinator also receives MCPS-Data.indication primitive which carries the data \n
     84           * transmitted by the joined device.After receiving data from the child timer is started again to \n
     85           * send data to the joined device.\n\n
     86           ******************************************************************************/
     87           
     88          /*
     89          ********************************************************************************
     90          * File inclusion
     91          ********************************************************************************
     92          */
     93          
     94          #include "StackAppConf.h"
     95          #include "common.h"
     96          #include "list_latest.h"
     97          #include "queue_latest.h"
     98          #include "buff_mgmt.h"
     99          #include "uart_hal.h"
    100          #include "hif_utility.h"
    101          #include "hw_tmr.h"
    102          #include "sw_timer.h"
    103          #include "timer_service.h"
    104          #include "phy.h"
    105          #include "mac.h"
    106          #include "fan_mac_ie.h"
    107          #include "mac_app_build_config.h"
    108          #include "mac_interface_layer.h"
    109          #include "sm.h"

   \                                 In section .rodata, align 4
   \   static __absolute sm_event_t const sm_entry_event
   \                     sm_entry_event:
   \        0x0   0x00               DC8 0
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \   static __absolute sm_event_t const sm_exit_event
   \                     sm_exit_event:
   \        0x0   0x01               DC8 1
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp sm_result_t error_increment(sm_t *)
   \                     error_increment: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable29
   \        0x6   0x8810             LDRH     R0,[R2, #+0]
   \        0x8   0x1C40             ADDS     R0,R0,#+1
   \        0xA   0x8010             STRH     R0,[R2, #+0]
   \        0xC   0x2000             MOVS     R0,#+0
   \        0xE   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void sm_transit(sm_t *, sm_state_t const)
   \                     sm_transit: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x2C00             CMP      R4,#+0
   \        0x8   0xD008             BEQ.N    ??sm_transit_0
   \        0xA   0x6820             LDR      R0,[R4, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD005             BEQ.N    ??sm_transit_0
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable29_1
   \       0x14   0x0020             MOVS     R0,R4
   \       0x16   0x6822             LDR      R2,[R4, #+0]
   \       0x18   0x4790             BLX      R2
   \       0x1A   0xE002             B.N      ??sm_transit_1
   \                     ??sm_transit_0: (+1)
   \       0x1C   0x2000             MOVS     R0,#+0
   \       0x1E   0x.... 0x....      BL       error_increment
   \                     ??sm_transit_1: (+1)
   \       0x22   0x0028             MOVS     R0,R5
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD104             BNE.N    ??sm_transit_2
   \       0x28   0x.... 0x....      LDR.W    R1,??DataTable29
   \       0x2C   0x8808             LDRH     R0,[R1, #+0]
   \       0x2E   0x1C40             ADDS     R0,R0,#+1
   \       0x30   0x8008             STRH     R0,[R1, #+0]
   \                     ??sm_transit_2: (+1)
   \       0x32   0x6025             STR      R5,[R4, #+0]
   \       0x34   0x2C00             CMP      R4,#+0
   \       0x36   0xD008             BEQ.N    ??sm_transit_3
   \       0x38   0x6820             LDR      R0,[R4, #+0]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD005             BEQ.N    ??sm_transit_3
   \       0x3E   0x.... 0x....      LDR.W    R1,??DataTable32
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x6822             LDR      R2,[R4, #+0]
   \       0x46   0x4790             BLX      R2
   \       0x48   0xE002             B.N      ??sm_transit_4
   \                     ??sm_transit_3: (+1)
   \       0x4A   0x2000             MOVS     R0,#+0
   \       0x4C   0x.... 0x....      BL       error_increment
   \                     ??sm_transit_4: (+1)
   \       0x50   0xBD31             POP      {R0,R4,R5,PC}
    110          #include "event_manager.h"
    111          #include "buffer_service.h"
    112          #include "ie_element_info.h"
    113          #include "fan_app_test_harness.h"
    114          #include "network-manager.h"
    115          #include "l3_configuration.h"
    116          #include "l3_process_interface.h"   
    117          #include "fan_mac_interface.h"
    118          #include "l2_l3_interface.h"
    119          #include "fan_api.h"
    120          #include "fan_app_auto.h"
    121          //#include "fan_factorycmd.h"
    122          #include "fan_mac_security.h"
    123          //#include "response_print.h"
    124          #include "app_log.h"
    125          /*
    126          ** =============================================================================
    127          ** Private Macro definitions
    128          ** =============================================================================
    129          */
    130          
    131          /*
    132          ** =============================================================================
    133          ** Private Structures, Unions & enums Type Definitions
    134          ** =============================================================================
    135          **/
    136          
    137          /* None */
    138          
    139          /*
    140          ** =============================================================================
    141          ** Private Variable Definitions
    142          ** =============================================================================
    143          */
    144          
    145          /********************************
    146          Operating country selection  ::: Raka :: 23- Nov-2016 ....
    147          
    148          ********************************/
    149          

   \                                 In section .data, align 4
    150          opearating_zone_t opearating_zone_list[15] = {
   \                     opearating_zone_list:
   \        0x0   0x07 0xFF          DC8 7, 255
   \        0x2                      DS8 2
   \        0x4   0x4B80'0000        DC32 1'266'679'808
   \        0x8   0x0F 0x00          DC8 15, 0
   \        0xA                      DS8 2
   \        0xC   0x4F80'0000        DC32 1'333'788'672
   \       0x10   0x0F 0x01          DC8 15, 1
   \       0x12                      DS8 2
   \       0x14   0x4F88'0000        DC32 1'334'312'960
   \       0x18   0x0F 0x02          DC8 15, 2
   \       0x1A                      DS8 2
   \       0x1C   0x4F90'0000        DC32 1'334'837'248
   \       0x20   0x0F 0x03          DC8 15, 3
   \       0x22                      DS8 2
   \       0x24   0x4F98'0000        DC32 1'335'361'536
   \       0x28   0x0F 0x04          DC8 15, 4
   \       0x2A                      DS8 2
   \       0x2C   0x4FA0'0000        DC32 1'335'885'824
   \       0x30   0x0F 0x05          DC8 15, 5
   \       0x32                      DS8 2
   \       0x34   0x4FA8'0000        DC32 1'336'410'112
   \       0x38   0x0F 0x07          DC8 15, 7
   \       0x3A                      DS8 2
   \       0x3C   0x4FB8'0000        DC32 1'337'458'688
   \       0x40   0x08 0xFF          DC8 8, 255
   \       0x42                      DS8 2
   \       0x44   0x4C00'0000        DC32 1'275'068'416
   \       0x48   0x0F 0x06          DC8 15, 6
   \       0x4A                      DS8 2
   \       0x4C   0x4FB0'0000        DC32 1'336'934'400
   \       0x50   0x09 0xFF          DC8 9, 255
   \       0x52                      DS8 2
   \       0x54   0x4C80'0000        DC32 1'283'457'024
   \       0x58   0x04 0xFF          DC8 4, 255
   \       0x5A                      DS8 2
   \       0x5C   0x4A00'0000        DC32 1'241'513'984
   \       0x60   0x0B 0xFF          DC8 11, 255
   \       0x62                      DS8 2
   \       0x64   0x4D80'0000        DC32 1'300'234'240
   \       0x68   0x0E 0xFF          DC8 14, 255
   \       0x6A                      DS8 2
   \       0x6C   0x4F00'0000        DC32 1'325'400'064
   \       0x70   0x0F 0x08          DC8 15, 8
   \       0x72                      DS8 2
   \       0x74   0x4FC0'0000        DC32 1'337'982'976
    151            
    152          {7, 0xFF,0x4B800000},   // USA and CANADA
    153          {15, 0,0x4F800000 },    //USA (V2) AND MEXICO
    154          {15, 1,0x4F880000 },    //BRAZIL
    155          {15, 2,0x4F900000 },    //ANZ
    156          {15, 3,0x4F980000 },    //EU#3
    157          {15, 4,0x4FA00000 },    //PHILIPPINES
    158          {15, 5,0x4FA80000 },    //MALAYSIA
    159          {15, 7,0x4FB80000 },    //HONGKONG , SINGAPORE 1, THAILAND, VIETNAM
    160          {8, 0xFF,0x4C000000},   //KOREA
    161          {15, 6,0x4FB00000},     //CHINA
    162          {9, 0xFF,0x4C800000 },  //JAPAN
    163          {4, 0xFF,0x4A000000 },  //EU#1
    164          {11, 0xFF,0x4D800000 }, //EU#2
    165          {14, 0xFF,0x4F000000 }, // INDIA
    166          {15, 8,0x4FC00000 }     //SINGAPORE #2
    167          };
    168          

   \                                 In section .bss, align 1
    169          static uint8_t secrity_status_enab_dis = 0x00;
   \                     secrity_status_enab_dis:
   \        0x0                      DS8 1

   \                                 In section .bss, align 4
    170          uint8_t router_addr[8] = {0x00};
   \                     router_addr:
   \        0x0                      DS8 8
    171          
    172          /*
    173          ** =============================================================================
    174          ** Private Function Prototypes
    175          ** =============================================================================
    176          */
    177          #if(APP_NWK_MANAGER_PROCESS_FEATURE_ENABLED == 1)
    178          static uint8_t nwk_manager_process_event_handler(l3_process_event_t ev, l3_process_data_t data);
    179          L3_PROCESS(nwk_manager_process, "FAN NWK Mgr process");
    180          void fan_nwk_mgr_post_event( l3_process_event_t ev, uint8_t* data);
    181          
    182          #endif
    183          
    184          static void trigger_FAN_MAC_Start(void);
    185          static sm_result_t node_idle(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    186          static sm_result_t node_startup(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    187          static sm_result_t node_resetting(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    188          static sm_result_t node_initializing(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    189          static sm_result_t dev_ready_without_scanning(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    190          static sm_result_t node_starting_network(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    191          static sm_result_t node_mac_ready(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    192          static sm_result_t node_mac_sec_set(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    193          uint32_t get_sun_page_value(void);
    194          uint16_t get_sun_channel(void);
    195          
    196          
    197          void trickle_timer_inconsistency_pc(void);
    198          void update_key_table_entry( uchar table_entry);
    199          extern void update_pan_version_from_eapol_parent (void);
    200          extern void init_factory_mode();
    201          void send_mac_security_set_request(uint8_t *pBuff,uint16_t len);
    202          /*
    203          ** =============================================================================
    204          ** Private Function Definitions
    205          ** =============================================================================
    206          */
    207          
    208          /* None */
    209          
    210          /*
    211          ** =============================================================================
    212          ** External Variable Declarations
    213          ** =============================================================================
    214          */
    215          #if(FAN_FRQ_HOPPING_FEATURE_ENABLED == 1)
    216          extern void fan_freq_hop_start_hopping (void *data);
    217          #endif
    218          
    219          extern self_info_fan_mac_t mac_self_fan_info;
    220          
    221          
    222          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    223          extern void start_edfe_responce_timer(uint64_t responce_wait);
    224          extern void get_edfe_dst_ieee_addr(uint8_t *dest_ieee_addr);
    225          extern void start_edfe_receiver_responce_timer(uint64_t responce_wait);
    226          extern void stop_edfe_reciver_timer();
    227          extern edfe_info_t edfe_information; 
    228          void enable_disable_edfe_frame(uint8_t value,uint8_t edfe_frame_type);
    229          void send_edfe_initial_frame(uint8_t *src_addr , uint8_t value,uint8_t edfe_frame_type);
    230          uint8_t is_edfe_enable();
    231          #endif
    232          
    233          extern uint8_t MACSecKey1[16];
    234          
    235          #if WITH_SECURITY 
    236          //uint8_t neighbour_addr[8] = {LBR_ADDRESS};//for without epol with security

   \                                 In section .data, align 4
    237          uint8_t neighbour_addr[8] = {ROUTER_ADDRESS};//for without epol with security
   \                     neighbour_addr:
   \        0x0   0x11 0x22          DC8 17, 34, 51, 68, 0, 0, 0, 1
   \              0x33 0x44    
   \              0x00 0x00    
   \              0x00 0x01
    238          #endif
    239          
    240          /*
    241          ** =============================================================================
    242          ** External Function Prototypes
    243          ** =============================================================================
    244          */
    245          extern uint8_t response_laye_ID;
    246          extern void app_bm_free(uint8_t *pMem  );
    247          extern void start_upper_layer(uint8_t* lladdress);
    248          extern void send_mac_addr(uint8_t *buff , uint16_t len);
    249          extern uint8_t send_hif_conf_cb( uint8_t cmd_id,uint8_t status );
    250          extern void trickle_timer_pcs_stop(void);
    251          extern void set_mac_self_info_from_lbr(uint8_t *rec_ptr,uint16_t rec_len);
    252          extern void FAN_MAC_MLME_SET_Request
    253          (
    254                  uint8_t ie_identifier,		        /* header ie or payload ie */
    255                  uint8_t ie_subid, 			/* subid for each ie */	        
    256                  uint16_t Length,		  	/* length of value */
    257                  void *mac_value	                        /* pointer to the value*/
    258          );
    259          //extern void change_join_state(uint8_t attemt_index);
    260          extern void find_lowest_pancost_from_nbr_table_for_mac_address(uint8_t *src_addr);
    261          extern uint8_t generate_MAC_Security_Key (uint8_t live_gtk_key_index,uint16_t len);
    262          extern void add_dev_desc_on_MAC_for_security(uint8_t* macAddrOfNeighbour);
    263          
    264          /*Umesh : 31-01-2018*/
    265          extern void  set_mac_frame_counter_cmd ( uint32_t frameCntr );
    266          /*this not nedded this file*/
    267          extern uint8_t relay_reply_flag;
    268          extern void update_total_sending_dur_for_hr( void *s, void* tmr );
    269          extern void tsm_alarm(void *s, void* tmr );
    270          extern void send_next_pkt(void *s,void* tmr);
    271          #if(FAN_EAPOL_FEATURE_ENABLED == 1)
    272          extern void get_eapol_parent_address(uint8_t *eapol_parent);
    273          #endif
    274          extern void throttle_pc (void);
    275           
    276          /*
    277          ** =============================================================================
    278          ** Public Variables Definitions
    279          ** =============================================================================
    280          **/
    281          

   \                                 In section .bss, align 1
    282          bool upper_layer_started = false;
   \                     upper_layer_started:
   \        0x0                      DS8 1

   \                                 In section .bss, align 8
    283          fan_nwk_manager_sm_t fan_nwk_manager_app;
   \                     fan_nwk_manager_app:
   \        0x0                      DS8 624
    284          #ifdef WITH_SECURITY

   \                                 In section .bss, align 1
    285          uint8_t key_id_index  = 0x00;//0xFF;//temp //Umesh
   \                     key_id_index:
   \        0x0                      DS8 1
    286          #else
    287          uint8_t key_id_index  = 0xFF;
    288          #endif
    289          /*
    290          ** =============================================================================
    291          ** Public Function Prototypes
    292          ** =============================================================================
    293          */
    294          /*Umesh :31-01-2018*/
    295          //void App_MLME_ws_async_frame_Conf_cb( uint8_t status ,uint8_t async_frame_type );
    296          /*this is already declaired in header file*/
    297          
    298          void fan_nwk_manager_init( ); 
    299          void set_mac_security_on_LBR(uint8_t *rec_buff, uint16_t len);  
    300          void set_mac_security_on_router_node(uint8_t *rec_buff, uint16_t len);
    301          void App_MLME_WS_ASYNC_FRAME_Ind_cb
    302          (
    303               uint8_t status,
    304               uint8_t frame_type,
    305               mac_address_t *p_Srcaddr // Src address details
    306          	
    307          );
    308          
    309          
    310          extern sm_result_t node_factory_mode_state(fan_nwk_manager_sm_t *s, const sm_event_t *e);
    311          
    312          /*Umesh : 31-01-2018*/
    313          void get_self_pairing_id(uint8_t* p_pairing_id);
    314          void set_mac_security_enable_disable(uint8_t enable_security_flag); 
    315          void set_net_name_ie();
    316          void ws_asynch_frame_req();
    317          /*this function not needed here not using*/
    318          uint8_t get_current_join_state();
    319          uint8_t process_telec_set_operating_country( uint8_t CountryCode  ) ;
    320          
    321          
    322          void App_FAN_ack_Ind_cb( mac_address_t*  pSrcaddr,
    323              mac_address_t*  pDstaddr,
    324              uint8_t DSN,
    325              uint8_t rsl_value,
    326              uint8_t security_status
    327              );
    328          void App_FAN_no_ack_Ind_cb (void);
    329          /*
    330          ** =============================================================================
    331          ** Public Function Definitions
    332          ** =============================================================================
    333          */
    334          #if(APP_NWK_MANAGER_PROCESS_FEATURE_ENABLED == 1)
    335          
    336          L3_PROCESS_THREAD(nwk_manager_process, ev, data)
    337          {
    338            L3_PROCESS_BEGIN();
    339            
    340            while(1) 
    341            {
    342              L3_PROCESS_YIELD();
    343              nwk_manager_process_event_handler(ev, data);
    344            }
    345            L3_PROCESS_END();
    346          }
    347          /*----------------------------------------------------------------------------*/
    348          
    349          static uint8_t nwk_manager_process_event_handler(l3_process_event_t ev, l3_process_data_t data)
    350          {
    351            if (ev == FAN_NWK_MGR_START )
    352            {
    353               fan_nwk_manager_init( );
    354            }
    355            else if (ev == FAN_NWK_MGR_START_UPPER_LAYER )
    356            {
    357               start_upper_layer(fan_nwk_manager_app.node_basic_cfg.self_ieee_addr);        
    358            }
    359            else if (ev == SEND_MAC_ADDRESS_TO_LINUX )
    360            {  
    361              //send_mac_addr(fan_nwk_manager_app.node_basic_cfg.self_ieee_addr,8);  
    362            }
    363            else if (ev == SEND_FAN_MAC_START_CMD )
    364            {
    365               fan_mac_init(fan_nwk_manager_app.node_basic_cfg.fan_device_type);       
    366            }
    367            else if (ev == MAC_2_NHLE_CONFIRMATION)
    368            {
    369                process_mil_msgs ();
    370            }
    371            return 0;
    372          }
    373          /*----------------------------------------------------------------------------*/
    374          void fan_nwk_mgr_post_event( l3_process_event_t ev, uint8_t* data)
    375          {
    376            l3_process_post(&nwk_manager_process, ev, data);
    377          }
    378          
    379          void node_start_upper_layer_ready(void)
    380          {
    381            start_upper_layer(fan_nwk_manager_app.node_basic_cfg.self_ieee_addr);
    382            //fan_nwk_mgr_post_event(FAN_NWK_MGR_START_UPPER_LAYER, NULL);    
    383          } 
    384          
    385          void send_mac_address_to_linux(void)
    386          {
    387            fan_nwk_mgr_post_event(SEND_MAC_ADDRESS_TO_LINUX, NULL);    
    388          } 
    389          
    390          void send_mac_2_nhle_conf (void)
    391          {
    392            fan_nwk_mgr_post_event(MAC_2_NHLE_CONFIRMATION, NULL);    
    393          } 
    394               
    395          static void trigger_FAN_MAC_Start(void)
    396          {
    397            fan_nwk_mgr_post_event(SEND_FAN_MAC_START_CMD, NULL); 
    398          
    399          } 
    400          #else
    401          

   \                                 In section .text, align 2, keep-with-next
    402          void node_start_upper_layer_ready(void)
    403          {
   \                     node_start_upper_layer_ready: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    404            start_upper_layer(fan_nwk_manager_app.node_basic_cfg.self_ieee_addr);    
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable32_1
   \        0x6   0x.... 0x....      BL       start_upper_layer
    405          } 
   \        0xA   0xBD01             POP      {R0,PC}
    406          

   \                                 In section .text, align 2, keep-with-next
    407          static void trigger_FAN_MAC_Start(void)
    408          {
   \                     trigger_FAN_MAC_Start: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    409            fan_mac_init(fan_nwk_manager_app.node_basic_cfg.fan_device_type);      
   \        0x2   0x.... 0x....      LDR.W    R0,??DataTable30
   \        0x6   0x7B40             LDRB     R0,[R0, #+13]
   \        0x8   0x.... 0x....      BL       fan_mac_init
    410          
    411          } 
   \        0xC   0xBD01             POP      {R0,PC}
    412          

   \                                 In section .text, align 2, keep-with-next
    413          void send_mac_2_nhle_conf (void)
    414          {
   \                     send_mac_2_nhle_conf: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    415            process_mil_msgs ();   
   \        0x2   0x.... 0x....      BL       process_mil_msgs
    416          } 
   \        0x6   0xBD01             POP      {R0,PC}
    417             
    418          
    419          #endif // #if(APP_NWK_MANAGER_PROCESS_FEATURE_ENABLED == 1)
    420          /******************************************************************************/
    421          
    422          
    423          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    424          void App_factory_mode_conf_cb(uint8_t status)
    425          {
   \                     App_factory_mode_conf_cb: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    426            sm_event_t e = { (sm_trigger_t) TSM_TRIGGER_TX_COMPLETE, { 0 }};
   \        0x4   0x.... 0x....      LDR.W    R2,??DataTable30_1
   \        0x8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xC   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    427            e.param.scalar = status;
   \       0x10   0xF88D 0x4004      STRB     R4,[SP, #+4]
    428            SM_DISPATCH( (sm_t *) &fan_nwk_manager_app, &e );
   \       0x14   0x.... 0x....      LDR.W    R2,??DataTable30
   \       0x18   0x6810             LDR      R0,[R2, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD004             BEQ.N    ??App_factory_mode_conf_cb_0
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0x0010             MOVS     R0,R2
   \       0x22   0x6812             LDR      R2,[R2, #+0]
   \       0x24   0x4790             BLX      R2
   \       0x26   0xE002             B.N      ??App_factory_mode_conf_cb_1
   \                     ??App_factory_mode_conf_cb_0: (+1)
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0x.... 0x....      BL       error_increment
    429          }
   \                     ??App_factory_mode_conf_cb_1: (+1)
   \       0x2E   0xBD13             POP      {R0,R1,R4,PC}

   \                                 In section .rodata, align 4
   \                     ?_3:
   \        0x0   0x0A               DC8 10
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
    430          
    431          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    432          uint8_t process_telec_set_operating_country( uint8_t CountryCode  )  
    433          {   
   \                     process_telec_set_operating_country: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x0001             MOVS     R1,R0
    434              if(CountryCode == 0x0D)
   \        0x4   0x0008             MOVS     R0,R1
   \        0x6   0xB2C0             UXTB     R0,R0
   \        0x8   0x280D             CMP      R0,#+13
   \        0xA   0xD126             BNE.N    ??process_telec_set_operating_country_0
    435              {
    436                uint8_t i = 0;
   \        0xC   0x2000             MOVS     R0,#+0
    437                uint8_t ext_freq_band_id = 0xFF; 
   \        0xE   0x26FF             MOVS     R6,#+255
   \       0x10   0x0032             MOVS     R2,R6
    438                uint32_t freq_band_id = 0xFFFFFFFF;
   \       0x12   0xF05F 0x34FF      MOVS     R4,#+4294967295
   \       0x16   0x0023             MOVS     R3,R4
    439                uint32_t temp_val = 0xFFFFFFFF;
    440                fan_nwk_manager_app.node_basic_cfg.operatinng_country  = 0xFF;
   \       0x18   0x.... 0x....      LDR.W    R5,??DataTable30
   \       0x1C   0xF885 0x602C      STRB     R6,[R5, #+44]
    441                temp_val = CountryCode; //ChangeEndianness ((*(uint32_t *)CountryCode));
   \       0x20   0x000E             MOVS     R6,R1
   \       0x22   0xB2F6             UXTB     R6,R6
    442                freq_band_id = (uint32_t) opearating_zone_list[temp_val].current_phy_band_ID;
   \       0x24   0x.... 0x....      LDR.W    R12,??DataTable33
   \       0x28   0xF81C 0x7036      LDRB     R7,[R12, R6, LSL #+3]
    443                
    444                if ( freq_band_id == 15)
   \       0x2C   0x2F0F             CMP      R7,#+15
   \       0x2E   0xD103             BNE.N    ??process_telec_set_operating_country_1
    445                  ext_freq_band_id = (uint8_t)opearating_zone_list[temp_val].current_ext_phy_band_ID;
   \       0x30   0xEB0C 0x03C6      ADD      R3,R12,R6, LSL #+3
   \       0x34   0x785B             LDRB     R3,[R3, #+1]
   \       0x36   0x001A             MOVS     R2,R3
    446          
    447                for(i=0;i<(MAX_REGULATORY_DOMAIN_SUPPORTED);i++)
   \                     ??process_telec_set_operating_country_1: (+1)
   \       0x38   0x2300             MOVS     R3,#+0
   \                     ??process_telec_set_operating_country_2: (+1)
   \       0x3A   0x0018             MOVS     R0,R3
   \       0x3C   0xB2C0             UXTB     R0,R0
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xD109             BNE.N    ??process_telec_set_operating_country_3
    448                {
    449                  //{14, 0xFF,0x4F000000 }
    450                  if((14 == freq_band_id ) &&  (0xFF == ext_freq_band_id ))
   \       0x42   0x2F0E             CMP      R7,#+14
   \       0x44   0xD105             BNE.N    ??process_telec_set_operating_country_4
   \       0x46   0x0010             MOVS     R0,R2
   \       0x48   0xB2C0             UXTB     R0,R0
   \       0x4A   0x28FF             CMP      R0,#+255
   \       0x4C   0xD101             BNE.N    ??process_telec_set_operating_country_4
    451                  {
    452                    fan_nwk_manager_app.node_basic_cfg.operatinng_country  = temp_val;  
   \       0x4E   0xF885 0x602C      STRB     R6,[R5, #+44]
    453                  }
    454                }
   \                     ??process_telec_set_operating_country_4: (+1)
   \       0x52   0x1C5B             ADDS     R3,R3,#+1
   \       0x54   0xE7F1             B.N      ??process_telec_set_operating_country_2
    455              }    
    456              else
    457              {
    458                return 1;
    459              }
    460             return 0;
   \                     ??process_telec_set_operating_country_3: (+1)
   \       0x56   0x2000             MOVS     R0,#+0
   \       0x58   0xE000             B.N      ??process_telec_set_operating_country_5
   \                     ??process_telec_set_operating_country_0: (+1)
   \       0x5A   0x2001             MOVS     R0,#+1
   \                     ??process_telec_set_operating_country_5: (+1)
   \       0x5C   0xBCF0             POP      {R4-R7}
   \       0x5E   0x4770             BX       LR
    461          }
    462          
    463          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    464          void fan_nwk_manager_init( )
    465          {
   \                     fan_nwk_manager_init: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
    466              fan_nwk_manager_sm_t *app = &fan_nwk_manager_app;
   \        0x4   0x.... 0x....      LDR.W    R5,??DataTable30
   \        0x8   0x002C             MOVS     R4,R5
    467            uint8_t def_chans[8] = {DEFAULT_CHANNEL_BIT_MAP_ARRAY};
   \        0xA   0xAB02             ADD      R3,SP,#+8
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable31
   \       0x10   0xE9D0 0x2100      LDRD     R2,R1,[R0, #+0]
   \       0x14   0xE9C3 0x2100      STRD     R2,R1,[R3, #+0]
    468            sm_event_t e = { (sm_trigger_t) TRIGGER_ENTRY, { 0 } };
   \       0x18   0x.... 0x....      LDR.W    R2,??DataTable32_2
   \       0x1C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0x20   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
    469            
    470            process_telec_set_operating_country( COUNTRY_CODE_VAL  )  ;
   \       0x24   0x200D             MOVS     R0,#+13
   \       0x26   0x.... 0x....      BL       process_telec_set_operating_country
    471            
    472            memcpy((uint8_t*)&(app->def_chan_bit_map),def_chans,8);
   \       0x2A   0x2608             MOVS     R6,#+8
   \       0x2C   0xAF02             ADD      R7,SP,#+8
   \       0x2E   0xF514 0x78A0      ADDS     R8,R4,#+320
   \       0x32   0x0032             MOVS     R2,R6
   \       0x34   0x0039             MOVS     R1,R7
   \       0x36   0x4640             MOV      R0,R8
   \       0x38   0x.... 0x....      BL       __aeabi_memcpy
    473            app->result = MAC_SUCCESS;
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0xF884 0x013C      STRB     R0,[R4, #+316]
    474            //app->active_layer = DEF_LAYER_ID;
    475            if(fan_nwk_manager_app.node_basic_cfg.operational_mode == FACTORY_MODE)
   \       0x42   0x7B28             LDRB     R0,[R5, #+12]
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD125             BNE.N    ??fan_nwk_manager_init_0
    476            {
    477              app_log("Device is in FACTORY_MODE\r\n");
   \       0x48   0x.... 0x....      BL       _app_log_time
   \       0x4C   0x.... 0x....      BL       _app_log_counter
   \       0x50   0x.... 0x....      LDR.W    R1,??DataTable33_1
   \       0x54   0x.... 0x....      LDR.W    R0,??DataTable33_2
   \       0x58   0x6800             LDR      R0,[R0, #+0]
   \       0x5A   0x.... 0x....      BL       sl_iostream_printf
    478              process_telec_set_operating_country(fan_nwk_manager_app.node_basic_cfg.operatinng_country);
   \       0x5E   0xF895 0x002C      LDRB     R0,[R5, #+44]
   \       0x62   0x.... 0x....      BL       process_telec_set_operating_country
    479              init_factory_mode();
   \       0x66   0x.... 0x....      BL       init_factory_mode
    480              app->super.state = (sm_state_t)&node_factory_mode_state;
   \       0x6A   0x.... 0x....      LDR.W    R0,??DataTable33_3
   \       0x6E   0x6020             STR      R0,[R4, #+0]
    481              SM_DISPATCH((sm_t *)app, &e);
   \       0x70   0x2C00             CMP      R4,#+0
   \       0x72   0xD007             BEQ.N    ??fan_nwk_manager_init_1
   \       0x74   0x6820             LDR      R0,[R4, #+0]
   \       0x76   0x2800             CMP      R0,#+0
   \       0x78   0xD004             BEQ.N    ??fan_nwk_manager_init_1
   \       0x7A   0x4669             MOV      R1,SP
   \       0x7C   0x0020             MOVS     R0,R4
   \       0x7E   0x6822             LDR      R2,[R4, #+0]
   \       0x80   0x4790             BLX      R2
   \       0x82   0xE002             B.N      ??fan_nwk_manager_init_2
   \                     ??fan_nwk_manager_init_1: (+1)
   \       0x84   0x2000             MOVS     R0,#+0
   \       0x86   0x.... 0x....      BL       error_increment
    482              send_hif_conf_cb(NODE_START_STOP_CONF,0x00);
   \                     ??fan_nwk_manager_init_2: (+1)
   \       0x8A   0x2100             MOVS     R1,#+0
   \       0x8C   0x2031             MOVS     R0,#+49
   \       0x8E   0x.... 0x....      BL       send_hif_conf_cb
   \       0x92   0xE01A             B.N      ??fan_nwk_manager_init_3
    483            }
    484            else
    485            {
    486              app_log("Device is in RUN_MODE\r\n");
   \                     ??fan_nwk_manager_init_0: (+1)
   \       0x94   0x.... 0x....      BL       _app_log_time
   \       0x98   0x.... 0x....      BL       _app_log_counter
   \       0x9C   0x.... 0x....      LDR.W    R1,??DataTable33_4
   \       0xA0   0x.... 0x....      LDR.W    R0,??DataTable33_2
   \       0xA4   0x6800             LDR      R0,[R0, #+0]
   \       0xA6   0x.... 0x....      BL       sl_iostream_printf
    487              app->super.state = (sm_state_t)&node_startup;
   \       0xAA   0x.... 0x....      ADR.W    R0,node_startup
   \       0xAE   0x6020             STR      R0,[R4, #+0]
    488              SM_DISPATCH((sm_t *)app, &e);
   \       0xB0   0x2C00             CMP      R4,#+0
   \       0xB2   0xD007             BEQ.N    ??fan_nwk_manager_init_4
   \       0xB4   0x6820             LDR      R0,[R4, #+0]
   \       0xB6   0x2800             CMP      R0,#+0
   \       0xB8   0xD004             BEQ.N    ??fan_nwk_manager_init_4
   \       0xBA   0x4669             MOV      R1,SP
   \       0xBC   0x0020             MOVS     R0,R4
   \       0xBE   0x6822             LDR      R2,[R4, #+0]
   \       0xC0   0x4790             BLX      R2
   \       0xC2   0xE002             B.N      ??fan_nwk_manager_init_3
   \                     ??fan_nwk_manager_init_4: (+1)
   \       0xC4   0x2000             MOVS     R0,#+0
   \       0xC6   0x.... 0x....      BL       error_increment
    489            }
    490          }
   \                     ??fan_nwk_manager_init_3: (+1)
   \       0xCA   0xE8BD 0x81FF      POP      {R0-R8,PC}

   \                                 In section .rodata, align 4
   \                     ?_4:
   \        0x0   0x00               DC8 0
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
    491          
    492          
    493          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    494          static sm_result_t node_idle(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    495          {
   \                     node_idle: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    496              node_basic_config_t* p_basic_conf = &(fan_nwk_manager_app.node_basic_cfg);
   \        0x6   0x.... 0x....      LDR.W    R6,??DataTable33_5
    497          
    498              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0xA   0x7828             LDRB     R0,[R5, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD002             BEQ.N    ??node_idle_0
   \       0x10   0x2802             CMP      R0,#+2
   \       0x12   0xD003             BEQ.N    ??node_idle_1
   \       0x14   0xE018             B.N      ??node_idle_2
    499              {
    500                case TRIGGER_ENTRY:
    501                  s->state_ind = IDLE_STATE;
   \                     ??node_idle_0: (+1)
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0x7220             STRB     R0,[R4, #+8]
    502                  break;
   \       0x1A   0xE015             B.N      ??node_idle_3
    503                
    504                case TRIGGER_START_NODE:  
    505                  if( ((p_basic_conf->phy_mode != FSK_PHY_MODE_2) &&
    506                    ( p_basic_conf->phy_mode != FSK_PHY_MODE_1 ))||
    507                    (  p_basic_conf->selected_channel == 0xFFFF  ) ||
    508                    (  p_basic_conf->selected_pan_id == 0xFFFF )            
    509                    )
   \                     ??node_idle_1: (+1)
   \       0x1C   0x78B0             LDRB     R0,[R6, #+2]
   \       0x1E   0x2802             CMP      R0,#+2
   \       0x20   0xD002             BEQ.N    ??node_idle_4
   \       0x22   0x78B0             LDRB     R0,[R6, #+2]
   \       0x24   0x2801             CMP      R0,#+1
   \       0x26   0xD107             BNE.N    ??node_idle_5
   \                     ??node_idle_4: (+1)
   \       0x28   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x2C   0x88B1             LDRH     R1,[R6, #+4]
   \       0x2E   0x4281             CMP      R1,R0
   \       0x30   0xD002             BEQ.N    ??node_idle_5
   \       0x32   0x88F1             LDRH     R1,[R6, #+6]
   \       0x34   0x4281             CMP      R1,R0
   \       0x36   0xD101             BNE.N    ??node_idle_6
    510                    {
    511                      return NULL;
   \                     ??node_idle_5: (+1)
   \       0x38   0x2000             MOVS     R0,#+0
   \       0x3A   0xE006             B.N      ??node_idle_7
    512                    }
    513                  else
    514                    {  
    515                        sm_transit((sm_t *)s, (sm_state_t)&node_startup );
   \                     ??node_idle_6: (+1)
   \       0x3C   0x.... 0x....      ADR.W    R1,node_startup
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0x.... 0x....      BL       sm_transit
    516                    }
    517                  break;      
   \       0x46   0xE7FF             B.N      ??node_idle_3
    518          
    519                default:
    520                  break;          
    521              }
    522              return NULL;
   \                     ??node_idle_2: (+1)
   \                     ??node_idle_3: (+1)
   \       0x48   0x2000             MOVS     R0,#+0
   \                     ??node_idle_7: (+1)
   \       0x4A   0xBD70             POP      {R4-R6,PC}
    523          }
    524          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    525          static sm_result_t node_startup(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    526          {
   \                     node_startup: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    527              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0x6   0x7828             LDRB     R0,[R5, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD003             BEQ.N    ??node_startup_0
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xD018             BEQ.N    ??node_startup_1
   \       0x10   0xD314             BCC.N    ??node_startup_2
   \       0x12   0xE017             B.N      ??node_startup_3
    528              {
    529                case TRIGGER_ENTRY:
    530                  s->state_ind = STARTUP_STATE;
   \                     ??node_startup_0: (+1)
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x7220             STRB     R0,[R4, #+8]
    531          
    532                  if((fan_mac_information_data.state_ind == JOIN_STATE_5)
    533                     
    534                     #if(APP_NVM_FEATURE_ENABLED == 1)
    535                   &&(fan_mac_information_data.is_start_from_nvm == true)
    536          #endif
    537                     )
   \       0x18   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \       0x1C   0x7A00             LDRB     R0,[R0, #+8]
   \       0x1E   0x2806             CMP      R0,#+6
   \       0x20   0xD103             BNE.N    ??node_startup_4
    538                    /*when ever device bootup from join state 5 no need to update mlme reset request*/
    539                    MLME_RESET_Request( false  );
   \       0x22   0x2000             MOVS     R0,#+0
   \       0x24   0x.... 0x....      BL       MLME_RESET_Request
   \       0x28   0xE002             B.N      ??node_startup_5
    540                  else
    541                  /*When ever a device wants to start or join network first it should reset
    542                  its PAN by issuing MLME-Reset primtive to the MAC Layer*/
    543                    MLME_RESET_Request( true  );
   \                     ??node_startup_4: (+1)
   \       0x2A   0x2001             MOVS     R0,#+1
   \       0x2C   0x.... 0x....      BL       MLME_RESET_Request
    544          
    545                  sm_transit((sm_t *)s, (sm_state_t)&node_resetting );
   \                     ??node_startup_5: (+1)
   \       0x30   0x.... 0x....      ADR.W    R1,node_resetting
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0x.... 0x....      BL       sm_transit
    546                  break;
   \       0x3A   0xE003             B.N      ??node_startup_6
    547                
    548                case SM_TRIGGER_EXIT:
    549                  s->previous_state =  s->state_ind;
   \                     ??node_startup_2: (+1)
   \       0x3C   0x7A20             LDRB     R0,[R4, #+8]
   \       0x3E   0x7260             STRB     R0,[R4, #+9]
    550                  break;
   \       0x40   0xE000             B.N      ??node_startup_6
    551          
    552                case TRIGGER_START_NODE:
    553                  break;
   \                     ??node_startup_1: (+1)
   \       0x42   0xE7FF             B.N      ??node_startup_6
    554          
    555                default:
    556                  break;
    557              }
    558              return NULL;
   \                     ??node_startup_3: (+1)
   \                     ??node_startup_6: (+1)
   \       0x44   0x2000             MOVS     R0,#+0
   \       0x46   0xBD32             POP      {R1,R4,R5,PC}
    559          }
    560          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    561          static sm_result_t node_resetting(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    562          {
   \                     node_resetting: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    563              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0x6   0x7828             LDRB     R0,[R5, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD005             BEQ.N    ??node_resetting_0
   \        0xC   0x2802             CMP      R0,#+2
   \        0xE   0xD006             BEQ.N    ??node_resetting_1
   \       0x10   0xD31D             BCC.N    ??node_resetting_2
   \       0x12   0x2803             CMP      R0,#+3
   \       0x14   0xD004             BEQ.N    ??node_resetting_3
   \       0x16   0xE01D             B.N      ??node_resetting_4
    564              {
    565                case TRIGGER_ENTRY:
    566                  s->state_ind = RESETTING_STATE;
   \                     ??node_resetting_0: (+1)
   \       0x18   0x2002             MOVS     R0,#+2
   \       0x1A   0x7220             STRB     R0,[R4, #+8]
    567                  break;
   \       0x1C   0xE01A             B.N      ??node_resetting_5
    568          
    569                case TRIGGER_START_NODE:
    570                  break;    
   \                     ??node_resetting_1: (+1)
   \       0x1E   0xE019             B.N      ??node_resetting_5
    571          
    572                case TRIGGER_RESET_CONF:
    573                  if( s->result == MAC_SUCCESS )
   \                     ??node_resetting_3: (+1)
   \       0x20   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD10C             BNE.N    ??node_resetting_6
    574                  {
    575                    MLME_SET_Request
    576                    (
    577                        macIEEEAddress,
    578                        0,
    579                        IEEE_ADDRESS_LENGTH,
    580                        s->node_basic_cfg.self_ieee_addr
    581                    );
   \       0x28   0xF114 0x0314      ADDS     R3,R4,#+20
   \       0x2C   0x2208             MOVS     R2,#+8
   \       0x2E   0x2100             MOVS     R1,#+0
   \       0x30   0x206F             MOVS     R0,#+111
   \       0x32   0x.... 0x....      BL       MLME_SET_Request
    582                    
    583                    sm_transit((sm_t *)s, (sm_state_t)&node_initializing );
   \       0x36   0x.... 0x....      ADR.W    R1,node_initializing
   \       0x3A   0x0020             MOVS     R0,R4
   \       0x3C   0x.... 0x....      BL       sm_transit
   \       0x40   0xE004             B.N      ??node_resetting_7
    584                  }
    585                  else
    586                  {
    587                    sm_transit((sm_t *)s, (sm_state_t)&node_idle );
   \                     ??node_resetting_6: (+1)
   \       0x42   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       sm_transit
    588                  }
    589                  break;
   \                     ??node_resetting_7: (+1)
   \       0x4C   0xE002             B.N      ??node_resetting_5
    590          
    591                case SM_TRIGGER_EXIT:
    592                  s->previous_state =  s->state_ind;
   \                     ??node_resetting_2: (+1)
   \       0x4E   0x7A20             LDRB     R0,[R4, #+8]
   \       0x50   0x7260             STRB     R0,[R4, #+9]
    593                  break;
   \       0x52   0xE7FF             B.N      ??node_resetting_5
    594                
    595                default:
    596                  break;
    597              }
    598              return NULL;
   \                     ??node_resetting_4: (+1)
   \                     ??node_resetting_5: (+1)
   \       0x54   0x2000             MOVS     R0,#+0
   \       0x56   0xBD32             POP      {R1,R4,R5,PC}
    599          }
    600          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    601          static sm_result_t node_initializing(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    602          {
   \                     node_initializing: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    603              uint32_t current_page = 0;
   \        0x6   0x2000             MOVS     R0,#+0
   \        0x8   0x9000             STR      R0,[SP, #+0]
    604            
    605              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0xA   0x7828             LDRB     R0,[R5, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD006             BEQ.N    ??node_initializing_0
   \       0x10   0x2801             CMP      R0,#+1
   \       0x12   0xD051             BEQ.N    ??node_initializing_1
   \       0x14   0x2802             CMP      R0,#+2
   \       0x16   0xD005             BEQ.N    ??node_initializing_2
   \       0x18   0x2804             CMP      R0,#+4
   \       0x1A   0xD004             BEQ.N    ??node_initializing_3
   \       0x1C   0xE04F             B.N      ??node_initializing_4
    606          	{
    607                      case TRIGGER_ENTRY:
    608                            s->state_ind = INITIALIZING_STATE;
   \                     ??node_initializing_0: (+1)
   \       0x1E   0x2003             MOVS     R0,#+3
   \       0x20   0x7220             STRB     R0,[R4, #+8]
    609                            break;
   \       0x22   0xE04C             B.N      ??node_initializing_5
    610                      case TRIGGER_START_NODE:
    611          
    612                          
    613                            break;
   \                     ??node_initializing_2: (+1)
   \       0x24   0xE04B             B.N      ??node_initializing_5
    614                      case TRIGGER_SET_CONF:
    615                          /*Once the extended address is set then the short address is alloted*/
    616          	    	if( s->result == MAC_SUCCESS )
   \                     ??node_initializing_3: (+1)
   \       0x26   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0x2A   0x2800             CMP      R0,#+0
   \       0x2C   0xD13E             BNE.N    ??node_initializing_6
    617          	    	{
    618                             switch( e->param.scalar )
   \       0x2E   0x7928             LDRB     R0,[R5, #+4]
   \       0x30   0x2822             CMP      R0,#+34
   \       0x32   0xD011             BEQ.N    ??node_initializing_7
   \       0x34   0x2842             CMP      R0,#+66
   \       0x36   0xD026             BEQ.N    ??node_initializing_8
   \       0x38   0x2852             CMP      R0,#+82
   \       0x3A   0xD02F             BEQ.N    ??node_initializing_9
   \       0x3C   0x2853             CMP      R0,#+83
   \       0x3E   0xD017             BEQ.N    ??node_initializing_10
   \       0x40   0x286F             CMP      R0,#+111
   \       0x42   0xD132             BNE.N    ??node_initializing_11
    619                             {
    620                                case macIEEEAddress:
    621                                  
    622                                      current_page  = get_sun_page_value();
   \                     ??node_initializing_12: (+1)
   \       0x44   0x.... 0x....      BL       get_sun_page_value
   \       0x48   0x9000             STR      R0,[SP, #+0]
    623                                       MLME_SET_Request
    624                                       (
    625                                            phyCurrentSUNPageEntry,
    626                                            0,
    627                                            4,
    628                                            &current_page
    629                                       );                      
   \       0x4A   0x466B             MOV      R3,SP
   \       0x4C   0x2204             MOVS     R2,#+4
   \       0x4E   0x2100             MOVS     R1,#+0
   \       0x50   0x2022             MOVS     R0,#+34
   \       0x52   0x.... 0x....      BL       MLME_SET_Request
    630                               break;
   \       0x56   0xE02E             B.N      ??node_initializing_13
    631          
    632                              case phyCurrentSUNPageEntry:
    633                                /* once set the phy current page then set operating class 
    634                                logic here*/
    635          
    636                                    
    637                                     s->self_short_addr = SELF_SHORT_ADDRESS;
   \                     ??node_initializing_7: (+1)
   \       0x58   0xF24A 0x10B1      MOVW     R0,#+41393
   \       0x5C   0xF8A4 0x013E      STRH     R0,[R4, #+318]
    638                                      MLME_SET_Request
    639                                      (
    640                                           macShortAddress,
    641                                           0,
    642                                           SHORT_ADDRESS_LENGTH,
    643                                           &(s->self_short_addr)
    644                                      );                     
   \       0x60   0xF514 0x739F      ADDS     R3,R4,#+318
   \       0x64   0x2202             MOVS     R2,#+2
   \       0x66   0x2100             MOVS     R1,#+0
   \       0x68   0x2053             MOVS     R0,#+83
   \       0x6A   0x.... 0x....      BL       MLME_SET_Request
    645                                break;
   \       0x6E   0xE022             B.N      ??node_initializing_13
    646                                
    647                              case macShortAddress:
    648                               
    649                                  s->one_byte_value = 0x0; //false
   \                     ??node_initializing_10: (+1)
   \       0x70   0x2000             MOVS     R0,#+0
   \       0x72   0xF884 0x013D      STRB     R0,[R4, #+317]
    650          
    651                                      MLME_SET_Request
    652                                      (
    653                                           macAutoRequest,
    654                                           0,
    655                                           0x01,
    656                                           &(s->one_byte_value)
    657                                      );
   \       0x76   0xF204 0x133D      ADDW     R3,R4,#+317
   \       0x7A   0x2201             MOVS     R2,#+1
   \       0x7C   0x2100             MOVS     R1,#+0
   \       0x7E   0x2042             MOVS     R0,#+66
   \       0x80   0x.... 0x....      BL       MLME_SET_Request
    658                                  break;
   \       0x84   0xE017             B.N      ??node_initializing_13
    659                                   
    660                              case macAutoRequest:
    661                                // this was set since we are trying to create a PAN coordinator, so keep the receiver ON when idle
    662                                     s->one_byte_value = 1;
   \                     ??node_initializing_8: (+1)
   \       0x86   0x2001             MOVS     R0,#+1
   \       0x88   0xF884 0x013D      STRB     R0,[R4, #+317]
    663                                     MLME_SET_Request
    664                                       (
    665                                               macRxOnWhenIdle,
    666                                               0,
    667                                               1,
    668                                               &(s->one_byte_value)
    669                                       );
   \       0x8C   0xF204 0x133D      ADDW     R3,R4,#+317
   \       0x90   0x2201             MOVS     R2,#+1
   \       0x92   0x2100             MOVS     R1,#+0
   \       0x94   0x2052             MOVS     R0,#+82
   \       0x96   0x.... 0x....      BL       MLME_SET_Request
    670                                 break;
   \       0x9A   0xE00C             B.N      ??node_initializing_13
    671                                 
    672                              case macRxOnWhenIdle:
    673                                   sm_transit((sm_t *)s, (sm_state_t)&dev_ready_without_scanning );
   \                     ??node_initializing_9: (+1)
   \       0x9C   0x.... 0x....      ADR.W    R1,dev_ready_without_scanning
   \       0xA0   0x0020             MOVS     R0,R4
   \       0xA2   0x.... 0x....      BL       sm_transit
    674                               return NULL;
   \       0xA6   0x2000             MOVS     R0,#+0
   \       0xA8   0xE00A             B.N      ??node_initializing_14
    675                               
    676                                break;
    677                              
    678                              default:
    679                                break;
   \                     ??node_initializing_11: (+1)
   \       0xAA   0xE004             B.N      ??node_initializing_13
    680                                  }	    		
    681          	    	}
    682          	    	else
    683          	    	{
    684                            sm_transit((sm_t *)s, (sm_state_t)&node_idle );
   \                     ??node_initializing_6: (+1)
   \       0xAC   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \       0xB0   0x0020             MOVS     R0,R4
   \       0xB2   0x.... 0x....      BL       sm_transit
    685          	    	}
    686          	    	break;
   \                     ??node_initializing_13: (+1)
   \       0xB6   0xE002             B.N      ??node_initializing_5
    687                    
    688                    case SM_TRIGGER_EXIT:
    689                      s->previous_state =  s->state_ind;
   \                     ??node_initializing_1: (+1)
   \       0xB8   0x7A20             LDRB     R0,[R4, #+8]
   \       0xBA   0x7260             STRB     R0,[R4, #+9]
    690                    break;
   \       0xBC   0xE7FF             B.N      ??node_initializing_5
    691                    
    692          	     default:
    693          	     	break;
    694          	}
    695          	return NULL;
   \                     ??node_initializing_4: (+1)
   \                     ??node_initializing_5: (+1)
   \       0xBE   0x2000             MOVS     R0,#+0
   \                     ??node_initializing_14: (+1)
   \       0xC0   0xBD32             POP      {R1,R4,R5,PC}
    696          }
    697          /*----------------------------------------------------------------------------*/
    698          
    699          

   \                                 In section .text, align 4, keep-with-next
    700          static sm_result_t dev_ready_without_scanning(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    701          {
   \                     dev_ready_without_scanning: (+1)
   \        0x0   0xB57F             PUSH     {R0-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x2108             MOVS     R1,#+8
   \        0x8   0x2200             MOVS     R2,#+0
   \        0xA   0xAE01             ADD      R6,SP,#+4
   \        0xC   0x0030             MOVS     R0,R6
   \        0xE   0x.... 0x....      BL       __aeabi_memset
    702             
    703                  uint8_t parentAddr[8] ={0};
    704          	switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \       0x12   0x7828             LDRB     R0,[R5, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD004             BEQ.N    ??dev_ready_without_scanning_0
   \       0x18   0x2801             CMP      R0,#+1
   \       0x1A   0xD031             BEQ.N    ??dev_ready_without_scanning_1
   \       0x1C   0x2804             CMP      R0,#+4
   \       0x1E   0xD009             BEQ.N    ??dev_ready_without_scanning_2
   \       0x20   0xE031             B.N      ??dev_ready_without_scanning_3
    705          	{
    706          		case TRIGGER_ENTRY:
    707                              s->state_ind = DEV_READY_WITHOUT_SCANNING_STATE;
   \                     ??dev_ready_without_scanning_0: (+1)
   \       0x22   0x200D             MOVS     R0,#+13
   \       0x24   0x7220             STRB     R0,[R4, #+8]
    708                              
    709                              MLME_SET_Request
    710                                        (
    711                                             macCoordExtendedAddress,
    712                                             0,
    713                                             IEEE_ADDRESS_LENGTH,
    714                                             (uint8_t*)(parentAddr)
    715                                        );
   \       0x26   0xAB01             ADD      R3,SP,#+4
   \       0x28   0x2208             MOVS     R2,#+8
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x204A             MOVS     R0,#+74
   \       0x2E   0x.... 0x....      BL       MLME_SET_Request
    716                  
    717                              break;
   \       0x32   0xE028             B.N      ??dev_ready_without_scanning_4
    718                              
    719                    case TRIGGER_SET_CONF:
    720                        /*Once the extended address is set then the short address is alloted*/
    721                         if( s->result == MAC_SUCCESS )
   \                     ??dev_ready_without_scanning_2: (+1)
   \       0x34   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD120             BNE.N    ??dev_ready_without_scanning_5
    722                         {
    723                           switch( e->param.scalar )
   \       0x3C   0x7928             LDRB     R0,[R5, #+4]
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xD017             BEQ.N    ??dev_ready_without_scanning_6
   \       0x42   0x284A             CMP      R0,#+74
   \       0x44   0xD002             BEQ.N    ??dev_ready_without_scanning_7
   \       0x46   0x2850             CMP      R0,#+80
   \       0x48   0xD008             BEQ.N    ??dev_ready_without_scanning_8
   \       0x4A   0xE018             B.N      ??dev_ready_without_scanning_9
    724                           {
    725                           case macCoordExtendedAddress:
    726                             
    727                             MLME_SET_Request
    728                               (
    729                                macPANId,
    730                                0,
    731                                SHORT_ADDRESS_LENGTH,
    732                                &(s->node_basic_cfg.selected_pan_id)
    733                                  );
   \                     ??dev_ready_without_scanning_7: (+1)
   \       0x4C   0xF114 0x0312      ADDS     R3,R4,#+18
   \       0x50   0x2202             MOVS     R2,#+2
   \       0x52   0x2100             MOVS     R1,#+0
   \       0x54   0x2050             MOVS     R0,#+80
   \       0x56   0x.... 0x....      BL       MLME_SET_Request
    734                             
    735                             break;
   \       0x5A   0xE010             B.N      ??dev_ready_without_scanning_5
    736                           case macPANId:  
    737                             {
    738                               uint16_t channel = get_sun_channel();
   \                     ??dev_ready_without_scanning_8: (+1)
   \       0x5C   0x.... 0x....      BL       get_sun_channel
   \       0x60   0xF8AD 0x0000      STRH     R0,[SP, #+0]
    739                               MLME_SET_Request
    740                                 (
    741                                  phyCurrentChannel,
    742                                  0,
    743                                  2,
    744                                  &channel
    745                                    );
   \       0x64   0x466B             MOV      R3,SP
   \       0x66   0x2202             MOVS     R2,#+2
   \       0x68   0x2100             MOVS     R1,#+0
   \       0x6A   0x2000             MOVS     R0,#+0
   \       0x6C   0x.... 0x....      BL       MLME_SET_Request
    746                             }
    747                             break;
   \       0x70   0xE005             B.N      ??dev_ready_without_scanning_5
    748                           case phyCurrentChannel:                           
    749                             {
    750                               sm_transit((sm_t *)s, (sm_state_t)&node_starting_network );
   \                     ??dev_ready_without_scanning_6: (+1)
   \       0x72   0x.... 0x....      ADR.W    R1,node_starting_network
   \       0x76   0x0020             MOVS     R0,R4
   \       0x78   0x.... 0x....      BL       sm_transit
    751                             }
    752                             break;          
   \       0x7C   0xE7FF             B.N      ??dev_ready_without_scanning_5
    753                           default:
    754                             break;
    755                              }
    756                         }
    757                         break;
   \                     ??dev_ready_without_scanning_9: (+1)
   \                     ??dev_ready_without_scanning_5: (+1)
   \       0x7E   0xE002             B.N      ??dev_ready_without_scanning_4
    758                         
    759             
    760                    case SM_TRIGGER_EXIT:
    761                      s->previous_state =  s->state_ind;
   \                     ??dev_ready_without_scanning_1: (+1)
   \       0x80   0x7A20             LDRB     R0,[R4, #+8]
   \       0x82   0x7260             STRB     R0,[R4, #+9]
    762                    break;
   \       0x84   0xE7FF             B.N      ??dev_ready_without_scanning_4
    763          	     default:
    764          	     	break;
    765          	}
    766          	return NULL;
   \                     ??dev_ready_without_scanning_3: (+1)
   \                     ??dev_ready_without_scanning_4: (+1)
   \       0x86   0x2000             MOVS     R0,#+0
   \       0x88   0xB004             ADD      SP,SP,#+16
   \       0x8A   0xBD70             POP      {R4-R6,PC}
    767          }
    768          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    769          static sm_result_t node_starting_network(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    770          {
   \                     node_starting_network: (+1)
   \        0x0   0xB530             PUSH     {R4,R5,LR}
   \        0x2   0xB087             SUB      SP,SP,#+28
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    771              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0x8   0x7828             LDRB     R0,[R5, #+0]
   \        0xA   0x2800             CMP      R0,#+0
   \        0xC   0xD00A             BEQ.N    ??node_starting_network_0
   \        0xE   0x2802             CMP      R0,#+2
   \       0x10   0xD02F             BEQ.N    ??node_starting_network_1
   \       0x12   0xF0C0 0x80E0      BCC.W    ??node_starting_network_2
   \       0x16   0x2804             CMP      R0,#+4
   \       0x18   0xD048             BEQ.N    ??node_starting_network_3
   \       0x1A   0xD346             BCC.N    ??node_starting_network_4
   \       0x1C   0x2806             CMP      R0,#+6
   \       0x1E   0xD077             BEQ.N    ??node_starting_network_5
   \       0x20   0xD328             BCC.N    ??node_starting_network_6
   \       0x22   0xE0DB             B.N      ??node_starting_network_7
    772              {
    773              case TRIGGER_ENTRY:
    774                {
    775                  s->state_ind = STARTING_NETWORK_STATE;
   \                     ??node_starting_network_0: (+1)
   \       0x24   0x2007             MOVS     R0,#+7
   \       0x26   0x7220             STRB     R0,[R4, #+8]
    776                  
    777                  if((fan_mac_information_data.state_ind == JOIN_STATE_5)
    778          #if(APP_NVM_FEATURE_ENABLED == 1)
    779                     &&(fan_mac_information_data.is_start_from_nvm == true)
    780          #endif
    781                       )
   \       0x28   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \       0x2C   0x7A00             LDRB     R0,[R0, #+8]
   \       0x2E   0x2806             CMP      R0,#+6
   \       0x30   0xD113             BNE.N    ??node_starting_network_8
    782                  {
    783                    sm_event_t e = { (sm_trigger_t) TRIGGER_NWK_START_CONF, { 0 } };
   \       0x32   0x.... 0x....      LDR.W    R2,??DataTable33_8
   \       0x36   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0x3A   0xE9CD 0x0105      STRD     R0,R1,[SP, #+20]
    784                    SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \       0x3E   0x.... 0x....      LDR.W    R2,??DataTable30
   \       0x42   0x6810             LDR      R0,[R2, #+0]
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD004             BEQ.N    ??node_starting_network_9
   \       0x48   0xA905             ADD      R1,SP,#+20
   \       0x4A   0x0010             MOVS     R0,R2
   \       0x4C   0x6812             LDR      R2,[R2, #+0]
   \       0x4E   0x4790             BLX      R2
   \       0x50   0xE00E             B.N      ??node_starting_network_10
   \                     ??node_starting_network_9: (+1)
   \       0x52   0x2000             MOVS     R0,#+0
   \       0x54   0x.... 0x....      BL       error_increment
   \       0x58   0xE00A             B.N      ??node_starting_network_10
    785                  }  
    786                  else
    787                    /*This function now starts a network on the selected channel and PAN */ 
    788                    FAN_MAC_MLME_SET_Request
    789                      (
    790                       WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    791                       WISUN_IE_SUBID_NETNAME_IE,/* subid for each ie */	  
    792                       fan_nwk_manager_app.node_basic_cfg.netname_ie.length , /* length of value */
    793                       (uint8_t*)(&fan_nwk_manager_app.node_basic_cfg.netname_ie.network_name)		  	
    794                         /* pointing to first element*/
    795                         ); 
   \                     ??node_starting_network_8: (+1)
   \       0x5A   0x.... 0x....      LDR.W    R0,??DataTable30
   \       0x5E   0xF110 0x03C3      ADDS     R3,R0,#+195
   \       0x62   0xF890 0x20C2      LDRB     R2,[R0, #+194]
   \       0x66   0xB292             UXTH     R2,R2
   \       0x68   0x210A             MOVS     R1,#+10
   \       0x6A   0x2004             MOVS     R0,#+4
   \       0x6C   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    796                }
    797                break;
   \                     ??node_starting_network_10: (+1)
   \       0x70   0xE0B4             B.N      ??node_starting_network_11
    798                
    799                case TRIGGER_START_NODE:
    800                break;
   \                     ??node_starting_network_1: (+1)
   \       0x72   0xE0B3             B.N      ??node_starting_network_11
    801                
    802                case TRIGGER_NWK_START_CONF:
    803                {
    804                  /*Suneet :: when run with tbc its send success before uper layer started problem come to fatch get ip address on lbr side  */
    805                  if( fan_nwk_manager_app.node_basic_cfg.fan_device_type == COORD_NODE_TYPE )
   \                     ??node_starting_network_6: (+1)
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable30
   \       0x78   0x7B40             LDRB     R0,[R0, #+13]
   \       0x7A   0x2801             CMP      R0,#+1
   \       0x7C   0xD103             BNE.N    ??node_starting_network_12
    806                    // Send Start Confirmation to Rest Server .. RAKA [16-11-2017]
    807                    send_hif_conf_cb(NODE_START_STOP_CONF,0x00);
   \       0x7E   0x2100             MOVS     R1,#+0
   \       0x80   0x2031             MOVS     R0,#+49
   \       0x82   0x.... 0x....      BL       send_hif_conf_cb
    808          #if(APP_NVM_FEATURE_ENABLED == 1)
    809                    nvm_store_node_basic_info(); //Debdeep
    810          #endif
    811                    // Raka :: For Enable Data Whiting             
    812                    uint32_t val = ENABLE_DATA_WHITENING;
   \                     ??node_starting_network_12: (+1)
   \       0x86   0x2001             MOVS     R0,#+1
   \       0x88   0x9000             STR      R0,[SP, #+0]
    813                    PLME_set_request(phyFSKScramblePSDU,1,&val);                                 
   \       0x8A   0x466A             MOV      R2,SP
   \       0x8C   0x2101             MOVS     R1,#+1
   \       0x8E   0x202E             MOVS     R0,#+46
   \       0x90   0x.... 0x....      BL       PLME_set_request
    814                    /*Once the network is successfully established the device keeps
    815                    it receiver ON by setting the macRxOnWhenIdle PIB to TRUE*/
    816                    s->one_byte_value = 0x01;
   \       0x94   0x2001             MOVS     R0,#+1
   \       0x96   0xF884 0x013D      STRB     R0,[R4, #+317]
    817          
    818                    MLME_SET_Request
    819                    (
    820                          macAssociationPermit,
    821                          0,
    822                          1,
    823                          &(s->one_byte_value)
    824                          );
   \       0x9A   0xF204 0x133D      ADDW     R3,R4,#+317
   \       0x9E   0x2201             MOVS     R2,#+1
   \       0xA0   0x2100             MOVS     R1,#+0
   \       0xA2   0x2041             MOVS     R0,#+65
   \       0xA4   0x.... 0x....      BL       MLME_SET_Request
    825                    }
    826                break;
   \       0xA8   0xE098             B.N      ??node_starting_network_11
    827          
    828                case TRIGGER_RESET_CONF:
    829                break;
   \                     ??node_starting_network_4: (+1)
   \       0xAA   0xE097             B.N      ??node_starting_network_11
    830          
    831                case TRIGGER_SET_CONF:
    832                if( s->result == MAC_SUCCESS )
   \                     ??node_starting_network_3: (+1)
   \       0xAC   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0xB0   0x2800             CMP      R0,#+0
   \       0xB2   0xD127             BNE.N    ??node_starting_network_13
    833                {
    834                  if( e->param.scalar == macAssociationPermit  )
   \       0xB4   0x7928             LDRB     R0,[R5, #+4]
   \       0xB6   0x2841             CMP      R0,#+65
   \       0xB8   0xD10A             BNE.N    ??node_starting_network_14
    835                  {
    836                    s->one_byte_value = 0x00;
   \       0xBA   0x2000             MOVS     R0,#+0
   \       0xBC   0xF884 0x013D      STRB     R0,[R4, #+317]
    837          
    838                    MLME_SET_Request
    839                    (
    840                          macBeaconAutoRespond,
    841                          0,
    842                          1,
    843                          &(s->one_byte_value)
    844                          );
   \       0xC0   0xF204 0x133D      ADDW     R3,R4,#+317
   \       0xC4   0x2201             MOVS     R2,#+1
   \       0xC6   0x2100             MOVS     R1,#+0
   \       0xC8   0x2096             MOVS     R0,#+150
   \       0xCA   0x.... 0x....      BL       MLME_SET_Request
   \       0xCE   0xE01E             B.N      ??node_starting_network_15
    845                  }
    846                  else if( e->param.scalar == macBeaconAutoRespond )
   \                     ??node_starting_network_14: (+1)
   \       0xD0   0x7928             LDRB     R0,[R5, #+4]
   \       0xD2   0x2896             CMP      R0,#+150
   \       0xD4   0xD11B             BNE.N    ??node_starting_network_15
    847                  {
    848                      /*If the device is started as a PAN Cordinator then
    849                      it has successfully formed the network now,else if
    850                      the device was trying to join then it has successfully joined*/
    851                    
    852                    sm_event_t e = { (sm_trigger_t) TRIGGER_ENTRY, { 0 } };
   \       0xD6   0x.... 0x....      LDR.W    R2,??DataTable33_9
   \       0xDA   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0xDE   0xE9CD 0x0103      STRD     R0,R1,[SP, #+12]
    853                    s->super.state = (sm_state_t)&node_mac_sec_set;
   \       0xE2   0x.... 0x....      ADR.W    R0,node_mac_sec_set
   \       0xE6   0x6020             STR      R0,[R4, #+0]
    854                    SM_DISPATCH((sm_t *)s, &e);  
   \       0xE8   0x2C00             CMP      R4,#+0
   \       0xEA   0xD007             BEQ.N    ??node_starting_network_16
   \       0xEC   0x6820             LDR      R0,[R4, #+0]
   \       0xEE   0x2800             CMP      R0,#+0
   \       0xF0   0xD004             BEQ.N    ??node_starting_network_16
   \       0xF2   0xA903             ADD      R1,SP,#+12
   \       0xF4   0x0020             MOVS     R0,R4
   \       0xF6   0x6822             LDR      R2,[R4, #+0]
   \       0xF8   0x4790             BLX      R2
   \       0xFA   0xE008             B.N      ??node_starting_network_15
   \                     ??node_starting_network_16: (+1)
   \       0xFC   0x2000             MOVS     R0,#+0
   \       0xFE   0x.... 0x....      BL       error_increment
   \      0x102   0xE004             B.N      ??node_starting_network_15
    855          //            sm_event_t e = { (sm_trigger_t) TRIGGER_FAN_MAC_INIT, { 0 } };
    856          //            s->super.state = (sm_state_t)&node_mac_ready;
    857          //            SM_DISPATCH((sm_t *)s, &e);          
    858                  }
    859                }
    860                else
    861                {
    862                  sm_transit((sm_t *)s, (sm_state_t)&node_idle );
   \                     ??node_starting_network_13: (+1)
   \      0x104   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \      0x108   0x0020             MOVS     R0,R4
   \      0x10A   0x.... 0x....      BL       sm_transit
    863                }
    864                break;
   \                     ??node_starting_network_15: (+1)
   \      0x10E   0xE065             B.N      ??node_starting_network_11
    865                
    866                case   TRIGGER_SET_FAN_MAC_IE_CONF:
    867                if( s->result == MAC_SUCCESS )
   \                     ??node_starting_network_5: (+1)
   \      0x110   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \      0x114   0x2800             CMP      R0,#+0
   \      0x116   0xD158             BNE.N    ??node_starting_network_17
    868                {
    869                  switch( e->param.scalar )
   \      0x118   0x7928             LDRB     R0,[R5, #+4]
   \      0x11A   0x2802             CMP      R0,#+2
   \      0x11C   0xD018             BEQ.N    ??node_starting_network_18
   \      0x11E   0x2806             CMP      R0,#+6
   \      0x120   0xD03E             BEQ.N    ??node_starting_network_19
   \      0x122   0x2807             CMP      R0,#+7
   \      0x124   0xD034             BEQ.N    ??node_starting_network_20
   \      0x126   0x2809             CMP      R0,#+9
   \      0x128   0xD01A             BEQ.N    ??node_starting_network_21
   \      0x12A   0x280A             CMP      R0,#+10
   \      0x12C   0xD004             BEQ.N    ??node_starting_network_22
   \      0x12E   0x280B             CMP      R0,#+11
   \      0x130   0xD026             BEQ.N    ??node_starting_network_23
   \      0x132   0x280C             CMP      R0,#+12
   \      0x134   0xD01C             BEQ.N    ??node_starting_network_24
   \      0x136   0xE047             B.N      ??node_starting_network_25
    870                  {
    871                    case WISUN_IE_SUBID_NETNAME_IE: 
    872                      FAN_MAC_MLME_SET_Request
    873                      (
    874                          WISUN_INFO_HEADER_IE_ID,/* header ie or payload ie */
    875                          WISUN_IE_SUBID_BT_IE,/* subid for each ie */	        
    876                          fan_nwk_manager_app.fan_mac_header_ie.bt_ie.length,/* length of value */
    877                          (uint8_t*)&fan_nwk_manager_app.fan_mac_header_ie.bt_ie		  	
    878                          /* pointing to first element*/
    879                      ); 
   \                     ??node_starting_network_22: (+1)
   \      0x138   0x.... 0x....      LDR.W    R0,??DataTable30
   \      0x13C   0xF510 0x73AA      ADDS     R3,R0,#+340
   \      0x140   0xF890 0x2154      LDRB     R2,[R0, #+340]
   \      0x144   0xB292             UXTH     R2,R2
   \      0x146   0x2102             MOVS     R1,#+2
   \      0x148   0x202A             MOVS     R0,#+42
   \      0x14A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    880                    break;
   \      0x14E   0xE041             B.N      ??node_starting_network_26
    881          
    882                    case WISUN_IE_SUBID_BT_IE:
    883                      FAN_MAC_MLME_SET_Request
    884                      (
    885                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    886                          WISUN_IE_SUBID_PAN_IE,/* subid for each ie */	
    887                          8,/*(7+1)=(fan_nwk_manager_app.node_basic_cfg.pan_ie.length+1), pointing to first element*/
    888                          (uint8_t *)&fan_nwk_manager_app.node_basic_cfg.pan_ie/* length of value */
    889                      );  
   \                     ??node_starting_network_18: (+1)
   \      0x150   0x.... 0x....      LDR.W    R3,??DataTable33_10
   \      0x154   0x2208             MOVS     R2,#+8
   \      0x156   0x2109             MOVS     R1,#+9
   \      0x158   0x2004             MOVS     R0,#+4
   \      0x15A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    890                    break;
   \      0x15E   0xE039             B.N      ??node_starting_network_26
    891                    
    892                    case WISUN_IE_SUBID_PAN_IE:
    893                      FAN_MAC_MLME_SET_Request
    894                      (
    895                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    896                          WISUN_IE_SUBID_GTKHASH_IE,/* subid for each ie */	        
    897                          65,/*(64+1)=(fan_nwk_manager_app.node_basic_cfg.gtkhash_ie.length+1),*/
    898                          (uint8_t *)& fan_nwk_manager_app.node_basic_cfg.gtkhash_ie
    899                      ); 
   \                     ??node_starting_network_21: (+1)
   \      0x160   0x.... 0x....      LDR.W    R3,??DataTable33_11
   \      0x164   0x2241             MOVS     R2,#+65
   \      0x166   0x210C             MOVS     R1,#+12
   \      0x168   0x2004             MOVS     R0,#+4
   \      0x16A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    900                    break;
   \      0x16E   0xE031             B.N      ??node_starting_network_26
    901          
    902                    case WISUN_IE_SUBID_GTKHASH_IE:
    903                      FAN_MAC_MLME_SET_Request
    904                      (
    905                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    906                          WISUN_IE_SUBID_PANVER_IE,/* subid for each ie */	 
    907                          3,/*(2+1)=(fan_nwk_manager_app.node_basic_cfg.panvar_ie.length+1),*/
    908                          (uint8_t*)&fan_nwk_manager_app.node_basic_cfg.panvar_ie
    909                      ); 
   \                     ??node_starting_network_24: (+1)
   \      0x170   0x.... 0x....      LDR.W    R3,??DataTable33_12
   \      0x174   0x2203             MOVS     R2,#+3
   \      0x176   0x210B             MOVS     R1,#+11
   \      0x178   0x2004             MOVS     R0,#+4
   \      0x17A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    910                    break;
   \      0x17E   0xE029             B.N      ??node_starting_network_26
    911          
    912                    case WISUN_IE_SUBID_PANVER_IE:
    913                      FAN_MAC_MLME_SET_Request
    914                      (
    915                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    916                          WISUN_IE_SUBID_BS_IE,/* subid for each ie */	        
    917                          sizeof(fan_nwk_manager_app.node_basic_cfg.bs_ie),
    918                          (uint8_t *)& fan_nwk_manager_app.node_basic_cfg.bs_ie
    919                      ); 
   \                     ??node_starting_network_23: (+1)
   \      0x180   0x.... 0x....      LDR.W    R3,??DataTable33_13
   \      0x184   0x224A             MOVS     R2,#+74
   \      0x186   0x2107             MOVS     R1,#+7
   \      0x188   0x2004             MOVS     R0,#+4
   \      0x18A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    920                    break;
   \      0x18E   0xE021             B.N      ??node_starting_network_26
    921          
    922                    case WISUN_IE_SUBID_BS_IE:
    923                      FAN_MAC_MLME_SET_Request
    924                      (
    925                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
    926                          WISUN_IE_SUBID_US_IE,/* subid for each ie */	        
    927                          sizeof(fan_nwk_manager_app.node_basic_cfg.us_ie),
    928                          (uint8_t *)& fan_nwk_manager_app.node_basic_cfg.us_ie
    929                      ); 
   \                     ??node_starting_network_20: (+1)
   \      0x190   0x.... 0x....      LDR.W    R3,??DataTable33_14
   \      0x194   0x2239             MOVS     R2,#+57
   \      0x196   0x2106             MOVS     R1,#+6
   \      0x198   0x2004             MOVS     R0,#+4
   \      0x19A   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
    930                    break;
   \      0x19E   0xE019             B.N      ??node_starting_network_26
    931                    
    932                    case WISUN_IE_SUBID_US_IE:   
    933                      {
    934                          sm_event_t e = { (sm_trigger_t) TRIGGER_NWK_START_CONF, { 0 } };
   \                     ??node_starting_network_19: (+1)
   \      0x1A0   0x.... 0x....      LDR.W    R2,??DataTable33_15
   \      0x1A4   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \      0x1A8   0xE9CD 0x0101      STRD     R0,R1,[SP, #+4]
    935                          SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \      0x1AC   0x.... 0x....      LDR.W    R2,??DataTable30
   \      0x1B0   0x6810             LDR      R0,[R2, #+0]
   \      0x1B2   0x2800             CMP      R0,#+0
   \      0x1B4   0xD004             BEQ.N    ??node_starting_network_27
   \      0x1B6   0xA901             ADD      R1,SP,#+4
   \      0x1B8   0x0010             MOVS     R0,R2
   \      0x1BA   0x6812             LDR      R2,[R2, #+0]
   \      0x1BC   0x4790             BLX      R2
   \      0x1BE   0xE002             B.N      ??node_starting_network_28
   \                     ??node_starting_network_27: (+1)
   \      0x1C0   0x2000             MOVS     R0,#+0
   \      0x1C2   0x.... 0x....      BL       error_increment
    936                      }
    937                    break;  
   \                     ??node_starting_network_28: (+1)
   \      0x1C6   0xE005             B.N      ??node_starting_network_26
    938                    default:
    939                    break;
   \                     ??node_starting_network_25: (+1)
   \      0x1C8   0xE004             B.N      ??node_starting_network_26
    940                  }
    941                }
    942                else
    943                {
    944                  sm_transit((sm_t *)s, (sm_state_t)&node_idle );
   \                     ??node_starting_network_17: (+1)
   \      0x1CA   0x.... 0x....      LDR.W    R1,??DataTable33_7
   \      0x1CE   0x0020             MOVS     R0,R4
   \      0x1D0   0x.... 0x....      BL       sm_transit
    945                } 
    946                break;
   \                     ??node_starting_network_26: (+1)
   \      0x1D4   0xE002             B.N      ??node_starting_network_11
    947                
    948                case SM_TRIGGER_EXIT:
    949                s->previous_state =  s->state_ind;
   \                     ??node_starting_network_2: (+1)
   \      0x1D6   0x7A20             LDRB     R0,[R4, #+8]
   \      0x1D8   0x7260             STRB     R0,[R4, #+9]
    950                break;
   \      0x1DA   0xE7FF             B.N      ??node_starting_network_11
    951                
    952                default:
    953                break;
    954              }
    955              return NULL;
   \                     ??node_starting_network_7: (+1)
   \                     ??node_starting_network_11: (+1)
   \      0x1DC   0x2000             MOVS     R0,#+0
   \      0x1DE   0xB007             ADD      SP,SP,#+28
   \      0x1E0   0xBD30             POP      {R4,R5,PC}
    956          }

   \                                 In section .rodata, align 4
   \                     ?_5:
   \        0x0   0x05               DC8 5
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_6:
   \        0x0   0x00               DC8 0
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3

   \                                 In section .rodata, align 4
   \                     ?_7:
   \        0x0   0x05               DC8 5
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
    957          /*----------------------------------------------------------------------------*/
    958          

   \                                 In section .text, align 2, keep-with-next
    959          static sm_result_t node_mac_ready(fan_nwk_manager_sm_t *s, const sm_event_t *e)
    960          {
   \                     node_mac_ready: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    961          #if (EFR32FG13P_LBR == 0x00)
    962              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
    963              {
    964                case TRIGGER_ENTRY:
    965                      s->state_ind = NODE_MAC_READY_STATE;  
    966                      break;
    967          
    968                case TRIGGER_RESET_CONF:
    969                    break;
    970                    
    971                case TRIGGER_CHANGE_JOIN_STATE:
    972                     change_join_state(0);
    973                     if(fan_nwk_manager_app.node_basic_cfg.fan_device_type == LBR_TYPE)
    974                     {
    975                        sm_transit((sm_t *)s, (sm_state_t)&node_mac_ready );
    976                     }
    977                    break;
    978                    
    979              case TRIGGER_FAN_MAC_INIT:
    980                      
    981                      trigger_FAN_MAC_Start();
    982                    break;
    983                
    984                case SM_TRIGGER_EXIT:
    985                      s->previous_state =  s->state_ind;
    986                      break;
    987          
    988                case TRIGGER_SET_CONF:
    989                case   TRIGGER_SET_FAN_MAC_IE_CONF:  
    990                     if( s->result == MAC_SUCCESS )
    991                     {
    992                          switch( e->param.scalar )
    993                          {
    994                                case macSecurityEnabled:
    995                                      send_hif_conf_cb(MAC_SECURITY_ENABLE_DIASBLE_CONF,0x00);
    996                                      break;  
    997                                case macDeviceTable:
    998                                  // Raka .. if the device table is set for second device in the mac successfully 
    999                                  // you will come here...
   1000                                  // this will come after the call of
   1001                                  // add_dev_desc_on_MAC_for_security(&router_addr[0]);
   1002                                      break;
   1003                                case WISUN_IE_SUBID_GTKHASH_IE: 
   1004                                   //you will come here...
   1005                                  // this will come after the call of
   1006                                  // set_lbr_mac_gtks_config()
   1007                                      fan_nwk_manager_app.node_basic_cfg.panvar_ie.PANVERSION++;
   1008                                      FAN_MAC_MLME_SET_Request
   1009                                      (
   1010                                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
   1011                                          WISUN_IE_SUBID_PANVER_IE,/* subid for each ie */	 
   1012                                          3,/*(2+1)=(fan_nwk_manager_app.node_basic_cfg.panvar_ie.length+1),*/
   1013                                          (uint8_t*)&fan_nwk_manager_app.node_basic_cfg.panvar_ie
   1014                                      ); 
   1015                                     break; 
   1016                                     
   1017                                case WISUN_IE_SUBID_PANVER_IE:
   1018                                  trickle_timer_inconsistency_pc ();
   1019                                  throttle_pc ();
   1020                                      break;
   1021                                default:
   1022                                      break;
   1023                          }
   1024                     }
   1025                break;
   1026          
   1027                default:
   1028                    break;
   1029              }
   1030              return NULL;
   1031          #else  
   1032              switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \        0x6   0x7828             LDRB     R0,[R5, #+0]
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD00C             BEQ.N    ??node_mac_ready_0
   \        0xC   0x2801             CMP      R0,#+1
   \        0xE   0xD034             BEQ.N    ??node_mac_ready_1
   \       0x10   0x2803             CMP      R0,#+3
   \       0x12   0xD00B             BEQ.N    ??node_mac_ready_2
   \       0x14   0x2804             CMP      R0,#+4
   \       0x16   0xD033             BEQ.N    ??node_mac_ready_3
   \       0x18   0x2806             CMP      R0,#+6
   \       0x1A   0xD031             BEQ.N    ??node_mac_ready_3
   \       0x1C   0x2807             CMP      R0,#+7
   \       0x1E   0xD014             BEQ.N    ??node_mac_ready_4
   \       0x20   0x2808             CMP      R0,#+8
   \       0x22   0xD004             BEQ.N    ??node_mac_ready_5
   \       0x24   0xE059             B.N      ??node_mac_ready_6
   1033              {
   1034                case TRIGGER_ENTRY:
   1035                      s->state_ind = NODE_MAC_READY_STATE;  
   \                     ??node_mac_ready_0: (+1)
   \       0x26   0x2009             MOVS     R0,#+9
   \       0x28   0x7220             STRB     R0,[R4, #+8]
   1036                      break;
   \       0x2A   0xE056             B.N      ??node_mac_ready_7
   1037          
   1038                case TRIGGER_RESET_CONF:
   1039                    break;
   \                     ??node_mac_ready_2: (+1)
   \       0x2C   0xE055             B.N      ??node_mac_ready_7
   1040                    
   1041                case TRIGGER_CHANGE_JOIN_STATE:
   1042                     change_join_state(0);
   \                     ??node_mac_ready_5: (+1)
   \       0x2E   0x2000             MOVS     R0,#+0
   \       0x30   0x.... 0x....      BL       change_join_state
   1043                     if(fan_nwk_manager_app.node_basic_cfg.fan_device_type == LBR_TYPE)
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable30
   \       0x38   0x7B40             LDRB     R0,[R0, #+13]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD104             BNE.N    ??node_mac_ready_8
   1044                     {
   1045                       #if(FAN_FRQ_HOPPING_FEATURE_ENABLED == 1)
   1046                        fan_freq_hop_start_hopping(NULL);
   1047                        #endif
   1048                        sm_transit((sm_t *)s, (sm_state_t)&node_mac_ready );
   \       0x3E   0x.... 0x....      LDR.W    R1,??DataTable33_16
   \       0x42   0x0020             MOVS     R0,R4
   \       0x44   0x.... 0x....      BL       sm_transit
   1049                     }
   1050                    break;
   \                     ??node_mac_ready_8: (+1)
   \       0x48   0xE047             B.N      ??node_mac_ready_7
   1051                    
   1052              case TRIGGER_FAN_MAC_INIT: 
   1053                if((fan_mac_information_data.state_ind == JOIN_STATE_5)
   1054          #if(APP_NVM_FEATURE_ENABLED == 1)
   1055                   &&(fan_mac_information_data.is_start_from_nvm == true)
   1056          #endif
   1057                     )
   \                     ??node_mac_ready_4: (+1)
   \       0x4A   0x.... 0x....      LDR.W    R0,??DataTable33_6
   \       0x4E   0x7A00             LDRB     R0,[R0, #+8]
   \       0x50   0x2806             CMP      R0,#+6
   \       0x52   0xD10A             BNE.N    ??node_mac_ready_9
   1058                {
   1059          #if(APP_NVM_FEATURE_ENABLED == 1)
   1060                  nvm_load_read_fan_macself_info();
   1061          #endif
   1062                  set_mac_security_on_LBR(&neighbour_addr[0],8);
   \       0x54   0x2108             MOVS     R1,#+8
   \       0x56   0x.... 0x....      LDR.W    R0,??DataTable33_17
   \       0x5A   0x.... 0x....      BL       set_mac_security_on_LBR
   1063                  fan_mac_init(fan_nwk_manager_app.node_basic_cfg.fan_device_type);
   \       0x5E   0x.... 0x....      LDR.W    R0,??DataTable30
   \       0x62   0x7B40             LDRB     R0,[R0, #+13]
   \       0x64   0x.... 0x....      BL       fan_mac_init
   \       0x68   0xE006             B.N      ??node_mac_ready_10
   1064          //        fan_freq_hop_start_hopping(NULL);
   1065                  //change_join_state(0);      
   1066                }
   1067                else
   1068                {
   1069                    fan_mac_init(fan_nwk_manager_app.node_basic_cfg.fan_device_type);
   \                     ??node_mac_ready_9: (+1)
   \       0x6A   0x.... 0x....      LDR.W    R0,??DataTable30
   \       0x6E   0x7B40             LDRB     R0,[R0, #+13]
   \       0x70   0x.... 0x....      BL       fan_mac_init
   1070          
   1071                    trigger_FAN_MAC_Start();
   \       0x74   0x.... 0x....      BL       trigger_FAN_MAC_Start
   1072          
   1073          #if(FAN_FRQ_HOPPING_FEATURE_ENABLED == 1)
   1074                    fan_freq_hop_start_hopping(NULL);
   1075          #endif
   1076                }
   1077                      
   1078                    break;
   \                     ??node_mac_ready_10: (+1)
   \       0x78   0xE02F             B.N      ??node_mac_ready_7
   1079                
   1080                case SM_TRIGGER_EXIT:
   1081                      s->previous_state =  s->state_ind;
   \                     ??node_mac_ready_1: (+1)
   \       0x7A   0x7A20             LDRB     R0,[R4, #+8]
   \       0x7C   0x7260             STRB     R0,[R4, #+9]
   1082                      break;
   \       0x7E   0xE02C             B.N      ??node_mac_ready_7
   1083          
   1084                case TRIGGER_SET_CONF:
   1085                case   TRIGGER_SET_FAN_MAC_IE_CONF:  
   1086                     if( s->result == MAC_SUCCESS )
   \                     ??node_mac_ready_3: (+1)
   \       0x80   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0x84   0x2800             CMP      R0,#+0
   \       0x86   0xD127             BNE.N    ??node_mac_ready_11
   1087                     {
   1088          #if(APP_NVM_FEATURE_ENABLED == 1)
   1089                          nvm_load_mac_frame_counter();
   1090          #endif
   1091                          switch( e->param.scalar )
   \       0x88   0x7928             LDRB     R0,[R5, #+4]
   \       0x8A   0x280B             CMP      R0,#+11
   \       0x8C   0xD01F             BEQ.N    ??node_mac_ready_12
   \       0x8E   0x280C             CMP      R0,#+12
   \       0x90   0xD00E             BEQ.N    ??node_mac_ready_13
   \       0x92   0x285D             CMP      R0,#+93
   \       0x94   0xD002             BEQ.N    ??node_mac_ready_14
   \       0x96   0x2873             CMP      R0,#+115
   \       0x98   0xD005             BEQ.N    ??node_mac_ready_15
   \       0x9A   0xE01D             B.N      ??node_mac_ready_16
   1092                          {
   1093                                case macSecurityEnabled:
   1094                                      send_hif_conf_cb(MAC_SECURITY_ENABLE_DIASBLE_CONF,0x00);
   \                     ??node_mac_ready_14: (+1)
   \       0x9C   0x2100             MOVS     R1,#+0
   \       0x9E   0x2085             MOVS     R0,#+133
   \       0xA0   0x.... 0x....      BL       send_hif_conf_cb
   1095                                      break;  
   \       0xA4   0xE018             B.N      ??node_mac_ready_11
   1096                                case macDeviceTable:
   1097                                  // Raka .. if the device table is set for second device in the mac successfully 
   1098                                  // you will come here...
   1099                                  // this will come after the call of
   1100                                   add_dev_desc_on_MAC_for_security(&router_addr[0]);
   \                     ??node_mac_ready_15: (+1)
   \       0xA6   0x.... 0x....      LDR.W    R0,??DataTable33_18
   \       0xAA   0x.... 0x....      BL       add_dev_desc_on_MAC_for_security
   1101                                      break;
   \       0xAE   0xE013             B.N      ??node_mac_ready_11
   1102                                case WISUN_IE_SUBID_GTKHASH_IE: 
   1103                                   //you will come here...
   1104                                  // this will come after the call of
   1105                                  // set_lbr_mac_gtks_config()
   1106                                      fan_nwk_manager_app.node_basic_cfg.panvar_ie.PANVERSION++;
   \                     ??node_mac_ready_13: (+1)
   \       0xB0   0x.... 0x....      LDR.W    R1,??DataTable30
   \       0xB4   0xF8B1 0x00E3      LDRH     R0,[R1, #+227]
   \       0xB8   0x1C40             ADDS     R0,R0,#+1
   \       0xBA   0xF8A1 0x00E3      STRH     R0,[R1, #+227]
   1107                                      FAN_MAC_MLME_SET_Request
   1108                                      (
   1109                                          WISUN_INFO_PAYLOAD_IE_ID,/* header ie or payload ie */
   1110                                          WISUN_IE_SUBID_PANVER_IE,/* subid for each ie */	 
   1111                                          3,/*(2+1)=(fan_nwk_manager_app.node_basic_cfg.panvar_ie.length+1),*/
   1112                                          (uint8_t*)&fan_nwk_manager_app.node_basic_cfg.panvar_ie
   1113                                      ); 
   \       0xBE   0xF111 0x03E3      ADDS     R3,R1,#+227
   \       0xC2   0x2203             MOVS     R2,#+3
   \       0xC4   0x210B             MOVS     R1,#+11
   \       0xC6   0x2004             MOVS     R0,#+4
   \       0xC8   0x.... 0x....      BL       FAN_MAC_MLME_SET_Request
   1114                                     break; 
   \       0xCC   0xE004             B.N      ??node_mac_ready_11
   1115                                     
   1116                                case WISUN_IE_SUBID_PANVER_IE:
   1117                                  trickle_timer_inconsistency_pc ();
   \                     ??node_mac_ready_12: (+1)
   \       0xCE   0x.... 0x....      BL       trickle_timer_inconsistency_pc
   1118                                  throttle_pc ();
   \       0xD2   0x.... 0x....      BL       throttle_pc
   1119                                      break;
   \       0xD6   0xE7FF             B.N      ??node_mac_ready_11
   1120                                default:
   1121                                      break;
   1122                          }
   1123                     }
   1124                break;
   \                     ??node_mac_ready_16: (+1)
   \                     ??node_mac_ready_11: (+1)
   \       0xD8   0xE7FF             B.N      ??node_mac_ready_7
   1125          
   1126                default:
   1127                    break;
   1128              }
   1129              return NULL;
   \                     ??node_mac_ready_6: (+1)
   \                     ??node_mac_ready_7: (+1)
   \       0xDA   0x2000             MOVS     R0,#+0
   \       0xDC   0xBD32             POP      {R1,R4,R5,PC}
   1130          #endif    
   1131          }
   1132          
   1133          
   1134          /*----------------------------------------------------------------------------*/
   1135          
   1136          

   \                                 In section .text, align 4, keep-with-next
   1137          static sm_result_t node_mac_sec_set(fan_nwk_manager_sm_t *s, const sm_event_t *e)
   1138          {
   \                     node_mac_sec_set: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   1139             uint8_t enable_security_flag = 0x01;
   \        0x6   0x2001             MOVS     R0,#+1
   \        0x8   0xF88D 0x0001      STRB     R0,[SP, #+1]
   1140             uint8_t enable_mac_frame_counter_perkey = 0x01;
   \        0xC   0x2001             MOVS     R0,#+1
   \        0xE   0xF88D 0x0000      STRB     R0,[SP, #+0]
   1141            switch ((fan_nwk_manager_sm_trigger_t) e->trigger)
   \       0x12   0x7828             LDRB     R0,[R5, #+0]
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD006             BEQ.N    ??node_mac_sec_set_0
   \       0x18   0x2801             CMP      R0,#+1
   \       0x1A   0xD00F             BEQ.N    ??node_mac_sec_set_1
   \       0x1C   0x2803             CMP      R0,#+3
   \       0x1E   0xD00C             BEQ.N    ??node_mac_sec_set_2
   \       0x20   0x2804             CMP      R0,#+4
   \       0x22   0xD00E             BEQ.N    ??node_mac_sec_set_3
   \       0x24   0xE04F             B.N      ??node_mac_sec_set_4
   1142              { 
   1143                case TRIGGER_ENTRY:
   1144                s->state_ind = NODE_SET_SECURITY_PARAM_STATE;
   \                     ??node_mac_sec_set_0: (+1)
   \       0x26   0x200C             MOVS     R0,#+12
   \       0x28   0x7220             STRB     R0,[R4, #+8]
   1145                        MLME_SET_Request
   1146                        (
   1147                            macSecurityEnabled,		
   1148                            0,
   1149                            0x0001,	
   1150                            &enable_security_flag	
   1151                        );
   \       0x2A   0xF10D 0x0301      ADD      R3,SP,#+1
   \       0x2E   0x2201             MOVS     R2,#+1
   \       0x30   0x2100             MOVS     R1,#+0
   \       0x32   0x205D             MOVS     R0,#+93
   \       0x34   0x.... 0x....      BL       MLME_SET_Request
   1152                break;
   \       0x38   0xE045             B.N      ??node_mac_sec_set_5
   1153                case TRIGGER_RESET_CONF:
   1154                break;
   \                     ??node_mac_sec_set_2: (+1)
   \       0x3A   0xE044             B.N      ??node_mac_sec_set_5
   1155                
   1156                case SM_TRIGGER_EXIT:
   1157                s->previous_state =  s->state_ind;
   \                     ??node_mac_sec_set_1: (+1)
   \       0x3C   0x7A20             LDRB     R0,[R4, #+8]
   \       0x3E   0x7260             STRB     R0,[R4, #+9]
   1158                break;
   \       0x40   0xE041             B.N      ??node_mac_sec_set_5
   1159                case TRIGGER_SET_CONF:
   1160                        /*Once the extended address is set then the short address is alloted*/
   1161                         if( s->result == MAC_SUCCESS )
   \                     ??node_mac_sec_set_3: (+1)
   \       0x42   0xF894 0x013C      LDRB     R0,[R4, #+316]
   \       0x46   0x2800             CMP      R0,#+0
   \       0x48   0xD13D             BNE.N    ??node_mac_sec_set_4
   1162                         {
   1163                              switch( e->param.scalar )
   \       0x4A   0x7928             LDRB     R0,[R5, #+4]
   \       0x4C   0x285D             CMP      R0,#+93
   \       0x4E   0xD008             BEQ.N    ??node_mac_sec_set_6
   \       0x50   0x2871             CMP      R0,#+113
   \       0x52   0xD013             BEQ.N    ??node_mac_sec_set_7
   \       0x54   0x2873             CMP      R0,#+115
   \       0x56   0xD016             BEQ.N    ??node_mac_sec_set_8
   \       0x58   0x2877             CMP      R0,#+119
   \       0x5A   0xD00C             BEQ.N    ??node_mac_sec_set_9
   \       0x5C   0x287F             CMP      R0,#+127
   \       0x5E   0xD007             BEQ.N    ??node_mac_sec_set_10
   \       0x60   0xE031             B.N      ??node_mac_sec_set_11
   1164                              {
   1165                              case macSecurityEnabled:
   1166                                MLME_SET_Request
   1167                                  (
   1168                                   secFrameCounterPerk,		
   1169                                   0,
   1170                                   0x0001,	
   1171                                   &enable_mac_frame_counter_perkey	
   1172                                     );
   \                     ??node_mac_sec_set_6: (+1)
   \       0x62   0x466B             MOV      R3,SP
   \       0x64   0x2201             MOVS     R2,#+1
   \       0x66   0x2100             MOVS     R1,#+0
   \       0x68   0x207F             MOVS     R0,#+127
   \       0x6A   0x.... 0x....      BL       MLME_SET_Request
   1173                                break;
   \       0x6E   0xE02A             B.N      ??node_mac_sec_set_4
   1174                              case secFrameCounterPerk:
   1175                                  reset_mac_frame_counter_cmd();
   \                     ??node_mac_sec_set_10: (+1)
   \       0x70   0x.... 0x....      BL       reset_mac_frame_counter_cmd
   1176                                break;
   \       0x74   0xE027             B.N      ??node_mac_sec_set_4
   1177                              case macFrameCounter :
   1178                                 add_security_key_descriptor_on_MAC();//for with seq without eapol add seq here hardcoded
   \                     ??node_mac_sec_set_9: (+1)
   \       0x76   0x.... 0x....      BL       add_security_key_descriptor_on_MAC
   1179                                 break;
   \       0x7A   0xE024             B.N      ??node_mac_sec_set_4
   1180                              case macKeyTable:
   1181          /*Need to check this for sec is it correct logic after merging code*/
   1182                                {/*Umesh added for temp*/ //without eapol with security
   1183          #if WITH_SECURITY                    
   1184                                  add_dev_desc_on_MAC_for_security(&neighbour_addr[0]);             
   \                     ??node_mac_sec_set_7: (+1)
   \       0x7C   0x.... 0x....      LDR.W    R0,??DataTable33_17
   \       0x80   0x.... 0x....      BL       add_dev_desc_on_MAC_for_security
   1185          #else
   1186                                if(fan_nwk_manager_app.node_basic_cfg.fan_device_type == LBR_TYPE)
   1187                                {
   1188                                    secrity_status_enab_dis = 0x01;
   1189                                    sm_event_t e = { (sm_trigger_t) TRIGGER_CHANGE_JOIN_STATE, { 0 } };
   1190                                    s->super.state = (sm_state_t)&node_mac_ready;
   1191                                    SM_DISPATCH((sm_t *)s, &e);
   1192                                }
   1193                                else
   1194                                {
   1195                                    s->state_ind = NODE_MAC_READY_STATE;  
   1196                                  //add_dev_desc_on_MAC_for_security(&router_addr[0]);
   1197                                    //secrity_status_enab_dis = 0x01;
   1198                                    sm_event_t e = { (sm_trigger_t) TRIGGER_CHANGE_JOIN_STATE, { 0 } };
   1199                                    s->super.state = (sm_state_t)&node_mac_ready;
   1200                                    SM_DISPATCH((sm_t *)s, &e);
   1201                                }
   1202          
   1203          #endif
   1204                                }
   1205                                  break;
   \       0x84   0xE01F             B.N      ??node_mac_sec_set_4
   1206                              case macDeviceTable:
   1207                                {
   1208                                    /*If the device is started as a PAN Cordinator then
   1209                                    it has successfully formed the network now,else if
   1210                                    the device was trying to join then it has successfully joined*/
   1211          
   1212                                    set_mac_security_on_LBR(&neighbour_addr[0],8);
   \                     ??node_mac_sec_set_8: (+1)
   \       0x86   0x2108             MOVS     R1,#+8
   \       0x88   0x.... 0x....      LDR.W    R0,??DataTable33_17
   \       0x8C   0x.... 0x....      BL       set_mac_security_on_LBR
   1213                                    secrity_status_enab_dis = 0x01;
   \       0x90   0x2101             MOVS     R1,#+1
   \       0x92   0x.... 0x....      LDR.W    R0,??DataTable33_19
   \       0x96   0x7001             STRB     R1,[R0, #+0]
   1214                                    sm_event_t e = { (sm_trigger_t) TRIGGER_FAN_MAC_INIT, { 0 } };
   \       0x98   0x.... 0x....      LDR.W    R2,??DataTable33_20
   \       0x9C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0xA0   0xE9CD 0x0101      STRD     R0,R1,[SP, #+4]
   1215                                    s->super.state = (sm_state_t)&node_mac_ready;
   \       0xA4   0x.... 0x....      LDR.W    R0,??DataTable33_16
   \       0xA8   0x6020             STR      R0,[R4, #+0]
   1216                                    SM_DISPATCH((sm_t *)s, &e);
   \       0xAA   0x2C00             CMP      R4,#+0
   \       0xAC   0xD007             BEQ.N    ??node_mac_sec_set_12
   \       0xAE   0x6820             LDR      R0,[R4, #+0]
   \       0xB0   0x2800             CMP      R0,#+0
   \       0xB2   0xD004             BEQ.N    ??node_mac_sec_set_12
   \       0xB4   0xA901             ADD      R1,SP,#+4
   \       0xB6   0x0020             MOVS     R0,R4
   \       0xB8   0x6822             LDR      R2,[R4, #+0]
   \       0xBA   0x4790             BLX      R2
   \       0xBC   0xE002             B.N      ??node_mac_sec_set_13
   \                     ??node_mac_sec_set_12: (+1)
   \       0xBE   0x2000             MOVS     R0,#+0
   \       0xC0   0x.... 0x....      BL       error_increment
   1217          
   1218                                   
   1219                                }
   1220                               break; 
   \                     ??node_mac_sec_set_13: (+1)
   \       0xC4   0xE7FF             B.N      ??node_mac_sec_set_4
   1221                             break;            
   1222                           default:
   1223                             break;
   1224                              }
   1225                         }
   1226                default:
   1227                break;
   1228              }
   1229              return NULL;
   \                     ??node_mac_sec_set_11: (+1)
   \                     ??node_mac_sec_set_4: (+1)
   \                     ??node_mac_sec_set_5: (+1)
   \       0xC6   0x2000             MOVS     R0,#+0
   \       0xC8   0xBD3E             POP      {R1-R5,PC}
   1230          
   1231          }

   \                                 In section .rodata, align 4
   \                     ?_8:
   \        0x0   0x07               DC8 7
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1232          /*******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1233          void set_mac_security_on_LBR(uint8_t *rec_buff, uint16_t len)
   1234          {
   \                     set_mac_security_on_LBR: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   1235            if(secrity_status_enab_dis == 0x00)
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable33_19
   \        0xC   0x7800             LDRB     R0,[R0, #+0]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD10D             BNE.N    ??set_mac_security_on_LBR_0
   1236            {
   1237               send_mac_security_set_request(NULL,0); //set secrity key 
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x2000             MOVS     R0,#+0
   \       0x16   0x.... 0x....      BL       send_mac_security_set_request
   1238          //     secrity_status_enab_dis = 0x01;
   1239               memcpy(router_addr,rec_buff,8);
   \       0x1A   0xF05F 0x0808      MOVS     R8,#+8
   \       0x1E   0x0026             MOVS     R6,R4
   \       0x20   0x.... 0x....      LDR.W    R7,??DataTable33_18
   \       0x24   0x4642             MOV      R2,R8
   \       0x26   0x0031             MOVS     R1,R6
   \       0x28   0x0038             MOVS     R0,R7
   \       0x2A   0x.... 0x....      BL       __aeabi_memcpy
   1240          //     fan_nwk_manager_sm_t *app = &fan_nwk_manager_app; 
   1241          //     sm_event_t e = { (sm_trigger_t) TRIGGER_ENTRY, { 0 } };
   1242          //     app->super.state = (sm_state_t)&node_mac_sec_set;
   1243          //     SM_DISPATCH((sm_t *)app, &e);
   1244            }
   1245          }
   \                     ??set_mac_security_on_LBR_0: (+1)
   \       0x2E   0xE8BD 0x81F0      POP      {R4-R8,PC}
   1246          

   \                                 In section .text, align 2, keep-with-next
   1247          void set_mac_security_on_router_node(uint8_t *rec_buff, uint16_t len)
   1248          {
   \                     set_mac_security_on_router_node: (+1)
   \        0x0   0xB57C             PUSH     {R2-R6,LR}
   \        0x2   0x0006             MOVS     R6,R0
   \        0x4   0x000D             MOVS     R5,R1
   1249            if(secrity_status_enab_dis != 0x01)
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable33_19
   \        0xA   0x7800             LDRB     R0,[R0, #+0]
   \        0xC   0x2801             CMP      R0,#+1
   \        0xE   0xD021             BEQ.N    ??set_mac_security_on_router_node_0
   1250            {
   1251              generate_MAC_Security_Key(key_id_index,0);
   \       0x10   0x2100             MOVS     R1,#+0
   \       0x12   0x.... 0x....      LDR.W    R0,??DataTable33_21
   \       0x16   0x7800             LDRB     R0,[R0, #+0]
   \       0x18   0x.... 0x....      BL       generate_MAC_Security_Key
   1252              
   1253                  if (get_join_state() != 5)
   \       0x1C   0x.... 0x....      BL       get_join_state
   \       0x20   0x2805             CMP      R0,#+5
   \       0x22   0xD017             BEQ.N    ??set_mac_security_on_router_node_0
   1254              {
   1255                fan_nwk_manager_sm_t *app = &fan_nwk_manager_app; 
   \       0x24   0x.... 0x....      LDR.W    R4,??DataTable30
   1256                sm_event_t e = { (sm_trigger_t) TRIGGER_ENTRY, { 0 } };
   \       0x28   0x.... 0x....      LDR.W    R2,??DataTable33_22
   \       0x2C   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \       0x30   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1257                app->super.state = (sm_state_t)&node_mac_sec_set;
   \       0x34   0x.... 0x....      LDR.W    R0,??DataTable33_23
   \       0x38   0x6020             STR      R0,[R4, #+0]
   1258                SM_DISPATCH((sm_t *)app, &e);
   \       0x3A   0x2C00             CMP      R4,#+0
   \       0x3C   0xD007             BEQ.N    ??set_mac_security_on_router_node_1
   \       0x3E   0x6820             LDR      R0,[R4, #+0]
   \       0x40   0x2800             CMP      R0,#+0
   \       0x42   0xD004             BEQ.N    ??set_mac_security_on_router_node_1
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x6822             LDR      R2,[R4, #+0]
   \       0x4A   0x4790             BLX      R2
   \       0x4C   0xE002             B.N      ??set_mac_security_on_router_node_0
   \                     ??set_mac_security_on_router_node_1: (+1)
   \       0x4E   0x2000             MOVS     R0,#+0
   \       0x50   0x.... 0x....      BL       error_increment
   1259              }
   1260          //    if(fan_nwk_manager_app.node_basic_cfg.fan_device_type != LBR_TYPE)
   1261          //    {
   1262          //      //uint8_t recv_from_mac_addr[8] = {0x00};
   1263          //      /* Though EAPOL parent's MAC address comes in rec_buf but 
   1264          //      we should fetch parent's MAC address from eapol_parent structure.
   1265          //      Because for 2nd rank and 3rd rank devices, parent's address in wpa_supplicant
   1266          //      will be LBR's address. But the device will be joined with one of the 1st rank device. */
   1267          //      //get_eapol_parent_address(router_addr);
   1268          //    }
   1269          //    else
   1270          //    {
   1271          //      memcpy(router_addr,rec_buff,8);
   1272          //    }
   1273          //    
   1274          //    rec_buff += 8;
   1275          //    len -= 8;
   1276          //    mac_self_fan_info.mac_gtk_hash_ele.gtkl = *rec_buff++;
   1277          //    key_id_index = *rec_buff++;
   1278          //    
   1279          //    set_mac_self_info_from_lbr(rec_buff,64);
   1280          //#if !(WITH_SECURITY) //Umesh without EAPOL with Security 
   1281          //    generate_MAC_Security_Key(key_id_index,0);
   1282          //#endif
   1283              
   1284          //    if (get_join_state() != 5)
   1285          //    {
   1286          //      fan_nwk_manager_sm_t *app = &fan_nwk_manager_app; 
   1287          //      sm_event_t e = { (sm_trigger_t) TRIGGER_ENTRY, { 0 } };
   1288          //      app->super.state = (sm_state_t)&node_mac_sec_set;
   1289          //      SM_DISPATCH((sm_t *)app, &e);
   1290          //    }
   1291          //    else
   1292          //    {
   1293          //      update_key_table_entry(key_id_index);
   1294          //      update_pan_version_from_eapol_parent ();
   1295          //    }
   1296            }        
   1297          }
   \                     ??set_mac_security_on_router_node_0: (+1)
   \       0x54   0xBD73             POP      {R0,R1,R4-R6,PC}

   \                                 In section .rodata, align 4
   \                     ?_9:
   \        0x0   0x00               DC8 0
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1298          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1299          uint8_t get_node_type( void )
   1300          {
   1301              return fan_nwk_manager_app.node_basic_cfg.fan_device_type;
   \                     get_node_type: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable30
   \        0x2   0x7B40             LDRB     R0,[R0, #+13]
   \        0x4   0x4770             BX       LR
   1302          }
   1303          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1304          void  get_self_extended_address (uint8_t *macAddr)
   1305          { 
   \                     get_self_extended_address: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   1306              memcpy( macAddr, fan_nwk_manager_app.node_basic_cfg.self_ieee_addr,IEEE_ADDRESS_LENGTH );  
   \        0x4   0x2408             MOVS     R4,#+8
   \        0x6   0x.... 0x....      LDR.W    R5,??DataTable32_1
   \        0xA   0x003E             MOVS     R6,R7
   \        0xC   0x0022             MOVS     R2,R4
   \        0xE   0x0029             MOVS     R1,R5
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0x.... 0x....      BL       __aeabi_memcpy
   1307          }
   \       0x16   0xBDF1             POP      {R0,R4-R7,PC}
   1308          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1309          void  get_self_extended_address_reverse (uint8_t *macAddr)
   1310          { 
   \                     get_self_extended_address_reverse: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1311              mem_rev_cpy( macAddr, fan_nwk_manager_app.node_basic_cfg.self_ieee_addr,IEEE_ADDRESS_LENGTH );  
   \        0x4   0x2208             MOVS     R2,#+8
   \        0x6   0x.... 0x....      LDR.W    R1,??DataTable32_1
   \        0xA   0x0020             MOVS     R0,R4
   \        0xC   0x.... 0x....      BL       mem_rev_cpy
   1312          }
   \       0x10   0xBD10             POP      {R4,PC}
   1313          /*----------------------------------------------------------------------------*/
   1314          

   \                                 In section .text, align 2, keep-with-next
   1315          uint16_t get_current_pan_id( void )
   1316          {  
   1317            return fan_nwk_manager_app.node_basic_cfg.selected_pan_id;
   \                     get_current_pan_id: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable30
   \        0x2   0x8A40             LDRH     R0,[R0, #+18]
   \        0x4   0x4770             BX       LR
   1318          }
   1319          
   1320          
   1321          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1322          uint32_t get_sun_page_value(void)
   1323          {
   1324               if((fan_nwk_manager_app.node_basic_cfg.us_ie.us_schedule.channel_plan == 0x01 ) ||
   1325                 fan_nwk_manager_app.node_basic_cfg.us_ie.us_schedule.channel_plan  == 0x00)  // diff from reg domain
   \                     get_sun_page_value: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable30
   \        0x2   0xF891 0x0037      LDRB     R0,[R1, #+55]
   \        0x6   0x2801             CMP      R0,#+1
   \        0x8   0xD003             BEQ.N    ??get_sun_page_value_0
   \        0xA   0xF891 0x0037      LDRB     R0,[R1, #+55]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD109             BNE.N    ??get_sun_page_value_1
   1326              {
   1327                /*if reg domain and operating class is define check operating class and set that 
   1328                phy mode*/  
   1329                /* as of now we are directly taking phymode not from operating class--TBD*/
   1330               return (opearating_zone_list[fan_nwk_manager_app.node_basic_cfg.operatinng_country].SunPage|(fan_nwk_manager_app.node_basic_cfg.phy_mode)); 
   \                     ??get_sun_page_value_0: (+1)
   \       0x12   0x.... 0x....      LDR.W    R2,??DataTable33
   \       0x16   0xF891 0x002C      LDRB     R0,[R1, #+44]
   \       0x1A   0xEB02 0x00C0      ADD      R0,R2,R0, LSL #+3
   \       0x1E   0x6840             LDR      R0,[R0, #+4]
   \       0x20   0x7B89             LDRB     R1,[R1, #+14]
   \       0x22   0x4308             ORRS     R0,R1,R0
   \       0x24   0xE000             B.N      ??get_sun_page_value_2
   1331              }
   1332              return NULL;
   \                     ??get_sun_page_value_1: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \                     ??get_sun_page_value_2: (+1)
   \       0x28   0x4770             BX       LR
   1333          }  
   1334          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1335          uint16_t get_sun_channel(void)
   1336          {
   1337              if(fan_nwk_manager_app.node_basic_cfg.us_ie.us_schedule.channel_function == 0x00)
   \                     get_sun_channel: (+1)
   \        0x0   0x....             LDR.N    R1,??DataTable30
   \        0x2   0xF891 0x0038      LDRB     R0,[R1, #+56]
   \        0x6   0x2800             CMP      R0,#+0
   \        0x8   0xD10F             BNE.N    ??get_sun_channel_0
   1338                {
   1339                  if(fan_nwk_manager_app.node_basic_cfg.us_ie.us_schedule.channel_plan  == 0x00)
   \        0xA   0xF891 0x0037      LDRB     R0,[R1, #+55]
   \        0xE   0x2800             CMP      R0,#+0
   \       0x10   0xD102             BNE.N    ??get_sun_channel_1
   1340                  {
   1341                      return(fan_nwk_manager_app.node_basic_cfg.us_ie.channel_fixed.fixed_chan);
   \       0x12   0xF8B1 0x006B      LDRH     R0,[R1, #+107]
   \       0x16   0xE009             B.N      ??get_sun_channel_2
   1342                  }
   1343                  else if (fan_nwk_manager_app.node_basic_cfg.us_ie.us_schedule.channel_plan  == 0x01)
   \                     ??get_sun_channel_1: (+1)
   \       0x18   0xF891 0x0037      LDRB     R0,[R1, #+55]
   \       0x1C   0x2801             CMP      R0,#+1
   \       0x1E   0xD102             BNE.N    ??get_sun_channel_3
   1344                  {
   1345                     return(fan_nwk_manager_app.node_basic_cfg.us_ie.channel_fixed.fixed_chan);
   \       0x20   0xF8B1 0x006B      LDRH     R0,[R1, #+107]
   \       0x24   0xE002             B.N      ??get_sun_channel_2
   1346                  }
   1347                  else
   1348                    return 0;
   \                     ??get_sun_channel_3: (+1)
   \       0x26   0x2000             MOVS     R0,#+0
   \       0x28   0xE000             B.N      ??get_sun_channel_2
   1349                } 
   1350                else
   1351                {
   1352                  return 0;
   \                     ??get_sun_channel_0: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \                     ??get_sun_channel_2: (+1)
   \       0x2C   0x4770             BX       LR
   1353                } 
   1354          }  
   1355          /*----------------------------------------------------------------------------*/
   1356          

   \                                 In section .text, align 2, keep-with-next
   1357          void update_pan_id_from_border_router(uint16_t pan_id)
   1358          {
   \                     update_pan_id_from_border_router: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1359              fan_nwk_manager_app.node_basic_cfg.selected_pan_id = pan_id;
   \        0x4   0x....             LDR.N    R1,??DataTable30
   \        0x6   0x824C             STRH     R4,[R1, #+18]
   1360              mac_self_fan_info.pan_metrics.pan_id = pan_id;
   \        0x8   0x.... 0x....      LDR.W    R0,??DataTable33_24
   \        0xC   0xF8A0 0x408C      STRH     R4,[R0, #+140]
   1361              MLME_SET_Request
   1362              (
   1363                  macPANId,
   1364                  0,
   1365                  SHORT_ADDRESS_LENGTH,
   1366                  &(fan_nwk_manager_app.node_basic_cfg.selected_pan_id)
   1367              ); 
   \       0x10   0xF111 0x0312      ADDS     R3,R1,#+18
   \       0x14   0x2202             MOVS     R2,#+2
   \       0x16   0x2100             MOVS     R1,#+0
   \       0x18   0x2050             MOVS     R0,#+80
   \       0x1A   0x.... 0x....      BL       MLME_SET_Request
   1368          }
   \       0x1E   0xBD10             POP      {R4,PC}
   1369          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1370          void update_self_global_addr(uint8_t *g_ip_addr)
   1371          {
   \                     update_self_global_addr: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   1372            memcpy(fan_nwk_manager_app.node_basic_cfg.self_global_addr, g_ip_addr, 16);
   \        0x4   0x2410             MOVS     R4,#+16
   \        0x6   0x003D             MOVS     R5,R7
   \        0x8   0x.... 0x....      LDR.W    R6,??DataTable33_25
   \        0xC   0x0022             MOVS     R2,R4
   \        0xE   0x0029             MOVS     R1,R5
   \       0x10   0x0030             MOVS     R0,R6
   \       0x12   0x.... 0x....      BL       __aeabi_memcpy
   1373          #if ((EFR32FG13P_LBR == 0x00)  && (APP_NVM_FEATURE_ENABLED == 1))
   1374              nvm_store_node_basic_info(); 
   1375          #endif    
   1376            return;
   \       0x16   0xBDF1             POP      {R0,R4-R7,PC}
   1377          }
   1378          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1379          uint8_t* get_self_global_addr()
   1380          {
   1381            return fan_nwk_manager_app.node_basic_cfg.self_global_addr;
   \                     get_self_global_addr: (+1)
   \        0x0   0x.... 0x....      LDR.W    R0,??DataTable33_25
   \        0x4   0x4770             BX       LR
   1382          }
   1383          /*----------------------------------------------------------------------------*/
   1384          /******************************************************************************
   1385          
   1386                        MAC to Application Indications
   1387          
   1388          *******************************************************************************/
   1389          
   1390          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1391          void App_MCPS_Purge_Conf_cb
   1392          (
   1393              uint8_t msdu_handle,
   1394              uint8_t status
   1395          )
   1396          {
   1397            return ;
   \                     App_MCPS_Purge_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1398          }
   1399          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1400          void App_MLME_Associate_Conf_cb
   1401          (
   1402          	uint16_t short_address,
   1403          	uint8_t status,
   1404          	uint8_t* pLowLatencyNwkInfo,
   1405          	uint16 channelOffset,
   1406          	uint8_t HoppingSequenceLength,
   1407          	uint8_t HoppingSequence,
   1408          	security_params_t *sec_params
   1409          )
   1410          {     
   1411            return ;
   \                     App_MLME_Associate_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1412          }
   1413          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1414          void App_MLME_Associate_Ind_cb
   1415          (
   1416          	uint8_t* pChild_64_bit_addr,
   1417          	uint8_t CapabilityInformation,
   1418          	uint8_t* pLowLatencyNwkInfo,
   1419          	uint16 channelOffset,
   1420          	uint8_t  HoppingSequenceID,
   1421          	security_params_t *sec_params
   1422          )
   1423          {
   1424            return ;  
   \                     App_MLME_Associate_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1425          }
   1426          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1427          void  App_MLME_Beacon_Notify_Ind_cb
   1428          (
   1429          	uint8_t bsn,
   1430          	pandesc_t* pPandesc,
   1431          	uint8_t PendAddrSpec,
   1432          	uint8_t* pPendaddrlist,
   1433          	uint16_t sdulen,
   1434          	uint8_t* pSdu,
   1435          	uint8_t ebsn,
   1436          	uint8_t beaconType,
   1437          	coex_spec_ie_t* coex_spec
   1438          )
   1439          { 
   1440            return; // not used in fan  
   \                     App_MLME_Beacon_Notify_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1441          }
   1442          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1443          void  App_MLME_Comm_Status_Ind_cb
   1444          (
   1445          	mac_address_t* pSrcaddr,
   1446          	mac_address_t* pDstaddr,
   1447          	uint8_t status,
   1448          	security_params_t *sec_param
   1449          )
   1450          {  
   1451            return ;  
   \                     App_MLME_Comm_Status_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1452          }
   1453          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1454          void App_MLME_Poll_Conf_cb( uint8_t status )
   1455          {   
   1456            return;  // not used in fan;
   \                     App_MLME_Poll_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1457          }
   1458          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1459          void  App_MLME_Reset_Conf_cb( uint8_t status )
   1460          {
   \                     App_MLME_Reset_Conf_cb: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1461              /*This function is used to send confirmation for the Reset request*/
   1462              sm_event_t e = { (sm_trigger_t) TRIGGER_RESET_CONF, { 0 } };
   \        0x4   0x.... 0x....      LDR.W    R2,??DataTable33_26
   \        0x8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xC   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1463              app_mlme_reset_conf_handler_t app_mlme_reset_conf_handler = NULL;
   \       0x10   0x2500             MOVS     R5,#+0
   1464              
   1465              if( status == MAC_SUCCESS )
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0xB2C0             UXTB     R0,R0
   \       0x16   0x2800             CMP      R0,#+0
   \       0x18   0xD104             BNE.N    ??App_MLME_Reset_Conf_cb_0
   1466              {
   1467                fan_nwk_manager_app.result = MAC_SUCCESS;    
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x....             LDR.N    R0,??DataTable30
   \       0x1E   0xF880 0x113C      STRB     R1,[R0, #+316]
   \       0x22   0xE002             B.N      ??App_MLME_Reset_Conf_cb_1
   1468              }
   1469              else
   1470              {
   1471                fan_nwk_manager_app.result = status;         
   \                     ??App_MLME_Reset_Conf_cb_0: (+1)
   \       0x24   0x....             LDR.N    R0,??DataTable30
   \       0x26   0xF880 0x413C      STRB     R4,[R0, #+316]
   1472              }
   1473          
   1474              SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \                     ??App_MLME_Reset_Conf_cb_1: (+1)
   \       0x2A   0x....             LDR.N    R2,??DataTable30
   \       0x2C   0x6810             LDR      R0,[R2, #+0]
   \       0x2E   0x2800             CMP      R0,#+0
   \       0x30   0xD004             BEQ.N    ??App_MLME_Reset_Conf_cb_2
   \       0x32   0x4669             MOV      R1,SP
   \       0x34   0x0010             MOVS     R0,R2
   \       0x36   0x6812             LDR      R2,[R2, #+0]
   \       0x38   0x4790             BLX      R2
   \       0x3A   0xE002             B.N      ??App_MLME_Reset_Conf_cb_3
   \                     ??App_MLME_Reset_Conf_cb_2: (+1)
   \       0x3C   0x2000             MOVS     R0,#+0
   \       0x3E   0x.... 0x....      BL       error_increment
   1475          
   1476              if( app_mlme_reset_conf_handler != NULL )
   \                     ??App_MLME_Reset_Conf_cb_3: (+1)
   \       0x42   0x0028             MOVS     R0,R5
   \       0x44   0x2800             CMP      R0,#+0
   \       0x46   0xD002             BEQ.N    ??App_MLME_Reset_Conf_cb_4
   1477              {
   1478                app_mlme_reset_conf_handler(status);
   \       0x48   0x0020             MOVS     R0,R4
   \       0x4A   0xB2C0             UXTB     R0,R0
   \       0x4C   0x47A8             BLX      R5
   1479              }
   1480              return ; 
   \                     ??App_MLME_Reset_Conf_cb_4: (+1)
   \       0x4E   0xBD37             POP      {R0-R2,R4,R5,PC}
   1481          }

   \                                 In section .rodata, align 4
   \                     ?_10:
   \        0x0   0x03               DC8 3
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1482          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1483          void App_MLME_Scan_Conf_cb
   1484          (
   1485          	uint8_t status,
   1486          	uint8_t ScanType,
   1487          	uint8_t ChannelPage,
   1488          	uint8_t* p_unscannedChannels,
   1489          	uint8_t ResultListSize,
   1490          	void *ResultList
   1491          )
   1492          {	
   1493            return;  // not used in fan    
   \                     App_MLME_Scan_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1494          }
   1495          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1496          void App_MLME_Start_Conf_cb
   1497          (
   1498          	uint8_t status
   1499          )
   1500          {
   \                     App_MLME_Start_Conf_cb: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1501          	/*This function is used to send confirmation for the start request*/
   1502                sm_event_t e = { (sm_trigger_t) TRIGGER_NWK_START_CONF, { 0 } };
   \        0x4   0x....             LDR.N    R2,??DataTable33_27
   \        0x6   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1503                app_mlme_start_conf_handler_t app_mlme_start_conf_handler = NULL;
   \        0xE   0x2500             MOVS     R5,#+0
   1504                if( status == MAC_SUCCESS )
   \       0x10   0x0020             MOVS     R0,R4
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD10C             BNE.N    ??App_MLME_Start_Conf_cb_0
   1505                {
   1506                  SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \       0x18   0x....             LDR.N    R2,??DataTable30
   \       0x1A   0x6810             LDR      R0,[R2, #+0]
   \       0x1C   0x2800             CMP      R0,#+0
   \       0x1E   0xD004             BEQ.N    ??App_MLME_Start_Conf_cb_1
   \       0x20   0x4669             MOV      R1,SP
   \       0x22   0x0010             MOVS     R0,R2
   \       0x24   0x6812             LDR      R2,[R2, #+0]
   \       0x26   0x4790             BLX      R2
   \       0x28   0xE007             B.N      ??App_MLME_Start_Conf_cb_2
   \                     ??App_MLME_Start_Conf_cb_1: (+1)
   \       0x2A   0x2000             MOVS     R0,#+0
   \       0x2C   0x.... 0x....      BL       error_increment
   \       0x30   0xE003             B.N      ??App_MLME_Start_Conf_cb_2
   1507                }
   1508                else
   1509                {
   1510                  /* go to idle state and start all over again */
   1511                  sm_transit((sm_t *)&fan_nwk_manager_app, (sm_state_t)&node_idle );
   \                     ??App_MLME_Start_Conf_cb_0: (+1)
   \       0x32   0x....             LDR.N    R1,??DataTable33_7
   \       0x34   0x....             LDR.N    R0,??DataTable30
   \       0x36   0x.... 0x....      BL       sm_transit
   1512                }  
   1513                if( app_mlme_start_conf_handler != NULL )
   \                     ??App_MLME_Start_Conf_cb_2: (+1)
   \       0x3A   0x0028             MOVS     R0,R5
   \       0x3C   0x2800             CMP      R0,#+0
   \       0x3E   0xD002             BEQ.N    ??App_MLME_Start_Conf_cb_3
   1514                {
   1515                  app_mlme_start_conf_handler(status);
   \       0x40   0x0020             MOVS     R0,R4
   \       0x42   0xB2C0             UXTB     R0,R0
   \       0x44   0x47A8             BLX      R5
   1516                }
   1517                return ;
   \                     ??App_MLME_Start_Conf_cb_3: (+1)
   \       0x46   0xBD37             POP      {R0-R2,R4,R5,PC}
   1518          }

   \                                 In section .rodata, align 4
   \                     ?_11:
   \        0x0   0x05               DC8 5
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1519          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1520          void App_MLME_SET_Conf_cb
   1521          (
   1522           uint8_t status,
   1523           uint8_t PIBAttribute,
   1524           uint8_t PIBAttributeIndex
   1525          )
   1526          {
   \                     App_MLME_SET_Conf_cb: (+1)
   \        0x0   0xB5FE             PUSH     {R1-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   \        0x4   0x000C             MOVS     R4,R1
   \        0x6   0x0015             MOVS     R5,R2
   1527              /*This function is used to send confirmation for the set request*/
   1528              sm_event_t e = { (sm_trigger_t) TRIGGER_SET_CONF, { 0 } };
   \        0x8   0x....             LDR.N    R2,??DataTable33_28
   \        0xA   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xE   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1529          
   1530              app_mlme_set_conf_handler_t app_mlme_set_conf_handler = NULL;;
   \       0x12   0x2600             MOVS     R6,#+0
   1531          
   1532              if( status == MAC_SUCCESS )
   \       0x14   0x0038             MOVS     R0,R7
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x2800             CMP      R0,#+0
   \       0x1A   0xD106             BNE.N    ??App_MLME_SET_Conf_cb_0
   1533              {
   1534                fan_nwk_manager_app.result = MAC_SUCCESS;           
   \       0x1C   0x2100             MOVS     R1,#+0
   \       0x1E   0x....             LDR.N    R0,??DataTable30
   \       0x20   0xF880 0x113C      STRB     R1,[R0, #+316]
   1535                e.param.scalar = PIBAttribute;
   \       0x24   0xF88D 0x4004      STRB     R4,[SP, #+4]
   \       0x28   0xE004             B.N      ??App_MLME_SET_Conf_cb_1
   1536              }
   1537              else
   1538              {
   1539                fan_nwk_manager_app.result = status;
   \                     ??App_MLME_SET_Conf_cb_0: (+1)
   \       0x2A   0x....             LDR.N    R0,??DataTable30
   \       0x2C   0xF880 0x713C      STRB     R7,[R0, #+316]
   1540                e.param.scalar = PIBAttribute;
   \       0x30   0xF88D 0x4004      STRB     R4,[SP, #+4]
   1541              }
   1542          
   1543              SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \                     ??App_MLME_SET_Conf_cb_1: (+1)
   \       0x34   0x....             LDR.N    R2,??DataTable30
   \       0x36   0x6810             LDR      R0,[R2, #+0]
   \       0x38   0x2800             CMP      R0,#+0
   \       0x3A   0xD004             BEQ.N    ??App_MLME_SET_Conf_cb_2
   \       0x3C   0x4669             MOV      R1,SP
   \       0x3E   0x0010             MOVS     R0,R2
   \       0x40   0x6812             LDR      R2,[R2, #+0]
   \       0x42   0x4790             BLX      R2
   \       0x44   0xE002             B.N      ??App_MLME_SET_Conf_cb_3
   \                     ??App_MLME_SET_Conf_cb_2: (+1)
   \       0x46   0x2000             MOVS     R0,#+0
   \       0x48   0x.... 0x....      BL       error_increment
   1544              if( app_mlme_set_conf_handler != NULL )
   \                     ??App_MLME_SET_Conf_cb_3: (+1)
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0x2800             CMP      R0,#+0
   \       0x50   0xD006             BEQ.N    ??App_MLME_SET_Conf_cb_4
   1545              {
   1546                app_mlme_set_conf_handler(status,PIBAttribute,PIBAttributeIndex);
   \       0x52   0x002A             MOVS     R2,R5
   \       0x54   0xB2D2             UXTB     R2,R2
   \       0x56   0x0021             MOVS     R1,R4
   \       0x58   0xB2C9             UXTB     R1,R1
   \       0x5A   0x0038             MOVS     R0,R7
   \       0x5C   0xB2C0             UXTB     R0,R0
   \       0x5E   0x47B0             BLX      R6
   1547              }
   1548              return ;
   \                     ??App_MLME_SET_Conf_cb_4: (+1)
   \       0x60   0xBDF7             POP      {R0-R2,R4-R7,PC}
   1549          }

   \                                 In section .rodata, align 4
   \                     ?_12:
   \        0x0   0x04               DC8 4
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1550          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1551          void App_MLME_GET_Conf_cb
   1552          (
   1553              uint8_t status,
   1554              uint8_t PIBAttribute,
   1555              uint8_t PIBAttributeIndex,
   1556              uint16_t PIBAttributeLength,
   1557              void *PIBAttributeValue
   1558          )
   1559          {
   1560            return ;// not used in fan 
   \                     App_MLME_GET_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1561          }
   1562          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1563          void App_MLME_Dissociate_Ind_cb
   1564          (
   1565              uint8_t* DeviceAddress,
   1566              uint8_t DisassociateReason,
   1567              security_params_t *sec_params
   1568          )
   1569          {
   1570            return ;// not used in fan 
   \                     App_MLME_Dissociate_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1571          }
   1572          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1573          void App_MLME_Dissociate_Conf_cb
   1574          (
   1575              uint8_t status,
   1576              mac_address_t* Deviceaddr // device address
   1577          )
   1578          {
   1579              return ;// not used in fan 
   \                     App_MLME_Dissociate_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1580          }
   1581          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1582          void App_MLME_Orphan_Ind_cb
   1583          (
   1584              uint8_t* pOrphan64bitAddress, // 64bit address of orphan device
   1585              security_params_t *sec_params
   1586          )
   1587          {
   1588              return ;// not used in fan 
   \                     App_MLME_Orphan_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1589          }
   1590          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1591          void App_MLME_Sync_Loss_Ind_cb
   1592          (
   1593              uint8_t LossReason,			//loss reason
   1594              uint16_t PANId,					//PANID
   1595              uint8_t LogicalChannel, 		// LogicalChannel
   1596              uint8_t ChannelPage,			// ChannelPage
   1597              security_params_t *sec_params
   1598          )
   1599          {
   1600            return ;// not used in fan 
   \                     App_MLME_Sync_Loss_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1601          }
   1602          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1603          void App_MLME_Beacon_Request_Ind_cb
   1604          (
   1605              uchar bcn_type,
   1606              mac_address_t* src_addr,
   1607              ushort dest_pan_id,
   1608              ushort ie_list_fld_size,
   1609              uchar* p_ie_list
   1610          )
   1611          {
   1612            return ;  // not used in fan   
   \                     App_MLME_Beacon_Request_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1613          }
   1614          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1615          void App_MLME_Beacon_Conf_cb( uchar status )
   1616          {
   1617            return; // not used in fan 
   \                     App_MLME_Beacon_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1618          }
   1619          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1620          void App_MAC_Set_PHY_Mode_Conf_cb
   1621          (
   1622              uint8_t status
   1623          )
   1624          {
   1625              return;  // not used in fan
   \                     App_MAC_Set_PHY_Mode_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1626          }
   1627          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1628          void App_MCPS_Data_Conf_cb
   1629          (
   1630              uint8_t msduHandle, 
   1631              uint8_t status, 
   1632              uint8_t NumBackoffs,
   1633              uint32_t Timestamp
   1634          )
   1635          {
   1636            // this function is not used when fan data send to the application
   1637            return ;
   \                     App_MCPS_Data_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1638          }
   1639          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1640          void App_MCPS_Data_Ind_cb
   1641          (
   1642          	mac_address_t*  pSrcaddr,
   1643          	mac_address_t*  pDstaddr,
   1644          	uint16_t msduLength,
   1645          	uint8_t* pMsdu,
   1646          	uint8_t mpduLinkQuality,
   1647          	uint8_t DSN,
   1648                  uint8_t pld_ies_present,
   1649          	uint64_t Timestamp,
   1650          	security_params_t* pSec 
   1651          )
   1652          {
   1653              return;
   \                     App_MCPS_Data_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1654          }
   1655          
   1656          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1657          void App_FAN_MCPS_Data_Conf_cb
   1658          (
   1659          	uint8_t msduHandle, 
   1660          	uint8_t status, 
   1661          	uint8_t NumBackoffs,
   1662          	uint32_t Timestamp
   1663          )
   1664          {
   \                     App_FAN_MCPS_Data_Conf_cb: (+1)
   \        0x0   0xE92D 0x47F8      PUSH     {R3-R10,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
   \        0x6   0x0004             MOVS     R4,R0
   \        0x8   0x000D             MOVS     R5,R1
   \        0xA   0x0016             MOVS     R6,R2
   \        0xC   0x2114             MOVS     R1,#+20
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0x466F             MOV      R7,SP
   \       0x12   0x0038             MOVS     R0,R7
   \       0x14   0x.... 0x....      BL       __aeabi_memset
   1665              uint8_t hif_Send_buff [20] = {0};
   1666              uint8_t* buf = &hif_Send_buff [0];
   \       0x18   0x4669             MOV      R1,SP
   1667              
   1668              *buf++ = FAN_MAC_MCPS_DATA_CONFIRM;
   \       0x1A   0x207C             MOVS     R0,#+124
   \       0x1C   0x7008             STRB     R0,[R1, #+0]
   \       0x1E   0x1C48             ADDS     R0,R1,#+1
   1669              *buf++ = msduHandle;
   \       0x20   0x7004             STRB     R4,[R0, #+0]
   \       0x22   0x1C40             ADDS     R0,R0,#+1
   1670              *buf++ = status;
   \       0x24   0x7005             STRB     R5,[R0, #+0]
   \       0x26   0x1C40             ADDS     R0,R0,#+1
   1671              *buf++ = NumBackoffs;
   \       0x28   0x7006             STRB     R6,[R0, #+0]
   \       0x2A   0xF110 0x0A01      ADDS     R10,R0,#+1
   1672              memcpy(buf,(uint8_t*)&Timestamp,3);
   \       0x2E   0x2703             MOVS     R7,#+3
   \       0x30   0xF10D 0x0814      ADD      R8,SP,#+20
   \       0x34   0x46D1             MOV      R9,R10
   \       0x36   0x003A             MOVS     R2,R7
   \       0x38   0x4641             MOV      R1,R8
   \       0x3A   0x4648             MOV      R0,R9
   \       0x3C   0x.... 0x....      BL       __aeabi_memcpy
   1673              buf+=3;
   \       0x40   0xF11A 0x0103      ADDS     R1,R10,#+3
   1674              
   1675              *buf++ = 0x55;//Dummy Comport 
   \       0x44   0x2055             MOVS     R0,#+85
   \       0x46   0x7008             STRB     R0,[R1, #+0]
   \       0x48   0x1C48             ADDS     R0,R1,#+1
   1676              //hif_send_msg_up(&hif_Send_buff [0],7,1);
   1677          }
   \       0x4A   0xB006             ADD      SP,SP,#+24
   \       0x4C   0xE8BD 0x87F0      POP      {R4-R10,PC}
   1678          
   1679          
   1680          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1681          void App_FAN_ack_Ind_cb( mac_address_t*  pSrcaddr,
   1682              mac_address_t*  pDstaddr,
   1683              uint8_t DSN,
   1684              uint8_t rsl_value,
   1685              uint8_t security_status
   1686              )
   1687          {
   \                     App_FAN_ack_Ind_cb: (+1)
   \        0x0   0xE92D 0x41FC      PUSH     {R2-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
   1688            mac_ack_ind_handler_t mac_to_6lp_ackind_handler = NULL;
   \        0xC   0x2100             MOVS     R1,#+0
   1689            mac_to_6lp_ackind_handler = mac_2_6lp_ack_ind_cb;
   \        0xE   0x.... 0x....      LDR.W    R8,??DataTable33_29
   1690            if(mac_to_6lp_ackind_handler!= NULL)
   \       0x12   0x4640             MOV      R0,R8
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD009             BEQ.N    ??App_FAN_ack_Ind_cb_0
   1691            {
   1692              mac_to_6lp_ackind_handler
   1693                (
   1694                pSrcaddr,
   1695                pDstaddr,
   1696                DSN,
   1697                rsl_value,
   1698                security_status
   1699              );
   \       0x18   0xF89D 0x0020      LDRB     R0,[SP, #+32]
   \       0x1C   0x9000             STR      R0,[SP, #+0]
   \       0x1E   0x003B             MOVS     R3,R7
   \       0x20   0xB2DB             UXTB     R3,R3
   \       0x22   0x0032             MOVS     R2,R6
   \       0x24   0xB2D2             UXTB     R2,R2
   \       0x26   0x0029             MOVS     R1,R5
   \       0x28   0x0020             MOVS     R0,R4
   \       0x2A   0x47C0             BLX      R8
   1700            }
   1701            return ;
   \                     ??App_FAN_ack_Ind_cb_0: (+1)
   \       0x2C   0xE8BD 0x81F3      POP      {R0,R1,R4-R8,PC}
   1702          }
   1703          
   1704          /******************************************************************************/
   1705          

   \                                 In section .text, align 2, keep-with-next
   1706          void App_FAN_no_ack_Ind_cb (void)
   1707          {
   \                     App_FAN_no_ack_Ind_cb: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   1708            mac_no_ack_ind_handler_t mac_to_6lp_no_ack_ind_handler = NULL;
   \        0x2   0x2100             MOVS     R1,#+0
   1709            mac_to_6lp_no_ack_ind_handler = mac_2_6lp_no_ack_ind_cb;
   \        0x4   0x....             LDR.N    R4,??DataTable33_30
   1710            if(mac_to_6lp_no_ack_ind_handler!= NULL)
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x2800             CMP      R0,#+0
   \        0xA   0xD000             BEQ.N    ??App_FAN_no_ack_Ind_cb_0
   1711            {
   1712              mac_to_6lp_no_ack_ind_handler ();
   \        0xC   0x47A0             BLX      R4
   1713            }
   1714            return ;
   \                     ??App_FAN_no_ack_Ind_cb_0: (+1)
   \        0xE   0xBD10             POP      {R4,PC}
   1715          }
   1716          
   1717          /******************************************************************************/
   1718          

   \                                 In section .text, align 2, keep-with-next
   1719          void App_FAN_MCPS_Data_Ind_cb
   1720          (
   1721              mac_address_t*  pSrcaddr,
   1722              mac_address_t*  pDstaddr,
   1723              uint16_t msduLength,
   1724              uint8_t* pMsdu,
   1725              uint8_t mpduLinkQuality,
   1726              uint8_t DSN,
   1727              uint8_t pld_ies_present,
   1728              uint32_t Timestamp,
   1729              security_params_t* pSec
   1730          )
   1731          {
   \                     App_FAN_MCPS_Data_Ind_cb: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB086             SUB      SP,SP,#+24
   \        0x6   0x0006             MOVS     R6,R0
   \        0x8   0x000F             MOVS     R7,R1
   \        0xA   0x9D12             LDR      R5,[SP, #+72]
   1732          //    uint8_t joiner_dev_addr[8] = {0x00};
   1733          //    uint8_t kmp_id = 0xFF;
   1734              uint8_t tran_cont = *pMsdu++;
   \        0xC   0xF893 0x8000      LDRB     R8,[R3, #+0]
   \       0x10   0x1C5C             ADDS     R4,R3,#+1
   1735              msduLength -= 1;
   \       0x12   0xF1B2 0x0901      SUBS     R9,R2,#+1
   1736              uint16_t multiplex_id = 0x00;
   \       0x16   0x2000             MOVS     R0,#+0
   \       0x18   0xF8AD 0x0014      STRH     R0,[SP, #+20]
   1737              memcpy(&multiplex_id,pMsdu,2);
   \       0x1C   0xF05F 0x0A02      MOVS     R10,#+2
   \       0x20   0x9400             STR      R4,[SP, #+0]
   \       0x22   0xF10D 0x0B14      ADD      R11,SP,#+20
   \       0x26   0x4652             MOV      R2,R10
   \       0x28   0x9900             LDR      R1,[SP, #+0]
   \       0x2A   0x4658             MOV      R0,R11
   \       0x2C   0x.... 0x....      BL       __aeabi_memcpy
   1738              pMsdu+=2;
   \       0x30   0x1CA4             ADDS     R4,R4,#+2
   1739              msduLength-=2;
   \       0x32   0xF1B9 0x0902      SUBS     R9,R9,#+2
   1740              /*Need to check this for sec is it correct logic after merging code*/
   1741          #if ( FAN_EAPOL_FEATURE_ENABLED == 1)                           //!(WITHOUT_EAPOL)    
   1742              if(multiplex_id == 0x0001)/*Key Management Protocol (as defined in [IEEE802.15.9])*/
   1743              {
   1744                mac_data_eapol_ind_handler_t mac_eapol_data_ind_handler = NULL;
   1745                mac_eapol_data_ind_handler = mac_2_eapol_data_ind_cb;
   1746                mac_data_eapol_ind_handler_t mac_eapol_relay_data_ind_handler = NULL;
   1747                mac_eapol_relay_data_ind_handler = mac2_eapol_relay_ind_cb;
   1748                
   1749                kmp_id = *pMsdu++;
   1750                msduLength-=1;
   1751                if((fan_mac_information_data.fan_node_type == 0x01)
   1752                   &&(fan_mac_information_data.state_ind == JOIN_STATE_5)
   1753          #if(FAN_EAPOL_FEATURE_ENABLED == 1)
   1754                     &&(memcmp(pSrcaddr->address.ieee_address,eapol_parent_child_info.sle_eapol_parent,8))
   1755          #endif
   1756                       )
   1757                {
   1758                  
   1759                  if(child_device_index <= APP_CFG_MAX_DEV_SUPPORT)
   1760                  {
   1761                    uint8_t index = get_relay_device_index(pSrcaddr->address.ieee_address);
   1762          #if(FAN_EAPOL_FEATURE_ENABLED == 1)
   1763                    if(memcmp(pSrcaddr->address.ieee_address,eapol_parent_child_info.child_info[index].child_addr,8) 
   1764                       &&(kmp_id == 0x06)|| (kmp_id == 0x07))
   1765                    {
   1766                      memcpy(&eapol_parent_child_info.child_info[child_device_index++].child_addr,pSrcaddr->address.ieee_address,8);
   1767                      mem_rev_cpy(joiner_dev_addr,pSrcaddr->address.ieee_address,8);
   1768                      add_dev_desc_on_MAC_for_security(&joiner_dev_addr[0]);
   1769                    }
   1770          #endif
   1771                  }
   1772                  
   1773                  
   1774                  
   1775                  mac_eapol_relay_data_ind_handler
   1776                    (
   1777                     pSrcaddr,
   1778                     pDstaddr,
   1779                     tran_cont,
   1780                     multiplex_id,
   1781                     kmp_id,
   1782                     msduLength,
   1783                     pMsdu
   1784                       );   
   1785                }
   1786                else
   1787                {
   1788                  if(relay_reply_flag == 0x01)
   1789                  {
   1790                    relay_reply_flag = 0xFF;
   1791                  }
   1792                  mac_eapol_data_ind_handler
   1793                    (
   1794                     pSrcaddr,
   1795                     pDstaddr,
   1796                     tran_cont,
   1797                     multiplex_id,
   1798                     kmp_id,
   1799                     msduLength,
   1800                     pMsdu
   1801                       );
   1802                }
   1803              }
   1804          #endif //#if(FAN_EAPOL_FEATURE_ENABLED == 1)
   1805              
   1806              if(multiplex_id == 0xA0ED)/*LoWPAN encapsulation (see [RFC7973]).*/
   \       0x36   0xF8BD 0x1014      LDRH     R1,[SP, #+20]
   \       0x3A   0xF24A 0x00ED      MOVW     R0,#+41197
   \       0x3E   0x4281             CMP      R1,R0
   \       0x40   0xD11F             BNE.N    ??App_FAN_MCPS_Data_Ind_cb_0
   1807              {
   1808          
   1809                mac_data_ind_handler_t mac_data_ind_handler = NULL;
   \       0x42   0x2000             MOVS     R0,#+0
   1810                if(pld_ies_present)
   \       0x44   0x0029             MOVS     R1,R5
   \       0x46   0xB2C9             UXTB     R1,R1
   \       0x48   0x2900             CMP      R1,#+0
   \       0x4A   0xD01E             BEQ.N    ??App_FAN_MCPS_Data_Ind_cb_1
   1811                {
   1812                  mac_data_ind_handler = mac_2_6lp_data_ind_cb;
   \       0x4C   0x.... 0x....      LDR.W    R10,??DataTable33_31
   1813                  if( pMsdu!= NULL) /*&p_data_msdu,*/   
   \       0x50   0x2C00             CMP      R4,#+0
   \       0x52   0xD01A             BEQ.N    ??App_FAN_MCPS_Data_Ind_cb_1
   1814                  {
   1815                    if( mac_data_ind_handler != NULL )
   \       0x54   0x4650             MOV      R0,R10
   \       0x56   0x2800             CMP      R0,#+0
   \       0x58   0xD017             BEQ.N    ??App_FAN_MCPS_Data_Ind_cb_1
   1816                    {
   1817                      mac_data_ind_handler
   1818                        (
   1819                         pSrcaddr,
   1820                         pDstaddr,
   1821                         msduLength,
   1822                         pMsdu,
   1823                         mpduLinkQuality,
   1824                         DSN,
   1825                         pld_ies_present,
   1826                         Timestamp,
   1827                         pSec 
   1828                           );
   \       0x5A   0x9814             LDR      R0,[SP, #+80]
   \       0x5C   0x9004             STR      R0,[SP, #+16]
   \       0x5E   0x9813             LDR      R0,[SP, #+76]
   \       0x60   0x9003             STR      R0,[SP, #+12]
   \       0x62   0x0028             MOVS     R0,R5
   \       0x64   0xB2C0             UXTB     R0,R0
   \       0x66   0x9002             STR      R0,[SP, #+8]
   \       0x68   0xF89D 0x0044      LDRB     R0,[SP, #+68]
   \       0x6C   0x9001             STR      R0,[SP, #+4]
   \       0x6E   0xF89D 0x0040      LDRB     R0,[SP, #+64]
   \       0x72   0x9000             STR      R0,[SP, #+0]
   \       0x74   0x0023             MOVS     R3,R4
   \       0x76   0x464A             MOV      R2,R9
   \       0x78   0xB292             UXTH     R2,R2
   \       0x7A   0x0039             MOVS     R1,R7
   \       0x7C   0x0030             MOVS     R0,R6
   \       0x7E   0x47D0             BLX      R10
   \       0x80   0xE003             B.N      ??App_FAN_MCPS_Data_Ind_cb_1
   1829                    }
   1830                  }
   1831                }
   1832              }
   1833              else if(multiplex_id == 0x0002)/*0x0002 Wi-SUN Defined Payload*/
   \                     ??App_FAN_MCPS_Data_Ind_cb_0: (+1)
   \       0x82   0xF8BD 0x0014      LDRH     R0,[SP, #+20]
   \       0x86   0x2802             CMP      R0,#+2
   \       0x88   0xD0FF             BEQ.N    ??App_FAN_MCPS_Data_Ind_cb_2
   1834              {
   1835                return ;
   1836              }
   1837          
   1838            return ;
   \                     ??App_FAN_MCPS_Data_Ind_cb_1: (+1)
   \                     ??App_FAN_MCPS_Data_Ind_cb_2: (+1)
   \       0x8A   0xB007             ADD      SP,SP,#+28
   \       0x8C   0xE8BD 0x8FF0      POP      {R4-R11,PC}
   1839          }
   1840          
   1841          
   1842          /*----------------------------------------------------------------------------*/
   1843          

   \                                 In section .text, align 2, keep-with-next
   1844          void App_MLME_ws_async_frame_Conf_cb( uint8_t status , uint8_t async_frame_type )
   1845          {
   1846          
   1847          }
   \                     App_MLME_ws_async_frame_Conf_cb: (+1)
   \        0x0   0x4770             BX       LR
   1848          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1849          void App_MLME_WS_ASYNC_FRAME_Ind_cb
   1850          (
   1851                uint8_t status,
   1852                uint8_t frame_type,
   1853                mac_address_t *p_Srcaddr//Src address details
   1854          )
   1855          {
   1856          #if (AUTO_CONFIG_ENABLE == 0)
   1857            if (response_laye_ID == APP_DEF_LAYER_ID_TOOL)
   1858            {
   1859              uint8_t hif_Send_buff [13] = {0};
   1860              uint8_t* buf = &hif_Send_buff [0];
   1861              
   1862              *buf++ = ASYNC_FRAME_INDICATION_TO_TOOL;
   1863              *buf++ = status;
   1864              *buf++ = frame_type;
   1865              memcpy( buf,p_Srcaddr->address.ieee_address, 8 );
   1866              buf += 8;
   1867              
   1868              *buf++ = DUMMY_COMPORT;//Dummy Comport 
   1869              hif_send_msg_up(&hif_Send_buff [0],11,response_laye_ID,PROTOCOL_ID_FOR_APP);
   1870            }
   1871          #endif
   1872          }
   \                     App_MLME_WS_ASYNC_FRAME_Ind_cb: (+1)
   \        0x0   0x4770             BX       LR
   1873          
   1874          /*----------------------------------------------------------------------------*/
   1875          

   \                                 In section .text, align 2, keep-with-next
   1876          void App_MLME_Set_Mac_Channel_Info_Conf_cb
   1877          (
   1878          	uint8_t status
   1879          )
   1880          {
   \                     App_MLME_Set_Mac_Channel_Info_Conf_cb: (+1)
   \        0x0   0xB51C             PUSH     {R2-R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
   1881              /*This function is used to send confirmation for the start request*/
   1882              sm_event_t e = { (sm_trigger_t) TRIGGER_NWK_START_CONF, { 0 } };
   \        0x4   0x....             LDR.N    R2,??DataTable33_32
   \        0x6   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xA   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1883             
   1884              if( status == MAC_SUCCESS )
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0xB2C0             UXTB     R0,R0
   \       0x12   0x2800             CMP      R0,#+0
   \       0x14   0xD10C             BNE.N    ??App_MLME_Set_Mac_Channel_Info_Conf_cb_0
   1885              {
   1886                SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \       0x16   0x....             LDR.N    R2,??DataTable33_33
   \       0x18   0x6810             LDR      R0,[R2, #+0]
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD004             BEQ.N    ??App_MLME_Set_Mac_Channel_Info_Conf_cb_1
   \       0x1E   0x4669             MOV      R1,SP
   \       0x20   0x0010             MOVS     R0,R2
   \       0x22   0x6812             LDR      R2,[R2, #+0]
   \       0x24   0x4790             BLX      R2
   \       0x26   0xE007             B.N      ??App_MLME_Set_Mac_Channel_Info_Conf_cb_2
   \                     ??App_MLME_Set_Mac_Channel_Info_Conf_cb_1: (+1)
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0x.... 0x....      BL       error_increment
   \       0x2E   0xE003             B.N      ??App_MLME_Set_Mac_Channel_Info_Conf_cb_2
   1887              }
   1888              else
   1889              {
   1890                /* go to idle state and start all over again */
   1891                sm_transit((sm_t *)&fan_nwk_manager_app, (sm_state_t)&node_idle );
   \                     ??App_MLME_Set_Mac_Channel_Info_Conf_cb_0: (+1)
   \       0x30   0x....             LDR.N    R1,??DataTable33_7
   \       0x32   0x....             LDR.N    R0,??DataTable33_33
   \       0x34   0x.... 0x....      BL       sm_transit
   1892              }  
   1893          }
   \                     ??App_MLME_Set_Mac_Channel_Info_Conf_cb_2: (+1)
   \       0x38   0xBD13             POP      {R0,R1,R4,PC}

   \                                 In section .rodata, align 4
   \                     ?_13:
   \        0x0   0x05               DC8 5
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1894          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
   1895          void App_MLME_Fan_Mac_Set_Conf_cb
   1896          (
   1897          	uint8_t status,
   1898                  uint8_t sub_ie_value
   1899          )
   1900          {
   \                     App_MLME_Fan_Mac_Set_Conf_cb: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000C             MOVS     R4,R1
   1901              /*This function is used to send confirmation for the start request*/
   1902              sm_event_t e = { (sm_trigger_t) TRIGGER_SET_FAN_MAC_IE_CONF, { 0 } };
   \        0x6   0x....             LDR.N    R2,??DataTable33_34
   \        0x8   0xE9D2 0x0100      LDRD     R0,R1,[R2, #+0]
   \        0xC   0xE9CD 0x0100      STRD     R0,R1,[SP, #+0]
   1903              
   1904              if( status == MAC_SUCCESS )
   \       0x10   0x0028             MOVS     R0,R5
   \       0x12   0xB2C0             UXTB     R0,R0
   \       0x14   0x2800             CMP      R0,#+0
   \       0x16   0xD111             BNE.N    ??App_MLME_Fan_Mac_Set_Conf_cb_0
   1905              {
   1906                fan_nwk_manager_app.result = MAC_SUCCESS;           
   \       0x18   0x....             LDR.N    R2,??DataTable33_33
   \       0x1A   0x2000             MOVS     R0,#+0
   \       0x1C   0xF882 0x013C      STRB     R0,[R2, #+316]
   1907                e.param.scalar = sub_ie_value;
   \       0x20   0xF88D 0x4004      STRB     R4,[SP, #+4]
   1908                SM_DISPATCH((sm_t *)&fan_nwk_manager_app, &e);
   \       0x24   0x6810             LDR      R0,[R2, #+0]
   \       0x26   0x2800             CMP      R0,#+0
   \       0x28   0xD004             BEQ.N    ??App_MLME_Fan_Mac_Set_Conf_cb_1
   \       0x2A   0x4669             MOV      R1,SP
   \       0x2C   0x0010             MOVS     R0,R2
   \       0x2E   0x6812             LDR      R2,[R2, #+0]
   \       0x30   0x4790             BLX      R2
   \       0x32   0xE007             B.N      ??App_MLME_Fan_Mac_Set_Conf_cb_2
   \                     ??App_MLME_Fan_Mac_Set_Conf_cb_1: (+1)
   \       0x34   0x2000             MOVS     R0,#+0
   \       0x36   0x.... 0x....      BL       error_increment
   \       0x3A   0xE003             B.N      ??App_MLME_Fan_Mac_Set_Conf_cb_2
   1909              }
   1910              else
   1911              {
   1912                /* go to idle state and start all over again */
   1913                sm_transit((sm_t *)&fan_nwk_manager_app, (sm_state_t)&node_idle );
   \                     ??App_MLME_Fan_Mac_Set_Conf_cb_0: (+1)
   \       0x3C   0x....             LDR.N    R1,??DataTable33_7
   \       0x3E   0x....             LDR.N    R0,??DataTable33_33
   \       0x40   0x.... 0x....      BL       sm_transit
   1914              }     
   1915          }
   \                     ??App_MLME_Fan_Mac_Set_Conf_cb_2: (+1)
   \       0x44   0xBD37             POP      {R0-R2,R4,R5,PC}

   \                                 In section .rodata, align 4
   \                     ?_14:
   \        0x0   0x06               DC8 6
   \        0x1                      DS8 3
   \        0x4   0x00               DC8 0
   \        0x5                      DS8 3
   1916          
   1917          /*****************************************************************************
   1918                 MAC to Application Indication Ends 
   1919          ******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
   1920          uint8_t get_current_join_state()
   1921          {
   1922            return fan_mac_information_data.state_ind;
   \                     get_current_join_state: (+1)
   \        0x0   0x....             LDR.N    R0,??DataTable33_6
   \        0x2   0x7A00             LDRB     R0,[R0, #+8]
   \        0x4   0x4770             BX       LR
   1923          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29:
   \        0x0   0x....'....        DC32     a_big_problem

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable29_1:
   \        0x0   0x....'....        DC32     sm_exit_event

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable30_1:
   \        0x0   0x....'....        DC32     ?_3

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable31:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32:
   \        0x0   0x....'....        DC32     sm_entry_event

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_1:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+20

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable32_2:
   \        0x0   0x....'....        DC32     ?_4

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33:
   \        0x0   0x....'....        DC32     opearating_zone_list

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_1:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_2:
   \        0x0   0x....'....        DC32     app_log_iostream

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_3:
   \        0x0   0x....'....        DC32     node_factory_mode_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_4:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_5:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_6:
   \        0x0   0x....'....        DC32     fan_mac_information_data

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_7:
   \        0x0   0x....'....        DC32     node_idle

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_8:
   \        0x0   0x....'....        DC32     ?_5

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_9:
   \        0x0   0x....'....        DC32     ?_6

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_10:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+184

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_11:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+229

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_12:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+227

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_13:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+109

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_14:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+52

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_15:
   \        0x0   0x....'....        DC32     ?_7

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_16:
   \        0x0   0x....'....        DC32     node_mac_ready

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_17:
   \        0x0   0x....'....        DC32     neighbour_addr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_18:
   \        0x0   0x....'....        DC32     router_addr

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_19:
   \        0x0   0x....'....        DC32     secrity_status_enab_dis

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_20:
   \        0x0   0x....'....        DC32     ?_8

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_21:
   \        0x0   0x....'....        DC32     key_id_index

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_22:
   \        0x0   0x....'....        DC32     ?_9

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_23:
   \        0x0   0x....'....        DC32     node_mac_sec_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_24:
   \        0x0   0x....'....        DC32     mac_self_fan_info

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_25:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app+28

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_26:
   \        0x0   0x....'....        DC32     ?_10

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_27:
   \        0x0   0x....'....        DC32     ?_11

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_28:
   \        0x0   0x....'....        DC32     ?_12

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_29:
   \        0x0   0x....'....        DC32     mac_2_6lp_ack_ind_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_30:
   \        0x0   0x....'....        DC32     mac_2_6lp_no_ack_ind_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_31:
   \        0x0   0x....'....        DC32     mac_2_6lp_data_ind_cb

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_32:
   \        0x0   0x....'....        DC32     ?_13

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_33:
   \        0x0   0x....'....        DC32     fan_nwk_manager_app

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable33_34:
   \        0x0   0x....'....        DC32     ?_14

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0xFF 0xFF          DC8 255, 255, 255, 31, 0, 0, 0, 0
   \              0xFF 0x1F    
   \              0x00 0x00    
   \              0x00 0x00

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x44 0x65          DC8 "Device is in FACTORY_MODE\015\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x69 0x6E    
   \              0x20 0x46    
   \              0x41 0x43    
   \              0x54 0x4F    
   \              0x52 0x59    
   \              0x5F 0x4D    
   \              0x4F 0x44    
   \              0x45 0x0D    
   \              0x0A 0x00

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x44 0x65          DC8 "Device is in RUN_MODE\015\012"
   \              0x76 0x69    
   \              0x63 0x65    
   \              0x20 0x69    
   \              0x73 0x20    
   \              0x69 0x6E    
   \              0x20 0x52    
   \              0x55 0x4E    
   \              0x5F 0x4D    
   \              0x4F 0x44    
   \              0x45 0x0D    
   \              0x0A 0x00
   1924          
   1925          /******************************************************************************/

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      56   App_FAN_MCPS_Data_Conf_cb
        56   -> __aeabi_memcpy
        56   -> __aeabi_memset
      64   App_FAN_MCPS_Data_Ind_cb
        64   -- Indirect call
        64   -> __aeabi_memcpy
      32   App_FAN_ack_Ind_cb
        32   -- Indirect call
       8   App_FAN_no_ack_Ind_cb
         8   -- Indirect call
       0   App_MAC_Set_PHY_Mode_Conf_cb
       0   App_MCPS_Data_Conf_cb
       0   App_MCPS_Data_Ind_cb
       0   App_MCPS_Purge_Conf_cb
       0   App_MLME_Associate_Conf_cb
       0   App_MLME_Associate_Ind_cb
       0   App_MLME_Beacon_Conf_cb
       0   App_MLME_Beacon_Notify_Ind_cb
       0   App_MLME_Beacon_Request_Ind_cb
       0   App_MLME_Comm_Status_Ind_cb
       0   App_MLME_Dissociate_Conf_cb
       0   App_MLME_Dissociate_Ind_cb
      24   App_MLME_Fan_Mac_Set_Conf_cb
        24   -- Indirect call
        24   -> error_increment
        24   -> sm_transit
       0   App_MLME_GET_Conf_cb
       0   App_MLME_Orphan_Ind_cb
       0   App_MLME_Poll_Conf_cb
      24   App_MLME_Reset_Conf_cb
        24   -- Indirect call
        24   -> error_increment
      32   App_MLME_SET_Conf_cb
        32   -- Indirect call
        32   -> error_increment
       0   App_MLME_Scan_Conf_cb
      16   App_MLME_Set_Mac_Channel_Info_Conf_cb
        16   -- Indirect call
        16   -> error_increment
        16   -> sm_transit
      24   App_MLME_Start_Conf_cb
        24   -- Indirect call
        24   -> error_increment
        24   -> sm_transit
       0   App_MLME_Sync_Loss_Ind_cb
       0   App_MLME_WS_ASYNC_FRAME_Ind_cb
       0   App_MLME_ws_async_frame_Conf_cb
      16   App_factory_mode_conf_cb
        16   -- Indirect call
        16   -> error_increment
      32   dev_ready_without_scanning
        32   -> MLME_SET_Request
        32   -> __aeabi_memset
        32   -> get_sun_channel
        32   -> sm_transit
       0   error_increment
      40   fan_nwk_manager_init
        40   -- Indirect call
        40   -> __aeabi_memcpy
        40   -> _app_log_counter
        40   -> _app_log_time
        40   -> error_increment
        40   -> init_factory_mode
        40   -> process_telec_set_operating_country
        40   -> send_hif_conf_cb
        40   -> sl_iostream_printf
       0   get_current_join_state
       0   get_current_pan_id
       0   get_node_type
      24   get_self_extended_address
        24   -> __aeabi_memcpy
       8   get_self_extended_address_reverse
         8   -> mem_rev_cpy
       0   get_self_global_addr
       0   get_sun_channel
       0   get_sun_page_value
      16   node_idle
        16   -> sm_transit
      16   node_initializing
        16   -> MLME_SET_Request
        16   -> get_sun_page_value
        16   -> sm_transit
      16   node_mac_ready
        16   -> FAN_MAC_MLME_SET_Request
        16   -> add_dev_desc_on_MAC_for_security
        16   -> change_join_state
        16   -> fan_mac_init
        16   -> send_hif_conf_cb
        16   -> set_mac_security_on_LBR
        16   -> sm_transit
        16   -> throttle_pc
        16   -> trickle_timer_inconsistency_pc
        16   -> trigger_FAN_MAC_Start
      24   node_mac_sec_set
        24   -- Indirect call
        24   -> MLME_SET_Request
        24   -> add_dev_desc_on_MAC_for_security
        24   -> add_security_key_descriptor_on_MAC
        24   -> error_increment
        24   -> reset_mac_frame_counter_cmd
        24   -> set_mac_security_on_LBR
      16   node_resetting
        16   -> MLME_SET_Request
        16   -> sm_transit
       8   node_start_upper_layer_ready
         8   -> start_upper_layer
      40   node_starting_network
        40   -- Indirect call
        40   -> FAN_MAC_MLME_SET_Request
        40   -> MLME_SET_Request
        40   -> PLME_set_request
        40   -> error_increment
        40   -> send_hif_conf_cb
        40   -> sm_transit
      16   node_startup
        16   -> MLME_RESET_Request
        16   -> sm_transit
      16   process_telec_set_operating_country
       8   send_mac_2_nhle_conf
         8   -> process_mil_msgs
      24   set_mac_security_on_LBR
        24   -> __aeabi_memcpy
        24   -> send_mac_security_set_request
      24   set_mac_security_on_router_node
        24   -- Indirect call
        24   -> error_increment
        24   -> generate_MAC_Security_Key
        24   -> get_join_state
      16   sm_transit
        16   -- Indirect call
        16   -> error_increment
       8   trigger_FAN_MAC_Start
         8   -> fan_mac_init
       8   update_pan_id_from_border_router
         8   -> MLME_SET_Request
      24   update_self_global_addr
        24   -> __aeabi_memcpy


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable29
       4  ??DataTable29_1
       4  ??DataTable30
       4  ??DataTable30_1
       4  ??DataTable31
       4  ??DataTable32
       4  ??DataTable32_1
       4  ??DataTable32_2
       4  ??DataTable33
       4  ??DataTable33_1
       4  ??DataTable33_10
       4  ??DataTable33_11
       4  ??DataTable33_12
       4  ??DataTable33_13
       4  ??DataTable33_14
       4  ??DataTable33_15
       4  ??DataTable33_16
       4  ??DataTable33_17
       4  ??DataTable33_18
       4  ??DataTable33_19
       4  ??DataTable33_2
       4  ??DataTable33_20
       4  ??DataTable33_21
       4  ??DataTable33_22
       4  ??DataTable33_23
       4  ??DataTable33_24
       4  ??DataTable33_25
       4  ??DataTable33_26
       4  ??DataTable33_27
       4  ??DataTable33_28
       4  ??DataTable33_29
       4  ??DataTable33_3
       4  ??DataTable33_30
       4  ??DataTable33_31
       4  ??DataTable33_32
       4  ??DataTable33_33
       4  ??DataTable33_34
       4  ??DataTable33_4
       4  ??DataTable33_5
       4  ??DataTable33_6
       4  ??DataTable33_7
       4  ??DataTable33_8
       4  ??DataTable33_9
       8  ?_0
      28  ?_1
       8  ?_10
       8  ?_11
       8  ?_12
       8  ?_13
       8  ?_14
      24  ?_2
       8  ?_3
       8  ?_4
       8  ?_5
       8  ?_6
       8  ?_7
       8  ?_8
       8  ?_9
      80  App_FAN_MCPS_Data_Conf_cb
     144  App_FAN_MCPS_Data_Ind_cb
      48  App_FAN_ack_Ind_cb
      16  App_FAN_no_ack_Ind_cb
       2  App_MAC_Set_PHY_Mode_Conf_cb
       2  App_MCPS_Data_Conf_cb
       2  App_MCPS_Data_Ind_cb
       2  App_MCPS_Purge_Conf_cb
       2  App_MLME_Associate_Conf_cb
       2  App_MLME_Associate_Ind_cb
       2  App_MLME_Beacon_Conf_cb
       2  App_MLME_Beacon_Notify_Ind_cb
       2  App_MLME_Beacon_Request_Ind_cb
       2  App_MLME_Comm_Status_Ind_cb
       2  App_MLME_Dissociate_Conf_cb
       2  App_MLME_Dissociate_Ind_cb
      70  App_MLME_Fan_Mac_Set_Conf_cb
       2  App_MLME_GET_Conf_cb
       2  App_MLME_Orphan_Ind_cb
       2  App_MLME_Poll_Conf_cb
      80  App_MLME_Reset_Conf_cb
      98  App_MLME_SET_Conf_cb
       2  App_MLME_Scan_Conf_cb
      58  App_MLME_Set_Mac_Channel_Info_Conf_cb
      72  App_MLME_Start_Conf_cb
       2  App_MLME_Sync_Loss_Ind_cb
       2  App_MLME_WS_ASYNC_FRAME_Ind_cb
       2  App_MLME_ws_async_frame_Conf_cb
      48  App_factory_mode_conf_cb
     140  dev_ready_without_scanning
      16  error_increment
     624  fan_nwk_manager_app
     206  fan_nwk_manager_init
       6  get_current_join_state
       6  get_current_pan_id
       6  get_node_type
      24  get_self_extended_address
      18  get_self_extended_address_reverse
       6  get_self_global_addr
      46  get_sun_channel
      42  get_sun_page_value
       1  key_id_index
       8  neighbour_addr
      76  node_idle
     194  node_initializing
     222  node_mac_ready
     202  node_mac_sec_set
      88  node_resetting
      12  node_start_upper_layer_ready
     482  node_starting_network
      72  node_startup
     120  opearating_zone_list
      96  process_telec_set_operating_country
       8  router_addr
       1  secrity_status_enab_dis
       8  send_mac_2_nhle_conf
      50  set_mac_security_on_LBR
      86  set_mac_security_on_router_node
       8  sm_entry_event
       8  sm_exit_event
      82  sm_transit
      14  trigger_FAN_MAC_Start
      32  update_pan_id_from_border_router
      24  update_self_global_addr
       1  upper_layer_started

 
   635 bytes in section .bss
   128 bytes in section .data
   172 bytes in section .rodata
 3'180 bytes in section .text
 
 3'180 bytes of CODE  memory
   172 bytes of CONST memory
   763 bytes of DATA  memory

Errors: none
Warnings: none

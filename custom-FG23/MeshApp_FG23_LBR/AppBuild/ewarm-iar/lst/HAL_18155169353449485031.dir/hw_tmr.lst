###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         02/Dec/2024  12:57:42
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\HAL\hw_tmr.c
#    Command line                 =
#        -f
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\HAL_18155169353449485031.dir\hw_tmr.o.rsp
#        (D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\HAL\hw_tmr.c
#        -D EFR32FG23A020F512GM40=1 -D SL_COMPONENT_CATALOG_PRESENT=1 -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -lC
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\HAL_18155169353449485031.dir
#        --diag_suppress Pa050 -o
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\HAL_18155169353449485031.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse -e --fpu=VFPv5_sp --dlib_config "C:\Program
#        Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\.\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\AppConfigs\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\config\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\autogen\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\HAL\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\NVM\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\buffer_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\event_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\list_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\queue_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\timer_manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\hif\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\raw_uart_if\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\Util\debug_console\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\Device\SiliconLabs\EFR32FG23\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\CMSIS\Core\Include\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\device_init\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\mpu\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\common\toolchain\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\system\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\network-manager\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\RAIL_TRX\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MAC\Inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\wisun_modified\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\ProAppSrc\FANApp\AppInc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_callbacks\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ip\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\multicast\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\ipv6\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\rpl\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\OS_interface\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\L3\L2_L3_interface\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\cpu\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\contiki_mac_interface_layer\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\Interface_Layer\mac_sicslowpan_if\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emlib\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\os\platform\p3_lp_dk\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\common\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ble\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\ieee802154\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\protocol\zwave\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\efr32xg1x\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_protocol\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_rssi\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\PHY\radio\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\MeterApp\Inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\dmadrv\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\emdrv\common\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\FLASH\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\APP_LOG\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\config\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\DebugLog\response_print\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\NVM\nvm3\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\
#        -On --use_c++_inline) --dependencies=n
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\HAL_18155169353449485031.dir\hw_tmr.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\lst\HAL_18155169353449485031.dir\hw_tmr.lst
#    Object file                  =
#        D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\AppBuild\ewarm-iar\obj\HAL_18155169353449485031.dir\hw_tmr.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

D:\FG23\FG23_final_code\MeshApp_FG23_LBR\Kimbal_MeshApp_FG23_LBR\ProAppSrc\HAL\hw_tmr.c
      1          /** \file hw_tmr.c
      2           **
      3           ** \brief Implements APIs and structures for use by Hardware 
      4           *    Timer Module.
      5           **
      6           ** \cond STD_FILE_HEADER
      7           **
      8           ** COPYRIGHT(c) 2023-24 Procubed Innovations Pvt Ltd.
      9           ** All rights reserved.
     10           **
     11           ** THIS SOFTWARE IS PROVIDED BY "AS IS" AND ALL WARRANTIES OF ANY KIND,
     12           ** INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR USE,
     13           ** ARE EXPRESSLY DISCLAIMED.  THE DEVELOPER SHALL NOT BE LIABLE FOR ANY
     14           ** DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE. THIS SOFTWARE
     15           ** MAY NOT BE USED IN PRODUCTS INTENDED FOR USE IN IMPLANTATION OR OTHER
     16           ** DIRECT LIFE SUPPORT APPLICATIONS WHERE MALFUNCTION MAY RESULT IN THE DIRECT
     17           ** PHYSICAL HARM OR INJURY TO PERSONS. ALL SUCH IS USE IS EXPRESSLY PROHIBITED.
     18           **
     19           *******************************************************************************
     20           **  \endcond
     21           */
     22          
     23          /*******************************************************************************
     24          * File inclusion
     25          *******************************************************************************/
     26          #include "StackAppConf.h"
     27          #include "em_device.h"

   \                                 In section .text, align 4, keep-with-next
   \   static __vfp void __NVIC_EnableIRQ(IRQn_Type)
   \                     __NVIC_EnableIRQ: (+1)
   \        0x0   0x0001             MOVS     R1,R0
   \        0x2   0xB249             SXTB     R1,R1
   \        0x4   0x2900             CMP      R1,#+0
   \        0x6   0xD40A             BMI.N    ??__NVIC_EnableIRQ_0
   \        0x8   0x2201             MOVS     R2,#+1
   \        0xA   0xF010 0x011F      ANDS     R1,R0,#0x1F
   \        0xE   0x408A             LSLS     R2,R2,R1
   \       0x10   0x.... 0x....      LDR.W    R3,??DataTable15
   \       0x14   0x0001             MOVS     R1,R0
   \       0x16   0xB249             SXTB     R1,R1
   \       0x18   0x0949             LSRS     R1,R1,#+5
   \       0x1A   0xF843 0x2021      STR      R2,[R3, R1, LSL #+2]
   \                     ??__NVIC_EnableIRQ_0: (+1)
   \       0x1E   0x4770             BX       LR
     28          #include "em_cmu.h"
     29          #include "em_emu.h"
     30          #include "em_gpio.h"
     31          #include "em_prs.h"
     32          #include "em_system.h"
     33          #include "em_timer.h"

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp bool TIMER_Valid(TIMER_TypeDef const *)
   \                     TIMER_Valid: (+1)
   \        0x0   0x.... 0x....      LDR.W    R1,??DataTable15_1
   \        0x4   0x4288             CMP      R0,R1
   \        0x6   0xD00F             BEQ.N    ??TIMER_Valid_0
   \        0x8   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \        0xC   0x4288             CMP      R0,R1
   \        0xE   0xD00B             BEQ.N    ??TIMER_Valid_0
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0x14   0x4288             CMP      R0,R1
   \       0x16   0xD007             BEQ.N    ??TIMER_Valid_0
   \       0x18   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0x1C   0x4288             CMP      R0,R1
   \       0x1E   0xD003             BEQ.N    ??TIMER_Valid_0
   \       0x20   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \       0x24   0x4288             CMP      R0,R1
   \       0x26   0xD101             BNE.N    ??TIMER_Valid_1
   \                     ??TIMER_Valid_0: (+1)
   \       0x28   0x2001             MOVS     R0,#+1
   \       0x2A   0xE000             B.N      ??TIMER_Valid_2
   \                     ??TIMER_Valid_1: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \                     ??TIMER_Valid_2: (+1)
   \       0x2E   0xB2C0             UXTB     R0,R0
   \       0x30   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp uint32_t TIMER_MaxCount(TIMER_TypeDef const *)
   \                     TIMER_MaxCount: (+1)
   \        0x0   0xB500             PUSH     {LR}
   \        0x2   0x.... 0x....      LDR.W    R2,??DataTable15_1
   \        0x6   0x4290             CMP      R0,R2
   \        0x8   0xD101             BNE.N    ??TIMER_MaxCount_0
   \        0xA   0x2100             MOVS     R1,#+0
   \        0xC   0xE019             B.N      ??TIMER_MaxCount_1
   \                     ??TIMER_MaxCount_0: (+1)
   \        0xE   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \       0x12   0x4288             CMP      R0,R1
   \       0x14   0xD101             BNE.N    ??TIMER_MaxCount_2
   \       0x16   0x2101             MOVS     R1,#+1
   \       0x18   0xE013             B.N      ??TIMER_MaxCount_1
   \                     ??TIMER_MaxCount_2: (+1)
   \       0x1A   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0x1E   0x4288             CMP      R0,R1
   \       0x20   0xD101             BNE.N    ??TIMER_MaxCount_3
   \       0x22   0x2102             MOVS     R1,#+2
   \       0x24   0xE00D             B.N      ??TIMER_MaxCount_1
   \                     ??TIMER_MaxCount_3: (+1)
   \       0x26   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0x2A   0x4288             CMP      R0,R1
   \       0x2C   0xD101             BNE.N    ??TIMER_MaxCount_4
   \       0x2E   0x2103             MOVS     R1,#+3
   \       0x30   0xE007             B.N      ??TIMER_MaxCount_1
   \                     ??TIMER_MaxCount_4: (+1)
   \       0x32   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \       0x36   0x4288             CMP      R0,R1
   \       0x38   0xD101             BNE.N    ??TIMER_MaxCount_5
   \       0x3A   0x2104             MOVS     R1,#+4
   \       0x3C   0xE001             B.N      ??TIMER_MaxCount_1
   \                     ??TIMER_MaxCount_5: (+1)
   \       0x3E   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \                     ??TIMER_MaxCount_1: (+1)
   \       0x42   0xF111 0x0F01      CMN      R1,#+1
   \       0x46   0xD001             BEQ.N    ??TIMER_MaxCount_6
   \       0x48   0x2101             MOVS     R1,#+1
   \       0x4A   0xE000             B.N      ??TIMER_MaxCount_7
   \                     ??TIMER_MaxCount_6: (+1)
   \       0x4C   0x2100             MOVS     R1,#+0
   \                     ??TIMER_MaxCount_7: (+1)
   \       0x4E   0xB2C9             UXTB     R1,R1
   \       0x50   0x4290             CMP      R0,R2
   \       0x52   0xD101             BNE.N    ??TIMER_MaxCount_8
   \       0x54   0x2100             MOVS     R1,#+0
   \       0x56   0xE019             B.N      ??TIMER_MaxCount_9
   \                     ??TIMER_MaxCount_8: (+1)
   \       0x58   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \       0x5C   0x4288             CMP      R0,R1
   \       0x5E   0xD101             BNE.N    ??TIMER_MaxCount_10
   \       0x60   0x2101             MOVS     R1,#+1
   \       0x62   0xE013             B.N      ??TIMER_MaxCount_9
   \                     ??TIMER_MaxCount_10: (+1)
   \       0x64   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0x68   0x4288             CMP      R0,R1
   \       0x6A   0xD101             BNE.N    ??TIMER_MaxCount_11
   \       0x6C   0x2102             MOVS     R1,#+2
   \       0x6E   0xE00D             B.N      ??TIMER_MaxCount_9
   \                     ??TIMER_MaxCount_11: (+1)
   \       0x70   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0x74   0x4288             CMP      R0,R1
   \       0x76   0xD101             BNE.N    ??TIMER_MaxCount_12
   \       0x78   0x2103             MOVS     R1,#+3
   \       0x7A   0xE007             B.N      ??TIMER_MaxCount_9
   \                     ??TIMER_MaxCount_12: (+1)
   \       0x7C   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \       0x80   0x4288             CMP      R0,R1
   \       0x82   0xD101             BNE.N    ??TIMER_MaxCount_13
   \       0x84   0x2104             MOVS     R1,#+4
   \       0x86   0xE001             B.N      ??TIMER_MaxCount_9
   \                     ??TIMER_MaxCount_13: (+1)
   \       0x88   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \                     ??TIMER_MaxCount_9: (+1)
   \       0x8C   0x2900             CMP      R1,#+0
   \       0x8E   0xD101             BNE.N    ??TIMER_MaxCount_14
   \       0x90   0x2220             MOVS     R2,#+32
   \       0x92   0xE087             B.N      ??TIMER_MaxCount_15
   \                     ??TIMER_MaxCount_14: (+1)
   \       0x94   0x4290             CMP      R0,R2
   \       0x96   0xD101             BNE.N    ??TIMER_MaxCount_16
   \       0x98   0x2100             MOVS     R1,#+0
   \       0x9A   0xE019             B.N      ??TIMER_MaxCount_17
   \                     ??TIMER_MaxCount_16: (+1)
   \       0x9C   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \       0xA0   0x4288             CMP      R0,R1
   \       0xA2   0xD101             BNE.N    ??TIMER_MaxCount_18
   \       0xA4   0x2101             MOVS     R1,#+1
   \       0xA6   0xE013             B.N      ??TIMER_MaxCount_17
   \                     ??TIMER_MaxCount_18: (+1)
   \       0xA8   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0xAC   0x4288             CMP      R0,R1
   \       0xAE   0xD101             BNE.N    ??TIMER_MaxCount_19
   \       0xB0   0x2102             MOVS     R1,#+2
   \       0xB2   0xE00D             B.N      ??TIMER_MaxCount_17
   \                     ??TIMER_MaxCount_19: (+1)
   \       0xB4   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0xB8   0x4288             CMP      R0,R1
   \       0xBA   0xD101             BNE.N    ??TIMER_MaxCount_20
   \       0xBC   0x2103             MOVS     R1,#+3
   \       0xBE   0xE007             B.N      ??TIMER_MaxCount_17
   \                     ??TIMER_MaxCount_20: (+1)
   \       0xC0   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \       0xC4   0x4288             CMP      R0,R1
   \       0xC6   0xD101             BNE.N    ??TIMER_MaxCount_21
   \       0xC8   0x2104             MOVS     R1,#+4
   \       0xCA   0xE001             B.N      ??TIMER_MaxCount_17
   \                     ??TIMER_MaxCount_21: (+1)
   \       0xCC   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \                     ??TIMER_MaxCount_17: (+1)
   \       0xD0   0x2901             CMP      R1,#+1
   \       0xD2   0xD101             BNE.N    ??TIMER_MaxCount_22
   \       0xD4   0x2210             MOVS     R2,#+16
   \       0xD6   0xE065             B.N      ??TIMER_MaxCount_23
   \                     ??TIMER_MaxCount_22: (+1)
   \       0xD8   0x4290             CMP      R0,R2
   \       0xDA   0xD101             BNE.N    ??TIMER_MaxCount_24
   \       0xDC   0x2100             MOVS     R1,#+0
   \       0xDE   0xE019             B.N      ??TIMER_MaxCount_25
   \                     ??TIMER_MaxCount_24: (+1)
   \       0xE0   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \       0xE4   0x4288             CMP      R0,R1
   \       0xE6   0xD101             BNE.N    ??TIMER_MaxCount_26
   \       0xE8   0x2101             MOVS     R1,#+1
   \       0xEA   0xE013             B.N      ??TIMER_MaxCount_25
   \                     ??TIMER_MaxCount_26: (+1)
   \       0xEC   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0xF0   0x4288             CMP      R0,R1
   \       0xF2   0xD101             BNE.N    ??TIMER_MaxCount_27
   \       0xF4   0x2102             MOVS     R1,#+2
   \       0xF6   0xE00D             B.N      ??TIMER_MaxCount_25
   \                     ??TIMER_MaxCount_27: (+1)
   \       0xF8   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0xFC   0x4288             CMP      R0,R1
   \       0xFE   0xD101             BNE.N    ??TIMER_MaxCount_28
   \      0x100   0x2103             MOVS     R1,#+3
   \      0x102   0xE007             B.N      ??TIMER_MaxCount_25
   \                     ??TIMER_MaxCount_28: (+1)
   \      0x104   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \      0x108   0x4288             CMP      R0,R1
   \      0x10A   0xD101             BNE.N    ??TIMER_MaxCount_29
   \      0x10C   0x2104             MOVS     R1,#+4
   \      0x10E   0xE001             B.N      ??TIMER_MaxCount_25
   \                     ??TIMER_MaxCount_29: (+1)
   \      0x110   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \                     ??TIMER_MaxCount_25: (+1)
   \      0x114   0x2902             CMP      R1,#+2
   \      0x116   0xD101             BNE.N    ??TIMER_MaxCount_30
   \      0x118   0x2210             MOVS     R2,#+16
   \      0x11A   0xE043             B.N      ??TIMER_MaxCount_23
   \                     ??TIMER_MaxCount_30: (+1)
   \      0x11C   0x4290             CMP      R0,R2
   \      0x11E   0xD101             BNE.N    ??TIMER_MaxCount_31
   \      0x120   0x2100             MOVS     R1,#+0
   \      0x122   0xE019             B.N      ??TIMER_MaxCount_32
   \                     ??TIMER_MaxCount_31: (+1)
   \      0x124   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \      0x128   0x4288             CMP      R0,R1
   \      0x12A   0xD101             BNE.N    ??TIMER_MaxCount_33
   \      0x12C   0x2101             MOVS     R1,#+1
   \      0x12E   0xE013             B.N      ??TIMER_MaxCount_32
   \                     ??TIMER_MaxCount_33: (+1)
   \      0x130   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \      0x134   0x4288             CMP      R0,R1
   \      0x136   0xD101             BNE.N    ??TIMER_MaxCount_34
   \      0x138   0x2102             MOVS     R1,#+2
   \      0x13A   0xE00D             B.N      ??TIMER_MaxCount_32
   \                     ??TIMER_MaxCount_34: (+1)
   \      0x13C   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \      0x140   0x4288             CMP      R0,R1
   \      0x142   0xD101             BNE.N    ??TIMER_MaxCount_35
   \      0x144   0x2103             MOVS     R1,#+3
   \      0x146   0xE007             B.N      ??TIMER_MaxCount_32
   \                     ??TIMER_MaxCount_35: (+1)
   \      0x148   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \      0x14C   0x4288             CMP      R0,R1
   \      0x14E   0xD101             BNE.N    ??TIMER_MaxCount_36
   \      0x150   0x2104             MOVS     R1,#+4
   \      0x152   0xE001             B.N      ??TIMER_MaxCount_32
   \                     ??TIMER_MaxCount_36: (+1)
   \      0x154   0xF05F 0x31FF      MOVS     R1,#+4294967295
   \                     ??TIMER_MaxCount_32: (+1)
   \      0x158   0x2903             CMP      R1,#+3
   \      0x15A   0xD101             BNE.N    ??TIMER_MaxCount_37
   \      0x15C   0x2210             MOVS     R2,#+16
   \      0x15E   0xE021             B.N      ??TIMER_MaxCount_38
   \                     ??TIMER_MaxCount_37: (+1)
   \      0x160   0x4290             CMP      R0,R2
   \      0x162   0xD101             BNE.N    ??TIMER_MaxCount_39
   \      0x164   0x2000             MOVS     R0,#+0
   \      0x166   0xE018             B.N      ??TIMER_MaxCount_40
   \                     ??TIMER_MaxCount_39: (+1)
   \      0x168   0x.... 0x....      LDR.W    R1,??DataTable15_2
   \      0x16C   0x4288             CMP      R0,R1
   \      0x16E   0xD101             BNE.N    ??TIMER_MaxCount_41
   \      0x170   0x2001             MOVS     R0,#+1
   \      0x172   0xE012             B.N      ??TIMER_MaxCount_40
   \                     ??TIMER_MaxCount_41: (+1)
   \      0x174   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \      0x178   0x4288             CMP      R0,R1
   \      0x17A   0xD101             BNE.N    ??TIMER_MaxCount_42
   \      0x17C   0x2002             MOVS     R0,#+2
   \      0x17E   0xE00C             B.N      ??TIMER_MaxCount_40
   \                     ??TIMER_MaxCount_42: (+1)
   \      0x180   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \      0x184   0x4288             CMP      R0,R1
   \      0x186   0xD101             BNE.N    ??TIMER_MaxCount_43
   \      0x188   0x2003             MOVS     R0,#+3
   \      0x18A   0xE006             B.N      ??TIMER_MaxCount_40
   \                     ??TIMER_MaxCount_43: (+1)
   \      0x18C   0x....             LDR.N    R1,??DataTable15_5
   \      0x18E   0x4288             CMP      R0,R1
   \      0x190   0xD101             BNE.N    ??TIMER_MaxCount_44
   \      0x192   0x2004             MOVS     R0,#+4
   \      0x194   0xE001             B.N      ??TIMER_MaxCount_40
   \                     ??TIMER_MaxCount_44: (+1)
   \      0x196   0xF05F 0x30FF      MOVS     R0,#+4294967295
   \                     ??TIMER_MaxCount_40: (+1)
   \      0x19A   0x2804             CMP      R0,#+4
   \      0x19C   0xD101             BNE.N    ??TIMER_MaxCount_45
   \      0x19E   0x2210             MOVS     R2,#+16
   \      0x1A0   0xE000             B.N      ??TIMER_MaxCount_38
   \                     ??TIMER_MaxCount_45: (+1)
   \      0x1A2   0x2200             MOVS     R2,#+0
   \                     ??TIMER_MaxCount_38: (+1)
   \                     ??TIMER_MaxCount_23: (+1)
   \                     ??TIMER_MaxCount_15: (+1)
   \      0x1A4   0x2001             MOVS     R0,#+1
   \      0x1A6   0x2100             MOVS     R1,#+0
   \      0x1A8   0x.... 0x....      BL       __aeabi_llsl
   \      0x1AC   0x1E40             SUBS     R0,R0,#+1
   \      0x1AE   0xF171 0x0100      SBCS     R1,R1,#+0
   \      0x1B2   0xBD00             POP      {PC}

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_CompareSet(TIMER_TypeDef *, unsigned int, uint32_t)
   \                     TIMER_CompareSet: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
   \        0x8   0x0020             MOVS     R0,R4
   \        0xA   0x.... 0x....      BL       TIMER_MaxCount
   \        0xE   0x42B0             CMP      R0,R6
   \       0x10   0xD301             BCC.N    ??TIMER_CompareSet_0
   \       0x12   0x2001             MOVS     R0,#+1
   \       0x14   0xE000             B.N      ??TIMER_CompareSet_1
   \                     ??TIMER_CompareSet_0: (+1)
   \       0x16   0x2000             MOVS     R0,#+0
   \                     ??TIMER_CompareSet_1: (+1)
   \       0x18   0xB2C0             UXTB     R0,R0
   \       0x1A   0x6B20             LDR      R0,[R4, #+48]
   \       0x1C   0xF010 0x0001      ANDS     R0,R0,#0x1
   \       0x20   0x0168             LSLS     R0,R5,#+5
   \       0x22   0x4420             ADD      R0,R4,R0
   \       0x24   0x6686             STR      R6,[R0, #+104]
   \       0x26   0xBD70             POP      {R4-R6,PC}

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_Enable(TIMER_TypeDef *, bool)
   \                     TIMER_Enable: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       TIMER_Valid
   \        0xC   0x0028             MOVS     R0,R5
   \        0xE   0xB2C0             UXTB     R0,R0
   \       0x10   0x2800             CMP      R0,#+0
   \       0x12   0xD002             BEQ.N    ??TIMER_Enable_0
   \       0x14   0x2001             MOVS     R0,#+1
   \       0x16   0x60E0             STR      R0,[R4, #+12]
   \       0x18   0xE001             B.N      ??TIMER_Enable_1
   \                     ??TIMER_Enable_0: (+1)
   \       0x1A   0x2002             MOVS     R0,#+2
   \       0x1C   0x60E0             STR      R0,[R4, #+12]
   \                     ??TIMER_Enable_1: (+1)
   \       0x1E   0xBD31             POP      {R0,R4,R5,PC}

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_IntClear(TIMER_TypeDef *, uint32_t)
   \                     TIMER_IntClear: (+1)
   \        0x0   0xF242 0x0214      MOVW     R2,#+8212
   \        0x4   0x5081             STR      R1,[R0, R2]
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_IntDisable(TIMER_TypeDef *, uint32_t)
   \                     TIMER_IntDisable: (+1)
   \        0x0   0x6982             LDR      R2,[R0, #+24]
   \        0x2   0x438A             BICS     R2,R2,R1
   \        0x4   0x6182             STR      R2,[R0, #+24]
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_IntEnable(TIMER_TypeDef *, uint32_t)
   \                     TIMER_IntEnable: (+1)
   \        0x0   0x6982             LDR      R2,[R0, #+24]
   \        0x2   0x430A             ORRS     R2,R1,R2
   \        0x4   0x6182             STR      R2,[R0, #+24]
   \        0x6   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp uint32_t TIMER_IntGet(TIMER_TypeDef *)
   \                     TIMER_IntGet: (+1)
   \        0x0   0x6940             LDR      R0,[R0, #+20]
   \        0x2   0x4770             BX       LR

   \                                 In section .text, align 2, keep-with-next
   \   static __vfp void TIMER_TopSet(TIMER_TypeDef *, uint32_t)
   \                     TIMER_TopSet: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0020             MOVS     R0,R4
   \        0x8   0x.... 0x....      BL       TIMER_MaxCount
   \        0xC   0x42A8             CMP      R0,R5
   \        0xE   0xD301             BCC.N    ??TIMER_TopSet_0
   \       0x10   0x2001             MOVS     R0,#+1
   \       0x12   0xE000             B.N      ??TIMER_TopSet_1
   \                     ??TIMER_TopSet_0: (+1)
   \       0x14   0x2000             MOVS     R0,#+0
   \                     ??TIMER_TopSet_1: (+1)
   \       0x16   0xB2C0             UXTB     R0,R0
   \       0x18   0x6B20             LDR      R0,[R4, #+48]
   \       0x1A   0xF010 0x0001      ANDS     R0,R0,#0x1
   \       0x1E   0x61E5             STR      R5,[R4, #+28]
   \       0x20   0xBD31             POP      {R0,R4,R5,PC}
     34          #include "em_chip.h"
     35          //#include "Pro_Stack_Config.h"
     36          #include "common.h"
     37          #include "queue_latest.h"
     38          #include "buff_mgmt.h"
     39          #include "list_latest.h"
     40          #include "hw_tmr.h"
     41          #include "sw_timer.h"
     42             
     43          
     44          /*
     45           TIMER1 (uS ticker higher 16bit) <----TIMER0 (uS ticker lower 16bit)  
     46          */
     47          
     48          //#define TIMER_DEBUG
     49          
     50          /* Funcion declaraion*/
     51          void       timer_initialization  (void);
     52          void       ClockConfiguration    (void);
     53          uint32_t   us_timer_read         (void);
     54          void       us_timer_set_value    (uint32_t timestamp);
     55          
     56          /* Variables to debug the interrupt counts */
     57          #ifdef TIMER_DEBUG
     58            uint16_t ovfCnt     = 0;
     59            uint16_t ovfCnt_1   = 0;
     60            uint16_t compCnt    = 0; 
     61            uint16_t compCnt_1  = 0;
     62            uint16_t clk_cnt_0  = 0; 
     63            uint16_t clk_cnt_1  = 0;
     64            uint32_t check_val  = 0;
     65          
     66            #define MAX_DEBUG_COUNT_VAL 100
     67          
     68            typedef struct debug_timer_val
     69            {
     70              uint32_t timestampLowS  [MAX_DEBUG_COUNT_VAL];
     71              uint32_t timestampHighS [MAX_DEBUG_COUNT_VAL];
     72              uint32_t current_time   [MAX_DEBUG_COUNT_VAL];
     73              uint16_t indextimestamp;
     74              uint16_t low_time_val   [MAX_DEBUG_COUNT_VAL];
     75              uint16_t high_time_val  [MAX_DEBUG_COUNT_VAL];
     76              uint32_t someting_wrong_section;
     77            }debug_timer_val_t;
     78          
     79            debug_timer_val_t  debug_val;
     80          
     81            uint32_t timer_set_val_curr_time = 0;
     82            uint32_t timer_set_val_time      = 0;
     83            uint32_t timer_diff_val_time     = 0;
     84          #endif
     85          
     86          
     87          enum
     88          {
     89            WAIT_FOR_NO_COMPARE      = 0,
     90            WAIT_FOR_COMPARE    = 1,
     91          }; //d
     92          

   \                                 In section .bss, align 4
     93          uint32_t  LOW_VAL       = 0;
   \                     LOW_VAL:
   \        0x0                      DS8 4

   \                                 In section .bss, align 1
     94          uint8_t   timer_state   = 0;
   \                     timer_state:
   \        0x0                      DS8 1

   \                                 In section .bss, align 4
     95          uint32_t  timestampLow  = 0;
   \                     timestampLow:
   \        0x0                      DS8 4
     96          
     97          /*
     98          ** ============================================================================
     99          ** Private Macro definitions
    100          ** ============================================================================
    101          */
    102          
    103          /* None*/
    104          
    105          /*
    106          ** ============================================================================
    107          ** Private Structures, Unions & enums Type Definitions
    108          ** ============================================================================
    109          */
    110          
    111          
    112          /* None*/
    113          
    114          
    115          
    116          /*
    117          ** ============================================================================
    118          ** Private Variable Definitions
    119          ** ============================================================================
    120          */
    121          

   \                                 In section .bss, align 1
    122          static uint8_t rnd_index   = 0;
   \                     rnd_index:
   \        0x0                      DS8 1
    123          

   \                                 In section .data, align 4
    124          static uint8_t rnd_array[] =
   \                     rnd_array:
   \        0x0   0xD9 0x7A          DC8 217, 122, 150, 9, 44, 165, 87, 116, 219, 94, 32, 251, 56, 168, 78
   \              0x96 0x09    
   \              0x2C 0xA5    
   \              0x57 0x74    
   \              0xDB 0x5E    
   \              0x20 0xFB    
   \              0x38 0xA8    
   \              0x4E
   \        0xF   0xA6 0x8D          DC8 166, 141, 67, 123, 190, 144, 22, 137, 157, 180, 48, 212, 52, 157
   \              0x43 0x7B    
   \              0xBE 0x90    
   \              0x16 0x89    
   \              0x9D 0xB4    
   \              0x30 0xD4    
   \              0x34 0x9D
   \       0x1D   0x3A 0x0D          DC8 58, 13, 15, 217, 60, 168, 53, 229, 143, 42, 205, 41, 35, 176, 91
   \              0x0F 0xD9    
   \              0x3C 0xA8    
   \              0x35 0xE5    
   \              0x8F 0x2A    
   \              0xCD 0x29    
   \              0x23 0xB0    
   \              0x5B
   \       0x2C   0x1B 0xA3          DC8 27, 163, 42, 130, 174, 15, 132, 205, 73, 214, 131, 66, 241, 138
   \              0x2A 0x82    
   \              0xAE 0x0F    
   \              0x84 0xCD    
   \              0x49 0xD6    
   \              0x83 0x42    
   \              0xF1 0x8A
   \       0x3A   0xFE 0x21          DC8 254, 33, 27, 25, 126, 228
   \              0x1B 0x19    
   \              0x7E 0xE4
    125          {
    126              0xd9, 0x7a, 0x96, 0x09, 0x2c, 0xa5, 0x57, 0x74,
    127              0xdb, 0x5e, 0x20, 0xfb, 0x38, 0xa8, 0x4e, 0xa6,
    128              0x8d, 0x43, 0x7b, 0xbe, 0x90, 0x16, 0x89, 0x9d,
    129              0xb4, 0x30, 0xd4, 0x34, 0x9d, 0x3a, 0x0d, 0x0f,
    130              0xd9, 0x3c, 0xa8, 0x35, 0xe5, 0x8f, 0x2a, 0xcd,
    131              0x29, 0x23, 0xb0, 0x5b, 0x1b, 0xa3, 0x2a, 0x82,
    132              0xae, 0x0f, 0x84, 0xcd, 0x49, 0xd6, 0x83, 0x42,
    133              0xf1, 0x8a, 0xfe, 0x21, 0x1b, 0x19, 0x7e, 0xe4
    134          };
    135          
    136          /*
    137          ** ============================================================================
    138          ** Public Variable Definitions
    139          ** ============================================================================
    140          */
    141          

   \                                 In section .bss, align 4
    142          hw_tmr_t* mp_hw_tmr_inst = NULL;
   \                     mp_hw_tmr_inst:
   \        0x0                      DS8 4
    143          
    144          
    145          /*
    146          ** ============================================================================
    147          ** External Variable Declarations
    148          ** ============================================================================
    149          */
    150          
    151          extern p3time_t system_time_high_32;
    152          
    153          /*
    154          ** ============================================================================
    155          ** Private Function Prototypes
    156          ** ============================================================================
    157          */
    158          
    159          
    160          /*
    161          ** ============================================================================
    162          ** Public Function Definitions
    163          ** ============================================================================
    164          */
    165          
    166          #ifdef CLOCK_USING_MAC_SYSTEM_TIMER
    167          void clock_tick_processor( void );
    168          #endif
    169          

   \                                 In section .text, align 2, keep-with-next
    170          static void us_timer_isr(void) //d
    171          {
   \                     us_timer_isr: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    172            
    173          #if 0 // This is for FG13
    174            switch(timer_state) 
    175            {
    176              case WAIT_FOR_COMPARE:
    177          	  TIMER_IntClear(WTIMER0, TIMER_IF_CC0);
    178          	  timer_state = WAIT_FOR_NO_COMPARE;
    179          	  mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);
    180          	  break;         
    181              default:
    182          	  mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);
    183          	  break;
    184            }
    185            
    186          #else  // This is for FG23
    187            switch(timer_state) 
   \        0x2   0x....             LDR.N    R4,??DataTable15_6
   \        0x4   0x7820             LDRB     R0,[R4, #+0]
   \        0x6   0x2801             CMP      R0,#+1
   \        0x8   0xD10C             BNE.N    ??us_timer_isr_0
    188            {
    189              case WAIT_FOR_COMPARE:
    190          	  TIMER_IntClear(TIMER0, TIMER_IF_CC0);
   \        0xA   0x2110             MOVS     R1,#+16
   \        0xC   0x....             LDR.N    R0,??DataTable15_1
   \        0xE   0x.... 0x....      BL       TIMER_IntClear
    191          	  timer_state = WAIT_FOR_NO_COMPARE;
   \       0x12   0x2000             MOVS     R0,#+0
   \       0x14   0x7020             STRB     R0,[R4, #+0]
    192          	  mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);
   \       0x16   0x....             LDR.N    R1,??DataTable15_7
   \       0x18   0x6808             LDR      R0,[R1, #+0]
   \       0x1A   0x6880             LDR      R0,[R0, #+8]
   \       0x1C   0x6809             LDR      R1,[R1, #+0]
   \       0x1E   0x6849             LDR      R1,[R1, #+4]
   \       0x20   0x4788             BLX      R1
    193          	  break;         
   \       0x22   0xE005             B.N      ??us_timer_isr_1
    194              default:
    195          	  mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);
   \                     ??us_timer_isr_0: (+1)
   \       0x24   0x....             LDR.N    R1,??DataTable15_7
   \       0x26   0x6808             LDR      R0,[R1, #+0]
   \       0x28   0x6880             LDR      R0,[R0, #+8]
   \       0x2A   0x6809             LDR      R1,[R1, #+0]
   \       0x2C   0x6849             LDR      R1,[R1, #+4]
   \       0x2E   0x4788             BLX      R1
    196          	  break;
    197            }
    198            
    199          #endif
    200          }
   \                     ??us_timer_isr_1: (+1)
   \       0x30   0xBD10             POP      {R4,PC}
    201          
    202          
    203          
    204          /**************************************************************************//**
    205           * @brief
    206           *    TIMER 0 handler
    207           *****************************************************************************/
    208          //void TIMER0_IRQHandler(void)
    209          //{
    210          ////  static uint32_t i = 0;
    211          //
    212          //  // Acknowledge the interrupt
    213          //  uint32_t flags = TIMER_IntGet(TIMER0);
    214          //  TIMER_IntClear(TIMER0, flags);
    215          //
    216          //  // Check for capture event on channel 0
    217          //  if (flags & TIMER_IF_CC0) {
    218          //
    219          //    // Record input capture value
    220          //   TIMER_CaptureGet(TIMER0, 0);
    221          //#ifdef CLOCK_USING_MAC_SYSTEM_TIMER
    222          //    clock_tick_processor();
    223          //#endif
    224          //    // Increment index and have it wrap around
    225          //  }
    226          //}
    227          
    228          /**************************************************************************//**
    229           * @brief TIMER0_IRQHandler
    230           * Interrupt Service Routine TIMER0 Interrupt Line
    231           *****************************************************************************/
    232          #if 0 // This is for FG13
    233          void WTIMER0_IRQHandler(void) //d
    234          { 
    235            uint16_t intFlags = TIMER_IntGet(WTIMER0);
    236            TIMER_IntClear(WTIMER0, TIMER_IF_OF | TIMER_IF_CC0);
    237            
    238            /* Overflow interrupt occured */
    239            if(intFlags & TIMER_IF_OF)
    240            {
    241              mp_hw_tmr_inst->rollover_handled = 0; 
    242              us_timer_isr();
    243                    
    244           
    245            }
    246            
    247            /* Capture interrupt occured */
    248            if((timer_state == WAIT_FOR_COMPARE) && (intFlags & TIMER_IF_CC0))
    249            {      
    250              TIMER_IntDisable(WTIMER0, TIMER_IF_CC0);
    251              us_timer_isr();
    252            }
    253          }
    254          
    255          #else //This is for FG23
    256          

   \                                 In section .text, align 2, keep-with-next
    257          void TIMER0_IRQHandler(void) //d
    258          { 
   \                     TIMER0_IRQHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    259            uint16_t intFlags = TIMER_IntGet(TIMER0);
   \        0x2   0x....             LDR.N    R4,??DataTable15_1
   \        0x4   0x0020             MOVS     R0,R4
   \        0x6   0x.... 0x....      BL       TIMER_IntGet
   \        0xA   0x0005             MOVS     R5,R0
    260            TIMER_IntClear(TIMER0, TIMER_IF_OF | TIMER_IF_CC0);
   \        0xC   0x2111             MOVS     R1,#+17
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       TIMER_IntClear
    261            
    262            /* Overflow interrupt occured */
    263            if(intFlags & TIMER_IF_OF)
   \       0x14   0x07E8             LSLS     R0,R5,#+31
   \       0x16   0xD505             BPL.N    ??TIMER0_IRQHandler_0
    264            {
    265              mp_hw_tmr_inst->rollover_handled = 0; 
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x....             LDR.N    R1,??DataTable15_7
   \       0x1C   0x6809             LDR      R1,[R1, #+0]
   \       0x1E   0x7388             STRB     R0,[R1, #+14]
    266              us_timer_isr();
   \       0x20   0x.... 0x....      BL       us_timer_isr
    267                    
    268           
    269            }
    270            
    271            /* Capture interrupt occured */
    272            if((timer_state == WAIT_FOR_COMPARE) && (intFlags & TIMER_IF_CC0))
   \                     ??TIMER0_IRQHandler_0: (+1)
   \       0x24   0x....             LDR.N    R0,??DataTable15_6
   \       0x26   0x7800             LDRB     R0,[R0, #+0]
   \       0x28   0x2801             CMP      R0,#+1
   \       0x2A   0xD107             BNE.N    ??TIMER0_IRQHandler_1
   \       0x2C   0x06E8             LSLS     R0,R5,#+27
   \       0x2E   0xD505             BPL.N    ??TIMER0_IRQHandler_1
    273            {      
    274              TIMER_IntDisable(TIMER0, TIMER_IF_CC0);
   \       0x30   0x2110             MOVS     R1,#+16
   \       0x32   0x0020             MOVS     R0,R4
   \       0x34   0x.... 0x....      BL       TIMER_IntDisable
    275              us_timer_isr();
   \       0x38   0x.... 0x....      BL       us_timer_isr
    276            }
    277          }
   \                     ??TIMER0_IRQHandler_1: (+1)
   \       0x3C   0xBD31             POP      {R0,R4,R5,PC}
    278          
    279          #endif
    280          
    281          

   \                                 In section .text, align 2, keep-with-next
    282          void TIMER1_IRQHandler()
    283          {
   \                     TIMER1_IRQHandler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    284            uint16_t intFlags = TIMER_IntGet(TIMER1);
   \        0x2   0x....             LDR.N    R5,??DataTable15_2
   \        0x4   0x0028             MOVS     R0,R5
   \        0x6   0x.... 0x....      BL       TIMER_IntGet
   \        0xA   0x0004             MOVS     R4,R0
    285            TIMER_IntClear(TIMER1, TIMER_IF_OF);
   \        0xC   0x2101             MOVS     R1,#+1
   \        0xE   0x0028             MOVS     R0,R5
   \       0x10   0x.... 0x....      BL       TIMER_IntClear
    286            if(intFlags & TIMER_IF_OF)
   \       0x14   0x07E0             LSLS     R0,R4,#+31
   \       0x16   0xD501             BPL.N    ??TIMER1_IRQHandler_0
    287            {
    288          #ifdef CLOCK_USING_MAC_SYSTEM_TIMER
    289              clock_tick_processor();
   \       0x18   0x.... 0x....      BL       clock_tick_processor
    290          #endif
    291            }
    292            
    293          }
   \                     ??TIMER1_IRQHandler_0: (+1)
   \       0x1C   0xBD31             POP      {R0,R4,R5,PC}

   \                                 In section .text, align 2, keep-with-next
    294          void timer_initialization ( void ) //d
    295          {
   \                     timer_initialization: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0xB090             SUB      SP,SP,#+64
    296           // CMU_ClockEnable(cmuClock_HFPER, true); //d  
    297            
    298            /* Enable clock for TIMER0 module */
    299            CMU_ClockEnable(cmuClock_TIMER0, true);
   \        0x4   0x2101             MOVS     R1,#+1
   \        0x6   0x2024             MOVS     R0,#+36
   \        0x8   0x.... 0x....      BL       CMU_ClockEnable
   \        0xC   0x210D             MOVS     R1,#+13
   \        0xE   0x2200             MOVS     R2,#+0
   \       0x10   0xAC04             ADD      R4,SP,#+16
   \       0x12   0x0020             MOVS     R0,R4
   \       0x14   0x.... 0x....      BL       __aeabi_memset
    300               
    301          //  /* Select CC channel parameters */
    302          //  TIMER_InitCC_TypeDef timerCCInit = 
    303          //  {
    304          //    .eventCtrl  = timerEventEveryEdge,
    305          //    .edge       = timerEdgeBoth,
    306          //    .prsSel     = timerPRSSELCh0,
    307          //    .cufoa      = timerOutputActionNone,
    308          //    .cofoa      = timerOutputActionNone,
    309          //    .cmoa       = timerOutputActionToggle,
    310          //    .mode       = timerCCModePWM,
    311          //    .filter     = false,
    312          //    .prsInput   = false,
    313          //    .coist      = false,
    314          //    .outInvert  = false,
    315          //  };
    316          //  
    317          //  /* Configure CC channel 0 */
    318          //  TIMER_InitCC(WTIMER0, 0, &timerCCInit);
    319            
    320            
    321             // Configure WTIMER0 Compare/Capture for output compare
    322            // Use PWM mode, which sets output on overflow and clears on compare events
    323            TIMER_InitCC_TypeDef timerCCInit = TIMER_INITCC_DEFAULT;
    324            timerCCInit.mode = timerCCModePWM;
   \       0x18   0x2003             MOVS     R0,#+3
   \       0x1A   0xF88D 0x0016      STRB     R0,[SP, #+22]
    325            TIMER_InitCC(TIMER0, 0, &timerCCInit);
   \       0x1E   0x....             LDR.N    R4,??DataTable15_1
   \       0x20   0xAA04             ADD      R2,SP,#+16
   \       0x22   0x2100             MOVS     R1,#+0
   \       0x24   0x0020             MOVS     R0,R4
   \       0x26   0x.... 0x....      BL       TIMER_InitCC
    326          
    327            // Route WTIMER0 CC0 to location 30 and enable CC0 route pin
    328            // WTIM0_CC0 #30 is GPIO Pin PC10
    329           // TIMER0->ROUTELOC0 |=  TIMER_ROUTELOC0_CC0LOC_LOC30;  //Needed to be checked
    330           // TIMER0->ROUTEPEN |= TIMER_ROUTEPEN_CC0PEN;
    331            
    332            
    333            /* Set Top Value */
    334            TIMER_TopSet(TIMER0, (0xFFFFFFFF-1));
   \       0x2A   0xF07F 0x0101      MVNS     R1,#+1
   \       0x2E   0x0020             MOVS     R0,R4
   \       0x30   0x.... 0x....      BL       TIMER_TopSet
    335          
    336          //  /* Select timer parameters */  
    337          //  TIMER_Init_TypeDef timerInit =
    338          //  {
    339          //    .enable     = false,
    340          //    .debugRun   = false,
    341          //    .prescale   = timerPrescale32,
    342          //    .clkSel     = timerClkSelHFPerClk,
    343          //    .fallAction = timerInputActionNone,
    344          //    .riseAction = timerInputActionNone,
    345          //    .mode       = timerModeUp,
    346          //    .dmaClrAct  = false,
    347          //    .quadModeX4 = false,
    348          //    .oneShot    = false,
    349          //    .sync       = false,
    350          //  };
    351          //  
    352          //  /* Enable overflow interrupt */ 
    353          //  TIMER_IntEnable(WTIMER0, TIMER_IF_OF );  
    354          //  /* Enable TIMER0 interrupt vector in NVIC */
    355          //  NVIC_EnableIRQ(WTIMER0_IRQn);  
    356          //  /* Configure timer */
    357          //  TIMER_Init(WTIMER0, &timerInit);
    358            
    359            
    360             // Initialize the timer
    361            TIMER_Init_TypeDef timerInit = TIMER_INIT_DEFAULT;
   \       0x34   0x4668             MOV      R0,SP
   \       0x36   0x....             LDR.N    R1,??DataTable15_8
   \       0x38   0x2210             MOVS     R2,#+16
   \       0x3A   0x.... 0x....      BL       __aeabi_memcpy4
    362            timerInit.prescale = timerPrescale32;
   \       0x3E   0x201F             MOVS     R0,#+31
   \       0x40   0xF8AD 0x0002      STRH     R0,[SP, #+2]
    363            TIMER_Init(TIMER0, &timerInit);
   \       0x44   0x4669             MOV      R1,SP
   \       0x46   0x0020             MOVS     R0,R4
   \       0x48   0x.... 0x....      BL       TIMER_Init
    364            
    365            
    366             // Enable WTIMER0 compare event interrupts to update the duty cycle
    367            //TIMER_IntEnable(WTIMER0, TIMER_IEN_CC0);
    368            TIMER_IntEnable(TIMER0, TIMER_IF_OF ); 
   \       0x4C   0x2101             MOVS     R1,#+1
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0x.... 0x....      BL       TIMER_IntEnable
    369            NVIC_EnableIRQ(TIMER0_IRQn);
   \       0x54   0x2004             MOVS     R0,#+4
   \       0x56   0x.... 0x....      BL       __NVIC_EnableIRQ
    370            
    371            
    372            
    373          
    374           /********************* For Contiki timers **********************************/
    375            CMU_ClockEnable(cmuClock_TIMER1, true);  
   \       0x5A   0x2101             MOVS     R1,#+1
   \       0x5C   0x2025             MOVS     R0,#+37
   \       0x5E   0x.... 0x....      BL       CMU_ClockEnable
    376            TIMER_Init_TypeDef timerInit_2 = TIMER2_INIT_DEFAULT;
   \       0x62   0xA80C             ADD      R0,SP,#+48
   \       0x64   0x....             LDR.N    R1,??DataTable15_9
   \       0x66   0x2210             MOVS     R2,#+16
   \       0x68   0x.... 0x....      BL       __aeabi_memcpy4
    377            TIMER_InitCC_TypeDef timerCCInit_2 = TIMER2_INITCC_DEFAULT;
   \       0x6C   0xA808             ADD      R0,SP,#+32
   \       0x6E   0x....             LDR.N    R1,??DataTable15_10
   \       0x70   0x2210             MOVS     R2,#+16
   \       0x72   0x.... 0x....      BL       __aeabi_memcpy4
    378            TIMER_InitCC(TIMER1, 0, &timerCCInit_2);
   \       0x76   0x....             LDR.N    R4,??DataTable15_2
   \       0x78   0xAA08             ADD      R2,SP,#+32
   \       0x7A   0x2100             MOVS     R1,#+0
   \       0x7C   0x0020             MOVS     R0,R4
   \       0x7E   0x.... 0x....      BL       TIMER_InitCC
    379            
    380            TIMER_TopSet(TIMER1, (0X3E8-1));
   \       0x82   0xF240 0x31E7      MOVW     R1,#+999
   \       0x86   0x0020             MOVS     R0,R4
   \       0x88   0x.... 0x....      BL       TIMER_TopSet
    381           
    382            TIMER_IntEnable(TIMER1, TIMER_IF_OF );
   \       0x8C   0x2101             MOVS     R1,#+1
   \       0x8E   0x0020             MOVS     R0,R4
   \       0x90   0x.... 0x....      BL       TIMER_IntEnable
    383            NVIC_EnableIRQ(TIMER1_IRQn);  
   \       0x94   0x2005             MOVS     R0,#+5
   \       0x96   0x.... 0x....      BL       __NVIC_EnableIRQ
    384            TIMER_Init(TIMER1, &timerInit_2);
   \       0x9A   0xA90C             ADD      R1,SP,#+48
   \       0x9C   0x0020             MOVS     R0,R4
   \       0x9E   0x.... 0x....      BL       TIMER_Init
    385            TIMER_Enable(TIMER1, true);
   \       0xA2   0x2101             MOVS     R1,#+1
   \       0xA4   0x0020             MOVS     R0,R4
   \       0xA6   0x.... 0x....      BL       TIMER_Enable
    386          }
   \       0xAA   0xB010             ADD      SP,SP,#+64
   \       0xAC   0xBD10             POP      {R4,PC}

   \                                 In section .rodata, align 4
   \                     ?_1:
   \        0x0   0x00 0x00          DC8 0, 0
   \        0x2   0x001F             DC16 31
   \        0x4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00
   \        0xF                      DS8 1

   \                                 In section .rodata, align 4
   \                     ?_2:
   \        0x0   0x00 0x02          DC8 0, 2, 0, 0, 0, 1, 3, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x01    
   \              0x03 0x00    
   \              0x00 0x00    
   \              0x00
   \        0xB                      DS8 2
   \        0xD                      DS8 3
    387          

   \                                 In section .text, align 2, keep-with-next
    388          uint32_t us_timer_read(void) //d
    389          {
   \                     us_timer_read: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
    390            uint32_t currTime = 0;
   \        0x2   0x2400             MOVS     R4,#+0
    391            
    392            currTime = TIMER0->CNT;
   \        0x4   0x....             LDR.N    R0,??DataTable15_11
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    393            currTime /= CLOCK_TICK_RESOLUTION;
   \        0x8   0x.... 0x....      BL       __aeabi_ui2d
   \        0xC   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x10   0x....             LDR.N    R3,??DataTable15_12
   \       0x12   0x.... 0x....      BL       __aeabi_ddiv
   \       0x16   0x.... 0x....      BL       __aeabi_d2uiz
    394           
    395            return currTime;
   \       0x1A   0xBD10             POP      {R4,PC}
    396          }
    397          

   \                                 In section .text, align 2, keep-with-next
    398          void us_timer_set_value(uint32_t timestamp) //d
    399          {  
   \                     us_timer_set_value: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
    400            timestamp *= CLOCK_TICK_RESOLUTION;
   \        0x2   0x.... 0x....      BL       __aeabi_ui2d
   \        0x6   0xF05F 0x3233      MOVS     R2,#+858993459
   \        0xA   0x....             LDR.N    R3,??DataTable15_12
   \        0xC   0x.... 0x....      BL       __aeabi_dmul
   \       0x10   0x.... 0x....      BL       __aeabi_d2uiz
   \       0x14   0x0004             MOVS     R4,R0
    401             
    402            timestamp -= 1;   
   \       0x16   0x1E64             SUBS     R4,R4,#+1
    403                  
    404            if ((TIMER0->CNT + 100) < timestamp)
   \       0x18   0x....             LDR.N    R0,??DataTable15_11
   \       0x1A   0x6800             LDR      R0,[R0, #+0]
   \       0x1C   0x3064             ADDS     R0,R0,#+100
   \       0x1E   0x42A0             CMP      R0,R4
   \       0x20   0xD20D             BCS.N    ??us_timer_set_value_0
    405            {
    406              timer_state = WAIT_FOR_COMPARE;
   \       0x22   0x2101             MOVS     R1,#+1
   \       0x24   0x....             LDR.N    R0,??DataTable15_6
   \       0x26   0x7001             STRB     R1,[R0, #+0]
    407              TIMER_CompareSet(TIMER0, 0, timestamp);
   \       0x28   0x....             LDR.N    R5,??DataTable15_1
   \       0x2A   0x0022             MOVS     R2,R4
   \       0x2C   0x2100             MOVS     R1,#+0
   \       0x2E   0x0028             MOVS     R0,R5
   \       0x30   0x.... 0x....      BL       TIMER_CompareSet
    408              TIMER_IntEnable(TIMER0, TIMER_IF_CC0);
   \       0x34   0x2110             MOVS     R1,#+16
   \       0x36   0x0028             MOVS     R0,R5
   \       0x38   0x.... 0x....      BL       TIMER_IntEnable
   \       0x3C   0xE004             B.N      ??us_timer_set_value_1
    409            }
    410            else
    411            {
    412              timer_state = WAIT_FOR_NO_COMPARE;
   \                     ??us_timer_set_value_0: (+1)
   \       0x3E   0x2100             MOVS     R1,#+0
   \       0x40   0x....             LDR.N    R0,??DataTable15_6
   \       0x42   0x7001             STRB     R1,[R0, #+0]
    413              //something wrong
    414              us_timer_isr();//just invoke callback expiry
   \       0x44   0x.... 0x....      BL       us_timer_isr
    415            } 
    416          }
   \                     ??us_timer_set_value_1: (+1)
   \       0x48   0xBD31             POP      {R0,R4,R5,PC}
    417          
    418                          

   \                                 In section .text, align 2, keep-with-next
    419          void hw_tmr_init( void *hw_tmr_ins,  void *sw_tmr_mod_ins )
    420          {
   \                     hw_tmr_init: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
    421            mp_hw_tmr_inst = (hw_tmr_t*)hw_tmr_ins;     
   \        0x6   0x....             LDR.N    R1,??DataTable15_7
   \        0x8   0x600C             STR      R4,[R1, #+0]
    422            mp_hw_tmr_inst->rollover_handled = 1;      
   \        0xA   0x2001             MOVS     R0,#+1
   \        0xC   0x6809             LDR      R1,[R1, #+0]
   \        0xE   0x7388             STRB     R0,[R1, #+14]
    423            timer_initialization ();
   \       0x10   0x.... 0x....      BL       timer_initialization
    424          }
   \       0x14   0xBD31             POP      {R0,R4,R5,PC}
    425          /******************************************************************************/
    426          

   \                                 In section .text, align 2, keep-with-next
    427          void hw_tmr_uninit( void *hw_tmr_ins,  void *sw_tmr_mod_ins )
    428          {
   \                     hw_tmr_uninit: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000C             MOVS     R4,R1
    429            TIMER_IntClear(TIMER0, TIMER_IF_CC0);
   \        0x6   0x2110             MOVS     R1,#+16
   \        0x8   0x....             LDR.N    R0,??DataTable15_1
   \        0xA   0x.... 0x....      BL       TIMER_IntClear
    430          }
   \        0xE   0xBD31             POP      {R0,R4,R5,PC}
    431          
    432          /******************************************************************************/

   \                                 In section .text, align 2, keep-with-next
    433          uint16_t hw_tmr_sys_time_high( void ) //d
    434          {
    435            uint32_t curr;
    436            uint16_t high16 = 0;
   \                     hw_tmr_sys_time_high: (+1)
   \        0x0   0x2100             MOVS     R1,#+0
    437            
    438            curr = TIMER0->CNT;
   \        0x2   0x....             LDR.N    R0,??DataTable15_11
   \        0x4   0x6802             LDR      R2,[R0, #+0]
    439            high16 = curr >> 16;
   \        0x6   0x0010             MOVS     R0,R2
   \        0x8   0x0C00             LSRS     R0,R0,#+16
    440            
    441            return (high16 & 0xFFFF);
   \        0xA   0xB280             UXTH     R0,R0
   \        0xC   0x4770             BX       LR
    442          }
    443          /******************************************************************************/
    444          

   \                                 In section .text, align 2, keep-with-next
    445          p3time_t hw_tmr_get_time( void *hw_tmr_ins )
    446          {  
   \                     hw_tmr_get_time: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    447            p3time_t current_time;
    448            current_time = us_timer_read() ;
   \        0x4   0x.... 0x....      BL       us_timer_read
    449            return current_time;
   \        0x8   0xBD10             POP      {R4,PC}
    450          }
    451          
    452          

   \                                 In section .text, align 2, keep-with-next
    453          p3time_t hw_tmr_get_time_int( void *hw_tmr_ins ) //d
    454          {  
   \                     hw_tmr_get_time_int: (+1)
   \        0x0   0xB510             PUSH     {R4,LR}
   \        0x2   0x0004             MOVS     R4,R0
    455            uint32_t current_time;
    456            
    457            current_time = TIMER0->CNT;
   \        0x4   0x....             LDR.N    R0,??DataTable15_11
   \        0x6   0x6800             LDR      R0,[R0, #+0]
    458            current_time /= CLOCK_TICK_RESOLUTION;
   \        0x8   0x.... 0x....      BL       __aeabi_ui2d
   \        0xC   0xF05F 0x3233      MOVS     R2,#+858993459
   \       0x10   0x....             LDR.N    R3,??DataTable15_12
   \       0x12   0x.... 0x....      BL       __aeabi_ddiv
   \       0x16   0x.... 0x....      BL       __aeabi_d2uiz
    459            
    460            return current_time ;
   \       0x1A   0xBD10             POP      {R4,PC}
    461          }
    462          
    463          /******************************************************************************/
    464          

   \                                 In section .text, align 2, keep-with-next
    465          void hw_tmr_start( void *hw_tmr_ins, p3time_t cycles_at_expiry_us )
    466          {
   \                     hw_tmr_start: (+1)
   \        0x0   0xE92D 0x41F0      PUSH     {R4-R8,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
    467            p3time_t cycles_now;    
    468            uint32_t  diff_time = 0;
   \        0x8   0xF05F 0x0800      MOVS     R8,#+0
    469          
    470            cycles_now = hw_tmr_get_time(hw_tmr_ins);	
   \        0xC   0x0020             MOVS     R0,R4
   \        0xE   0x.... 0x....      BL       hw_tmr_get_time
   \       0x12   0x0006             MOVS     R6,R0
    471                
    472            #if 0           
    473            if( cycles_at_expiry_us > cycles_now )      
    474              us_timer_set_value(cycles_at_expiry_us);
    475            else
    476              mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);
    477          
    478            #else
    479            if( cycles_at_expiry_us > cycles_now )
   \       0x14   0x42AE             CMP      R6,R5
   \       0x16   0xD201             BCS.N    ??hw_tmr_start_0
    480              diff_time = cycles_at_expiry_us - cycles_now;
   \       0x18   0x1BAF             SUBS     R7,R5,R6
   \       0x1A   0xE000             B.N      ??hw_tmr_start_1
    481            else
    482              diff_time =  cycles_now - cycles_at_expiry_us;
   \                     ??hw_tmr_start_0: (+1)
   \       0x1C   0x1B77             SUBS     R7,R6,R5
    483               
    484            if( diff_time > 100 )       
   \                     ??hw_tmr_start_1: (+1)
   \       0x1E   0x2F65             CMP      R7,#+101
   \       0x20   0xD303             BCC.N    ??hw_tmr_start_2
    485              us_timer_set_value(cycles_at_expiry_us);
   \       0x22   0x0028             MOVS     R0,R5
   \       0x24   0x.... 0x....      BL       us_timer_set_value
   \       0x28   0xE005             B.N      ??hw_tmr_start_3
    486            else
    487              mp_hw_tmr_inst->cb(mp_hw_tmr_inst->ctx);        
   \                     ??hw_tmr_start_2: (+1)
   \       0x2A   0x....             LDR.N    R1,??DataTable15_7
   \       0x2C   0x6808             LDR      R0,[R1, #+0]
   \       0x2E   0x6880             LDR      R0,[R0, #+8]
   \       0x30   0x6809             LDR      R1,[R1, #+0]
   \       0x32   0x6849             LDR      R1,[R1, #+4]
   \       0x34   0x4788             BLX      R1
    488            #endif
    489                
    490          }
   \                     ??hw_tmr_start_3: (+1)
   \       0x36   0xE8BD 0x81F0      POP      {R4-R8,PC}
    491          
    492          /******************************************************************************/
    493          

   \                                 In section .text, align 2, keep-with-next
    494          void hw_tmr_stop( void *hw_tmr_ins )
    495          {    
   \                     hw_tmr_stop: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    496            TIMER_CompareSet(TIMER0,0,0);
   \        0x4   0x....             LDR.N    R5,??DataTable15_1
   \        0x6   0x2200             MOVS     R2,#+0
   \        0x8   0x2100             MOVS     R1,#+0
   \        0xA   0x0028             MOVS     R0,R5
   \        0xC   0x.... 0x....      BL       TIMER_CompareSet
    497            TIMER_CompareSet(TIMER0,0,0);
   \       0x10   0x2200             MOVS     R2,#+0
   \       0x12   0x2100             MOVS     R1,#+0
   \       0x14   0x0028             MOVS     R0,R5
   \       0x16   0x.... 0x....      BL       TIMER_CompareSet
    498            timer_state = WAIT_FOR_NO_COMPARE;
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x....             LDR.N    R0,??DataTable15_6
   \       0x1E   0x7001             STRB     R1,[R0, #+0]
    499            TIMER_IntClear(TIMER0, TIMER_IF_CC0);
   \       0x20   0x2110             MOVS     R1,#+16
   \       0x22   0x0028             MOVS     R0,R5
   \       0x24   0x.... 0x....      BL       TIMER_IntClear
    500            mp_hw_tmr_inst->low_time_us = 0;
   \       0x28   0x2000             MOVS     R0,#+0
   \       0x2A   0x....             LDR.N    R1,??DataTable15_7
   \       0x2C   0x6809             LDR      R1,[R1, #+0]
   \       0x2E   0x8188             STRH     R0,[R1, #+12]
    501          }
   \       0x30   0xBD31             POP      {R0,R4,R5,PC}
    502          
    503          /******************************************************************************/
    504          

   \                                 In section .text, align 2, keep-with-next
    505          uint8_t hw_tmr_rand( void *hw_tmr_ins )
    506          {
   \                     hw_tmr_rand: (+1)
   \        0x0   0xB570             PUSH     {R4-R6,LR}
   \        0x2   0x0004             MOVS     R4,R0
    507            p3time_t seed = 0x00;
   \        0x4   0x2500             MOVS     R5,#+0
    508            rnd_index += 1;	
   \        0x6   0x....             LDR.N    R6,??DataTable15_13
   \        0x8   0x7830             LDRB     R0,[R6, #+0]
   \        0xA   0x1C40             ADDS     R0,R0,#+1
   \        0xC   0x7030             STRB     R0,[R6, #+0]
    509            seed = hw_tmr_get_time(hw_tmr_ins);
   \        0xE   0x0020             MOVS     R0,R4
   \       0x10   0x.... 0x....      BL       hw_tmr_get_time
    510            return (rnd_array[ (rnd_index & 0x3f) ] ^ (seed & 0xff));
   \       0x14   0x....             LDR.N    R1,??DataTable15_14
   \       0x16   0x7832             LDRB     R2,[R6, #+0]
   \       0x18   0xF012 0x023F      ANDS     R2,R2,#0x3F
   \       0x1C   0x5C89             LDRB     R1,[R1, R2]
   \       0x1E   0x4048             EORS     R0,R0,R1
   \       0x20   0xB2C0             UXTB     R0,R0
   \       0x22   0xBD70             POP      {R4-R6,PC}
    511          }
    512          
    513          /******************************************************************************/
    514          

   \                                 In section .text, align 2, keep-with-next
    515          void hw_tmr_delay( void *hw_tmr_ins, uint32_t duration_in_us )
    516          {
   \                     hw_tmr_delay: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0007             MOVS     R7,R0
   \        0x4   0x000C             MOVS     R4,R1
    517            p3time_t cycles_now = 0;
   \        0x6   0x2500             MOVS     R5,#+0
    518            p3time_t target_cycles = hw_tmr_get_time(hw_tmr_ins);        
   \        0x8   0x0038             MOVS     R0,R7
   \        0xA   0x.... 0x....      BL       hw_tmr_get_time
   \        0xE   0x0006             MOVS     R6,R0
    519            target_cycles += duration_in_us;	
   \       0x10   0x19A6             ADDS     R6,R4,R6
    520            do
    521              cycles_now = hw_tmr_get_time(hw_tmr_ins);
   \                     ??hw_tmr_delay_0: (+1)
   \       0x12   0x0038             MOVS     R0,R7
   \       0x14   0x.... 0x....      BL       hw_tmr_get_time
   \       0x18   0x0005             MOVS     R5,R0
    522            while( target_cycles > cycles_now );
   \       0x1A   0x42B5             CMP      R5,R6
   \       0x1C   0xD3F9             BCC.N    ??hw_tmr_delay_0
    523          }
   \       0x1E   0xBDF1             POP      {R0,R4-R7,PC}
    524          
    525          /******************************************************************************/
    526          

   \                                 In section .text, align 2, keep-with-next
    527          uint32_t hw_tmr_get_symbols( uint32_t time )
    528          {
   \                     hw_tmr_get_symbols: (+1)
   \        0x0   0x0001             MOVS     R1,R0
    529            // TO DO : once the PHY library is integerated : Raka
    530            //return (time/HWTIMER_SYMBOL_LENGTH);  //time /20 usecs //d
    531            return 0; //d
   \        0x2   0x2000             MOVS     R0,#+0
   \        0x4   0x4770             BX       LR
    532          }

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \        0x0   0xE000'E100        DC32     0xe000e100

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \        0x0   0x5004'8000        DC32     0x50048000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \        0x0   0x5004'C000        DC32     0x5004c000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \        0x0   0x5005'0000        DC32     0x50050000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \        0x0   0x5005'4000        DC32     0x50054000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \        0x0   0x5005'8000        DC32     0x50058000

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \        0x0   0x....'....        DC32     timer_state

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \        0x0   0x....'....        DC32     mp_hw_tmr_inst

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \        0x0   0x....'....        DC32     ?_0

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \        0x0   0x....'....        DC32     ?_1

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \        0x0   0x....'....        DC32     ?_2

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \        0x0   0x5004'8024        DC32     0x50048024

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_12:
   \        0x0   0x3FF3'3333        DC32     0x3ff33333

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_13:
   \        0x0   0x....'....        DC32     rnd_index

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_14:
   \        0x0   0x....'....        DC32     rnd_array

   \                                 In section .rodata, align 4
   \                     ?_0:
   \        0x0   0x01 0x00          DC8 1, 0
   \        0x2   0x0000             DC16 0
   \        0x4   0x00 0x00          DC8 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00    
   \              0x00 0x00
    533          
    534          
    535          
    536          
    537          /*
    538          ** ============================================================================
    539          ** Private Function Definitions
    540          ** ============================================================================
    541          */
    542          
    543          
    544          
    545          

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      16   TIMER0_IRQHandler
        16   -> TIMER_IntClear
        16   -> TIMER_IntDisable
        16   -> TIMER_IntGet
        16   -> us_timer_isr
      16   TIMER1_IRQHandler
        16   -> TIMER_IntClear
        16   -> TIMER_IntGet
        16   -> clock_tick_processor
      16   TIMER_CompareSet
        16   -> TIMER_MaxCount
      16   TIMER_Enable
        16   -> TIMER_Valid
       0   TIMER_IntClear
       0   TIMER_IntDisable
       0   TIMER_IntEnable
       0   TIMER_IntGet
       4   TIMER_MaxCount
         4 __aeabi_llsl
      16   TIMER_TopSet
        16   -> TIMER_MaxCount
       0   TIMER_Valid
       0   __NVIC_EnableIRQ
      24   hw_tmr_delay
        24   -> hw_tmr_get_time
       0   hw_tmr_get_symbols
       8   hw_tmr_get_time
         8   -> us_timer_read
       8   hw_tmr_get_time_int
         8   -> __aeabi_d2uiz
         8   -> __aeabi_ddiv
         8   -> __aeabi_ui2d
      16   hw_tmr_init
        16   -> timer_initialization
      16   hw_tmr_rand
        16   -> hw_tmr_get_time
      24   hw_tmr_start
        24   -- Indirect call
        24   -> hw_tmr_get_time
        24   -> us_timer_set_value
      16   hw_tmr_stop
        16   -> TIMER_CompareSet
        16   -> TIMER_IntClear
       0   hw_tmr_sys_time_high
      16   hw_tmr_uninit
        16   -> TIMER_IntClear
      72   timer_initialization
        72   -> CMU_ClockEnable
        72   -> TIMER_Enable
        72   -> TIMER_Init
        72   -> TIMER_InitCC
        72   -> TIMER_IntEnable
        72   -> TIMER_TopSet
        72   -> __NVIC_EnableIRQ
        72   -> __aeabi_memcpy4
        72   -> __aeabi_memset
       8   us_timer_isr
         8   -- Indirect call
         8   -> TIMER_IntClear
       8   us_timer_read
         8   -> __aeabi_d2uiz
         8   -> __aeabi_ddiv
         8   -> __aeabi_ui2d
      16   us_timer_set_value
        16   -> TIMER_CompareSet
        16   -> TIMER_IntEnable
        16   -> __aeabi_d2uiz
        16   -> __aeabi_dmul
        16   -> __aeabi_ui2d
        16   -> us_timer_isr


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_12
       4  ??DataTable15_13
       4  ??DataTable15_14
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
      16  ?_0
      16  ?_1
      16  ?_2
       4  LOW_VAL
      62  TIMER0_IRQHandler
      30  TIMER1_IRQHandler
      40  TIMER_CompareSet
      32  TIMER_Enable
       8  TIMER_IntClear
       8  TIMER_IntDisable
       8  TIMER_IntEnable
       4  TIMER_IntGet
     436  TIMER_MaxCount
      34  TIMER_TopSet
      50  TIMER_Valid
      32  __NVIC_EnableIRQ
      32  hw_tmr_delay
       6  hw_tmr_get_symbols
      10  hw_tmr_get_time
      28  hw_tmr_get_time_int
      22  hw_tmr_init
      36  hw_tmr_rand
      58  hw_tmr_start
      50  hw_tmr_stop
      14  hw_tmr_sys_time_high
      16  hw_tmr_uninit
       4  mp_hw_tmr_inst
      64  rnd_array
       1  rnd_index
     174  timer_initialization
       1  timer_state
       4  timestampLow
      50  us_timer_isr
      28  us_timer_read
      74  us_timer_set_value

 
    14 bytes in section .bss
    64 bytes in section .data
    48 bytes in section .rodata
 1'402 bytes in section .text
 
 1'402 bytes of CODE  memory
    48 bytes of CONST memory
    78 bytes of DATA  memory

Errors: none
Warnings: none

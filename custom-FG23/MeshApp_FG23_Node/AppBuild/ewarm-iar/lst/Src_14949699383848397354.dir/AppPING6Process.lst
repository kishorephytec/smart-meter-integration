###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         26/Nov/2024  12:15:48
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode                     =  thumb
#    Endian                       =  little
#    Source file                  =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\FANApp\AppSrc\AppPING6Process.c
#    Command line                 =
#        -f
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Src_14949699383848397354.dir\AppPING6Process.o.rsp
#        (C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\FANApp\AppSrc\AppPING6Process.c
#        -D EFR32FG23A020F512GM40=1 -D SL_COMPONENT_CATALOG_PRESENT=1 -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -lC
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\lst\Src_14949699383848397354.dir
#        --diag_suppress Pa050 -o
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Src_14949699383848397354.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse -e --fpu=VFPv5_sp --dlib_config "C:\Program
#        Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\.\ -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\AppConfigs\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\config\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\autogen\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\HAL\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\NVM\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\buffer_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\event_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\list_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\queue_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\timer_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\hif\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\raw_uart_if\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\debug_console\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\Device\SiliconLabs\EFR32FG23\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\device_init\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\common\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\mpu\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\common\toolchain\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\system\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\network-manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\RAIL_TRX\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\MAC\Inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\wisun_modified\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\FANApp\AppInc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_callbacks\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ip\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ipv6\multicast\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ipv6\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\rpl\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\OS_interface\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\L2_L3_interface\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\cpu\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\Interface_Layer\contiki_mac_interface_layer\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\Interface_Layer\mac_sicslowpan_if\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emlib\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\platform\p3_lp_dk\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\common\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\efr32xg1x\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_protocol\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_rssi\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\MeterApp\Inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emdrv\common\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\FLASH\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\APP_LOG\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\response_print\config\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\response_print\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\NVM\nvm3\inc\
#        -On --use_c++_inline) --dependencies=n
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Src_14949699383848397354.dir\AppPING6Process.o.iar_deps
#    Locale                       =  C
#    List file                    =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\lst\Src_14949699383848397354.dir\AppPING6Process.lst
#    Object file                  =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Src_14949699383848397354.dir\AppPING6Process.o
#    Runtime model:                  
#      __CPP_Runtime              =  1
#      __SystemLibrary            =  DLib
#      __dlib_file_descriptor     =  0
#      __dlib_full_locale_support =  0
#      __dlib_version             =  6
#
###############################################################################

C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\FANApp\AppSrc\AppPING6Process.c
      1          /** \file AppPING6Process.c
      2           *******************************************************************************
      3           ** \brief 
      4           **
      5           ** \cond 
      6           **
      7           ** COPYRIGHT(c) 2023-24 Procubed Innovations Pvt Ltd.
      8           ** All rights reserved.
      9           **
     10           ** THIS SOFTWARE IS PROVIDED BY "AS IS" AND ALL WARRANTIES OF ANY KIND,
     11           ** INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR USE,
     12           ** ARE EXPRESSLY DISCLAIMED.  THE DEVELOPER SHALL NOT BE LIABLE FOR ANY
     13           ** DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE. THIS SOFTWARE
     14           ** MAY NOT BE USED IN PRODUCTS INTENDED FOR USE IN IMPLANTATION OR OTHER
     15           ** DIRECT LIFE SUPPORT APPLICATIONS WHERE MALFUNCTION MAY RESULT IN THE DIRECT
     16           ** PHYSICAL HARM OR INJURY TO PERSONS. ALL SUCH IS USE IS EXPRESSLY PROHIBITED.
     17           **
     18           *******************************************************************************
     19           **  \endcond
     20           */
     21          /*
     22           * Redistribution and use in source and binary forms, with or without
     23           * modification, are permitted provided that the following conditions
     24           * are met:
     25           * 1. Redistributions of source code must retain the above copyright
     26           *    notice, this list of conditions and the following disclaimer.
     27           * 2. Redistributions in binary form must reproduce the above copyright
     28           *    notice, this list of conditions and the following disclaimer in the
     29           *    documentation and/or other materials provided with the distribution.
     30           * 3. Neither the name of the Institute nor the names of its contributors
     31           *    may be used to endorse or promote products derived from this software
     32           *    without specific prior written permission.
     33           *
     34           * THIS SOFTWARE IS PROVIDED BY THE INSTITUTE AND CONTRIBUTORS ``AS IS'' AND
     35           * ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
     36           * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
     37           * ARE DISCLAIMED.  IN NO EVENT SHALL THE INSTITUTE OR CONTRIBUTORS BE LIABLE
     38           * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
     39           * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS
     40           * OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)
     41           * HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT
     42           * LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY
     43           * OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF
     44           * SUCH DAMAGE.
     45           *
     46           * This file is part of the Contiki operating system.
     47           *
     48           */
     49          #include "StackAppConf.h"
     50          #include "common.h"
     51          #include "l3_configuration.h"
     52          #include "list_latest.h"
     53          #include "queue_latest.h"
     54          #include "contiki-net.h"
     55          #include "uart_hal.h"
     56          #include "hif_utility.h"
     57          #include "hif_service.h"
     58          #include "buff_mgmt.h"
     59          #include "buffer_service.h"
     60          #include "mac.h"
     61          #include <string.h>
     62          #include <stdio.h>
     63          #include "ie_element_info.h"
     64          #include "fan_app_test_harness.h"
     65          #include "AppUDPprocess.h"
     66          #include "fan_app_auto.h"
     67          #include "fan_api.h"
     68          #include "sm.h"
     69          #include "fan_mac_interface.h"
     70          
     71          /*----------------------------------------------------------------------------*/
     72          
     73          //#if AUTO_CONFIG_ENABLE
     74          extern uint8_t temp_buf_set;
     75          //#endif
     76          
     77          #define PING6_NB                1
     78          #define PING6_DATALEN           (echo_config.echo_data_len)
     79          
     80          #define UIP_IP_BUF              ((struct uip_ip_hdr *)&uip_buf[UIP_LLH_LEN])
     81          #define UIP_ICMP_BUF            ((struct uip_icmp_hdr *)&uip_buf[uip_l2_l3_hdr_len])
     82          
     83          
     84          #define SEND_ONLY_FIRST_FRAGMENT                0x01
     85          #define SEND_WRONG_CHECKSUM                     0x02
     86          #define SEND_WRONG_ICMPv6_TYPE                  0x03
     87          #define SEND_WRONG_PROTO                        0x04
     88          #define SEND_ICMP_WITH_KNOWN_ID_SEQ_NUM         5
     89          #define ECHO_PKT_IDENTIFIER                     0x1212
     90          
     91          /*----------------------------------------------------------------------------*/

   \                                 In section .bss, align 8
     92          static l3_etimer_t ping6_periodic_timer;
   \                     ping6_periodic_timer:
   \        0x0                      DS8 24

   \                                 In section .bss, align 8
     93          static l3_ctimer_t echo_send_ctimer; 
   \                     echo_send_ctimer:
   \        0x0                      DS8 48

   \                                 In section .bss, align 2
     94          uint16_t icmv6_counter = 0x0000;
   \                     icmv6_counter:
   \        0x0                      DS8 2

   \                                 In section .bss, align 2
     95          uint16_t icmv6_response_counter = 0x00;
   \                     icmv6_response_counter:
   \        0x0                      DS8 2

   \                                 In section .bss, align 4
     96          struct uip_icmp_hdr* p_icmp_packet = NULL;
   \                     p_icmp_packet:
   \        0x0                      DS8 4

   \                                 In section .bss, align 2
     97          static uint16_t ping_seq_number = 0;
   \                     ping_seq_number:
   \        0x0                      DS8 2
     98          typedef struct echo_request_config_tag
     99          {
    100              uip_ipaddr_t src_ip_addr;
    101              uip_ipaddr_t dest_ip_addr;
    102              uint16_t echo_data_len;
    103              uint8_t *p_echo_data;
    104              uint16_t counter;
    105              uint8_t interval;
    106              uint8_t hop_limit;
    107              uint16_t identifier;                //Arjun: 23-03-18: to be set from tool as says swagger API
    108              uint16_t sequence_number;
    109          }echo_request_config_t;

   \                                 In section .bss, align 4
    110          echo_request_config_t echo_config;
   \                     echo_config:
   \        0x0                      DS8 48
    111          
    112          /*******************************************************************************/
    113          
    114          static void process_timer_expiry(void);
    115          static void process_echo( void );
    116          static void process_dest_unreachable_msg(void);
    117          static void process_para_problem_msg( void );
    118          static uint8_t process_nans( void );
    119          void echo_send_ctimer_callback(void* ptr);
    120          void uip_icmp6_send_echo_request(void);
    121          void send_icmpv6(uint8_t *buf, uint16_t length);
    122          void send_icmpv6_with_count(uint8_t *buf, uint16_t length);
    123          void send_icmv6_conf(void);
    124          
    125          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    126          void send_status_to_edfe_fragment(uint8_t status);
    127          void trigger_edfe_final_frame();
    128          extern void enable_disable_edfe_frame(uint8_t value,uint8_t edfe_frame_type);
    129          extern edfe_info_t edfe_information;  
    130          #endif
    131          
    132          uint8_t gu2pcapp_send_na_ind
    133          (
    134           uint8_t type,
    135           uint8_t code,
    136           uint16_t checksum,
    137           uint8_t osr_flag,
    138           uip_ipaddr_t* p_tgt_addr,
    139           uint8_t icmpv6_opt_type,
    140           uint8_t icmpv6_opt_len,
    141           uip_lladdr_t* p_tlla
    142          );
    143          
    144          uint8_t gu2pcapp_send_ns_ind
    145          (
    146           uint8_t type,
    147           uint8_t code,
    148           uint16_t checksum,
    149           uip_ipaddr_t* p_tgt_addr,
    150           uint8_t icmpv6_opt_type,
    151           uint8_t icmpv6_opt_len,
    152           uip_lladdr_t* p_tlla
    153          );
    154          
    155          uint8_t gu2pcapp_send_echo_req_res
    156          (
    157           uint8_t type,
    158           uint8_t code,
    159           uint16_t checksum,
    160           uint16_t id,
    161           uint16_t seq_num,
    162           uint16_t data_len,        
    163           uint8_t* p_data
    164          );
    165          
    166          uint8_t gu2pcapp_send_dest_unreachable_icmp_ind
    167          (
    168           uint8_t type,
    169           uint8_t code,
    170           uint16_t checksum,
    171           uint16_t payload_len,
    172           uint8_t* p_payload
    173          );
    174          
    175          uint8_t gu2pcapp_process_para_problem_msg_ind
    176          (
    177           uint8_t type,
    178           uint8_t code,
    179           uint16_t checksum,
    180           uint16_t payload_len,
    181           uint8_t* p_payload
    182          );
    183          /*----------------------------------------------------------------------------*/

   \                                 In section .data, align 4
    184          L3_PROCESS(ping6_process, "PING6 process");
   \                     ping6_process:
   \        0x0   0x0000'0000        DC32 0x0, process_thread_ping6_process
   \              0x....'....
   \        0x8                      DS8 4
    185          /*----------------------------------------------------------------------------*/

   \                                 In section .bss, align 4
    186          static enet_msg_t* siclowpanPakcets[20];
   \                     siclowpanPakcets:
   \        0x0                      DS8 80

   \                                 In section .bss, align 1
    187          static uint8_t siclowpanPakcetsIndex = 0;
   \                     siclowpanPakcetsIndex:
   \        0x0                      DS8 1
    188          //static uint8_t num_sicslowpan_pkts = 0;
    189          extern uint8_t response_laye_ID;
    190          extern enet_msg_t* allocate_hif_msg( uint16_t length );
    191          //[Kimbal]
    192          //extern void free_hif_msg( enet_msg_t * msgp );
    193          extern uint8_t capture_nans_and_send;
    194          //int __nbr;
    195          extern uint8_t get_upper_layer_status();
    196          extern uint8_t* get_self_address(void);
    197          extern void uip_icmp6_send(const uip_ipaddr_t *dest, int type, int code, int payload_len,int hop_limit);
    198          extern void wan_uip_icmp6_send (const uip_ipaddr_t *dest, const uip_ipaddr_t *src, int type, int code, int payload_len,int hop_limit);
    199          //extern void red_led_off(void);
    200          extern uint8_t* get_self_global_addr();
    201          extern void mem_rev_cpy(uint8_t* dest, uint8_t* src, uint16_t len );
    202          
    203          extern void * app_bm_alloc(
    204              uint16_t length//base_t length      
    205              );
    206              
    207          extern void app_bm_free(
    208              uint8_t *pMem      
    209              );
    210          
    211          void send_edfe_initial_frame(uint8_t *src_addr , uint8_t value,uint8_t edfe_frame_type);
    212          extern uint16_t max_frag_size;
    213          
    214          /*----------------------------------------------------------------------------*/
    215          //static void queue_sicslowpan_packet( enet_msg_t* msg )
    216          //{
    217          //  siclowpanPakcets[siclowpanPakcetsIndex++] = msg;
    218          //  if( siclowpanPakcetsIndex == 20 )
    219          //  {
    220          //    siclowpanPakcetsIndex = 0;
    221          //  } 
    222          //}
    223          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    224          void send_all_queued_sicslowpan_packets(void)
    225          {
   \                     send_all_queued_sicslowpan_packets: (+1)
   \        0x0   0xB410             PUSH     {R4}
    226          #ifdef SEND_SICSLOWPAN_PKT_TO_HIF
    227              uint8_t index = 0;
   \        0x2   0x2200             MOVS     R2,#+0
    228              enet_msg_t* msg = NULL;
   \        0x4   0x2000             MOVS     R0,#+0
    229              for( index=0; index<siclowpanPakcetsIndex; index++ )
   \        0x6   0x2100             MOVS     R1,#+0
   \                     ??send_all_queued_sicslowpan_packets_0: (+1)
   \        0x8   0x.... 0x....      LDR.W    R2,??DataTable15
   \        0xC   0x000C             MOVS     R4,R1
   \        0xE   0x7813             LDRB     R3,[R2, #+0]
   \       0x10   0xB2E4             UXTB     R4,R4
   \       0x12   0x429C             CMP      R4,R3
   \       0x14   0xD20F             BCS.N    ??send_all_queued_sicslowpan_packets_1
    230              {
    231                msg = siclowpanPakcets[index];
   \       0x16   0x.... 0x....      LDR.W    R2,??DataTable15_1
   \       0x1A   0x000B             MOVS     R3,R1
   \       0x1C   0xB2DB             UXTB     R3,R3
   \       0x1E   0xF852 0x3023      LDR      R3,[R2, R3, LSL #+2]
   \       0x22   0x0018             MOVS     R0,R3
    232                if( msg != NULL )
   \       0x24   0x2800             CMP      R0,#+0
   \       0x26   0xD004             BEQ.N    ??send_all_queued_sicslowpan_packets_2
    233                {
    234          //[Kimbal]
    235          //        hif_send_msg_up(msg->data,msg->data_length-1,response_laye_ID,PROTOCOL_ID_FOR_APP);  
    236          //        free_hif_msg(msg);
    237                  siclowpanPakcets[index] = NULL;
   \       0x28   0x2400             MOVS     R4,#+0
   \       0x2A   0x000B             MOVS     R3,R1
   \       0x2C   0xB2DB             UXTB     R3,R3
   \       0x2E   0xF842 0x4023      STR      R4,[R2, R3, LSL #+2]
    238                }
    239              }
   \                     ??send_all_queued_sicslowpan_packets_2: (+1)
   \       0x32   0x1C49             ADDS     R1,R1,#+1
   \       0x34   0xE7E8             B.N      ??send_all_queued_sicslowpan_packets_0
    240              siclowpanPakcetsIndex = 0;
   \                     ??send_all_queued_sicslowpan_packets_1: (+1)
   \       0x36   0x2300             MOVS     R3,#+0
   \       0x38   0x7013             STRB     R3,[R2, #+0]
    241          #endif
    242          }
   \       0x3A   0xBC10             POP      {R4}
   \       0x3C   0x4770             BX       LR
    243          /*---------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    244          static uint8_t ping_event_handler(l3_process_event_t ev, l3_process_data_t data)
    245          {
   \                     ping_event_handler: (+1)
   \        0x0   0xB538             PUSH     {R3-R5,LR}
   \        0x2   0x0005             MOVS     R5,R0
   \        0x4   0x000C             MOVS     R4,R1
    246              if ( ev == L3_PROCESS_EVENT_TIMER )
   \        0x6   0x0028             MOVS     R0,R5
   \        0x8   0xB2C0             UXTB     R0,R0
   \        0xA   0x2888             CMP      R0,#+136
   \        0xC   0xD10A             BNE.N    ??ping_event_handler_0
    247              {
    248                if(data == &ping6_periodic_timer &&
    249                l3_etimer_expired(&ping6_periodic_timer)) 
   \        0xE   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \       0x12   0x4284             CMP      R4,R0
   \       0x14   0xD12A             BNE.N    ??ping_event_handler_1
   \       0x16   0x.... 0x....      BL       l3_etimer_expired
   \       0x1A   0x2800             CMP      R0,#+0
   \       0x1C   0xD026             BEQ.N    ??ping_event_handler_1
    250                {
    251                  process_timer_expiry();                         
   \       0x1E   0x.... 0x....      BL       process_timer_expiry
   \       0x22   0xE023             B.N      ??ping_event_handler_1
    252                }
    253              }
    254              else if ( ev == tcpip_icmp6_event )
   \                     ??ping_event_handler_0: (+1)
   \       0x24   0x0028             MOVS     R0,R5
   \       0x26   0x.... 0x....      LDR.W    R1,??DataTable15_3
   \       0x2A   0x7809             LDRB     R1,[R1, #+0]
   \       0x2C   0xB2C0             UXTB     R0,R0
   \       0x2E   0x4288             CMP      R0,R1
   \       0x30   0xD11C             BNE.N    ??ping_event_handler_1
    255              {
    256                if(( *(uint8_t *)data == ICMP6_ECHO_REPLY )|| ( *(uint8_t *)data == ICMP6_ECHO_REQUEST ))
   \       0x32   0x7820             LDRB     R0,[R4, #+0]
   \       0x34   0x2881             CMP      R0,#+129
   \       0x36   0xD002             BEQ.N    ??ping_event_handler_2
   \       0x38   0x7820             LDRB     R0,[R4, #+0]
   \       0x3A   0x2880             CMP      R0,#+128
   \       0x3C   0xD102             BNE.N    ??ping_event_handler_3
    257                {        
    258                  process_echo();
   \                     ??ping_event_handler_2: (+1)
   \       0x3E   0x.... 0x....      BL       process_echo
   \       0x42   0xE013             B.N      ??ping_event_handler_1
    259                }
    260                else if ( (*(uint8_t *)data == ICMP6_NA ) || (*(uint8_t *)data == ICMP6_NS ) )
   \                     ??ping_event_handler_3: (+1)
   \       0x44   0x7820             LDRB     R0,[R4, #+0]
   \       0x46   0x2888             CMP      R0,#+136
   \       0x48   0xD002             BEQ.N    ??ping_event_handler_4
   \       0x4A   0x7820             LDRB     R0,[R4, #+0]
   \       0x4C   0x2887             CMP      R0,#+135
   \       0x4E   0xD102             BNE.N    ??ping_event_handler_5
    261                {
    262                  process_nans();
   \                     ??ping_event_handler_4: (+1)
   \       0x50   0x.... 0x....      BL       process_nans
   \       0x54   0xE00A             B.N      ??ping_event_handler_1
    263                } 
    264                else if ((*(uint8_t *)data) == ICMP6_DST_UNREACH)
   \                     ??ping_event_handler_5: (+1)
   \       0x56   0x7820             LDRB     R0,[R4, #+0]
   \       0x58   0x2801             CMP      R0,#+1
   \       0x5A   0xD102             BNE.N    ??ping_event_handler_6
    265                {
    266                  process_dest_unreachable_msg();
   \       0x5C   0x.... 0x....      BL       process_dest_unreachable_msg
   \       0x60   0xE004             B.N      ??ping_event_handler_1
    267                }
    268                else if ( (*(uint8_t *)data) == ICMP6_PARAM_PROB )
   \                     ??ping_event_handler_6: (+1)
   \       0x62   0x7820             LDRB     R0,[R4, #+0]
   \       0x64   0x2804             CMP      R0,#+4
   \       0x66   0xD101             BNE.N    ??ping_event_handler_1
    269                {
    270                  process_para_problem_msg();
   \       0x68   0x.... 0x....      BL       process_para_problem_msg
    271                }
    272              }
    273              return 0;
   \                     ??ping_event_handler_1: (+1)
   \       0x6C   0x2000             MOVS     R0,#+0
   \       0x6E   0xBD32             POP      {R1,R4,R5,PC}
    274          }
    275          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    276          static void process_timer_expiry(void)
    277          {
   \                     process_timer_expiry: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
    278              /* set identifier and sequence number to 0 */
    279              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN, 0x00, 4);     
   \        0x4   0x2404             MOVS     R4,#+4
   \        0x6   0x2500             MOVS     R5,#+0
   \        0x8   0x.... 0x....      LDR.W    R6,??DataTable15_4
   \        0xC   0x.... 0x....      LDR.W    R7,??DataTable15_5
   \       0x10   0x7830             LDRB     R0,[R6, #+0]
   \       0x12   0x4438             ADD      R0,R7,R0
   \       0x14   0xF110 0x082C      ADDS     R8,R0,#+44
   \       0x18   0x002A             MOVS     R2,R5
   \       0x1A   0x0021             MOVS     R1,R4
   \       0x1C   0x4640             MOV      R0,R8
   \       0x1E   0x.... 0x....      BL       __aeabi_memset
    280              /* reset icmpv6 data */
    281              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/ + 2/*seqno*/,
    282                      0x00, PING6_DATALEN);  
   \       0x22   0x.... 0x....      LDR.W    R8,??DataTable15_6
   \       0x26   0xF8B8 0x0020      LDRH     R0,[R8, #+32]
   \       0x2A   0x9001             STR      R0,[SP, #+4]
   \       0x2C   0xF05F 0x0B00      MOVS     R11,#+0
   \       0x30   0x7830             LDRB     R0,[R6, #+0]
   \       0x32   0x4438             ADD      R0,R7,R0
   \       0x34   0xF110 0x0930      ADDS     R9,R0,#+48
   \       0x38   0x465A             MOV      R2,R11
   \       0x3A   0x9901             LDR      R1,[SP, #+4]
   \       0x3C   0x4648             MOV      R0,R9
   \       0x3E   0x.... 0x....      BL       __aeabi_memset
    283              
    284              /* copy icmpv6 data */
    285              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/ + 2/*seqno*/, 
    286                     echo_config.p_echo_data, echo_config.echo_data_len);    
   \       0x42   0xF8B8 0x9020      LDRH     R9,[R8, #+32]
   \       0x46   0xF8D8 0xA024      LDR      R10,[R8, #+36]
   \       0x4A   0x7830             LDRB     R0,[R6, #+0]
   \       0x4C   0x4438             ADD      R0,R7,R0
   \       0x4E   0xF110 0x0630      ADDS     R6,R0,#+48
   \       0x52   0x464A             MOV      R2,R9
   \       0x54   0x4651             MOV      R1,R10
   \       0x56   0x0030             MOVS     R0,R6
   \       0x58   0x.... 0x....      BL       __aeabi_memcpy
    287          
    288              uip_icmp6_send(&(echo_config.dest_ip_addr), ICMP6_ECHO_REQUEST, 0x00/*code*/, 
    289                             echo_config.echo_data_len + 2/*id*/ + 2/*seqno*/,echo_config.hop_limit);
   \       0x5C   0xF898 0x002B      LDRB     R0,[R8, #+43]
   \       0x60   0x9000             STR      R0,[SP, #+0]
   \       0x62   0xF8B8 0x3020      LDRH     R3,[R8, #+32]
   \       0x66   0x1D1B             ADDS     R3,R3,#+4
   \       0x68   0x2200             MOVS     R2,#+0
   \       0x6A   0x2180             MOVS     R1,#+128
   \       0x6C   0xF118 0x0010      ADDS     R0,R8,#+16
   \       0x70   0x.... 0x....      BL       uip_icmp6_send
    290              
    291              l3_etimer_stop( &ping6_periodic_timer );
   \       0x74   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \       0x78   0x.... 0x....      BL       l3_etimer_stop
    292              return;
   \       0x7C   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}
    293          }
    294          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    295          L3_PROCESS_THREAD(ping6_process, ev, data)
    296          {
   \                     process_thread_ping6_process: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
   \        0x2   0x0004             MOVS     R4,R0
   \        0x4   0x000D             MOVS     R5,R1
   \        0x6   0x0016             MOVS     R6,R2
    297            L3_PROCESS_BEGIN();
   \        0x8   0x2701             MOVS     R7,#+1
   \        0xA   0x8820             LDRH     R0,[R4, #+0]
   \        0xC   0x2800             CMP      R0,#+0
   \        0xE   0xD003             BEQ.N    ??process_thread_ping6_process_0
   \       0x10   0xF5B0 0x7F98      CMP      R0,#+304
   \       0x14   0xD00F             BEQ.N    ??process_thread_ping6_process_1
   \       0x16   0xE01A             B.N      ??process_thread_ping6_process_2
    298            PRINTF("In Process PING6\n");
    299            PRINTF("Wait for DAD\n");
    300            icmp6_new(NULL);
   \                     ??process_thread_ping6_process_0: (+1)
   \       0x18   0x2000             MOVS     R0,#+0
   \       0x1A   0x.... 0x....      BL       icmp6_new
    301            echo_config.sequence_number = 0x00;
   \       0x1E   0x.... 0x....      LDR.W    R0,??DataTable15_6
   \       0x22   0x2100             MOVS     R1,#+0
   \       0x24   0x85C1             STRH     R1,[R0, #+46]
    302            echo_config.identifier = ECHO_PKT_IDENTIFIER;
   \       0x26   0xF241 0x2112      MOVW     R1,#+4626
   \       0x2A   0x8581             STRH     R1,[R0, #+44]
    303            while(1) {
    304              L3_PROCESS_YIELD();
   \                     ??process_thread_ping6_process_3: (+1)
   \       0x2C   0x2000             MOVS     R0,#+0
   \       0x2E   0x0007             MOVS     R7,R0
   \       0x30   0xF44F 0x7098      MOV      R0,#+304
   \       0x34   0x8020             STRH     R0,[R4, #+0]
   \                     ??process_thread_ping6_process_1: (+1)
   \       0x36   0x0038             MOVS     R0,R7
   \       0x38   0xB2C0             UXTB     R0,R0
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD101             BNE.N    ??process_thread_ping6_process_4
   \       0x3E   0x2001             MOVS     R0,#+1
   \       0x40   0xE009             B.N      ??process_thread_ping6_process_5
    305              ping_event_handler(ev, data);
   \                     ??process_thread_ping6_process_4: (+1)
   \       0x42   0x0031             MOVS     R1,R6
   \       0x44   0x0028             MOVS     R0,R5
   \       0x46   0xB2C0             UXTB     R0,R0
   \       0x48   0x.... 0x....      BL       ping_event_handler
   \       0x4C   0xE7EE             B.N      ??process_thread_ping6_process_3
    306            }
    307          
    308            PRINTF("END PING6\n");
    309            L3_PROCESS_END();
   \                     ??process_thread_ping6_process_2: (+1)
   \       0x4E   0x2100             MOVS     R1,#+0
   \       0x50   0x2000             MOVS     R0,#+0
   \       0x52   0x8020             STRH     R0,[R4, #+0]
   \       0x54   0x2003             MOVS     R0,#+3
   \                     ??process_thread_ping6_process_5: (+1)
   \       0x56   0xBDF2             POP      {R1,R4-R7,PC}
    310          }
    311          /*----------------------------------------------------------------------------*/ 

   \                                 In section .text, align 2, keep-with-next
    312          void trigger_echo_request( uint8_t* p_buff  )
    313          {
    314          #if 0
    315              uint16_t index = 0;
    316              uip_lladdr_t ll_add;
    317              enet_msg_t* msg = NULL;
    318              rpl_dag_t *dag;
    319              uint16_t prefix_id;
    320              uint8_t addr_opt = p_buff[3];
    321              index += 4;
    322              uint8_t* self_ieee_addr = get_self_address();
    323              
    324              if( p_buff != NULL ){
    325                
    326                dag = rpl_get_any_dag();//current dag
    327                if(dag == NULL)
    328                  return;
    329                
    330                if(addr_opt == 0x00)//global
    331                  prefix_id = UIP_HTONS(0x2001);
    332          
    333                if(addr_opt == 0x01)//link local
    334                  prefix_id = UIP_HTONS(0xfe80);
    335          
    336                if(addr_opt == 0x02){//multicast
    337                  uip_create_linklocal_rplnodes_mcast(&(echo_config.dest_ip_addr));
    338                  index += 8;
    339                  goto send;
    340                }
    341                
    342                memcpy(ll_add.addr,&(p_buff[index]),8);
    343                index += 8;
    344                              
    345                if(!memcmp(ll_add.addr, self_ieee_addr, 8))
    346                  return;//requesting to self address error
    347                
    348                uip_create_prefix(&(echo_config.dest_ip_addr), prefix_id);
    349                uip_ds6_set_addr_iid(&(echo_config.dest_ip_addr), &ll_add);              
    350           
    351          send:      
    352                //echo_config.echo_data_len = get_ushort_BE(&(p_buff[index]));
    353                //(((ushort)*((bp)+1))+((ushort)(*(bp))<<8))
    354                echo_config.echo_data_len = p_buff[index++];
    355                echo_config.echo_data_len = echo_config.echo_data_len<<8;
    356                echo_config.echo_data_len |=  p_buff[index++];
    357                msg = allocate_hif_msg( echo_config.echo_data_len );
    358                uint8_t* buf = msg->data;	
    359          
    360                if( msg != NULL )
    361                {
    362                  // copy echo data to be transmitted
    363                  memcpy(buf,&(p_buff[index]),echo_config.echo_data_len);       
    364                  echo_config.p_echo_data = msg;
    365                }
    366                index += echo_config.echo_data_len;
    367                
    368                //currently not using for FAN
    369                echo_config.echo_data_pattern = 0x00;
    370                echo_config.err_config_id = 0x00;
    371                echo_config.err_config_data_len = 0x00;      
    372                L3_PROCESS_CONTEXT_BEGIN(&ping6_process);
    373                l3_etimer_set(&ping6_periodic_timer, 1*CLOCK_SECOND);
    374                L3_PROCESS_CONTEXT_END(&ping6_process);
    375              } 
    376          #endif    
    377          } 
   \                     trigger_echo_request: (+1)
   \        0x0   0x4770             BX       LR
    378          /*----------------------------------------------------------------------------*/
    379          

   \                                 In section .text, align 2, keep-with-next
    380          static void process_dest_unreachable_msg(void)
    381          {
   \                     process_dest_unreachable_msg: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    382              send_all_queued_sicslowpan_packets();
   \        0x2   0x.... 0x....      BL       send_all_queued_sicslowpan_packets
    383              p_icmp_packet = UIP_ICMP_BUF;
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable15_7
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \        0xE   0x.... 0x....      LDR.W    R2,??DataTable15_4
   \       0x12   0x7812             LDRB     R2,[R2, #+0]
   \       0x14   0x4411             ADD      R1,R1,R2
   \       0x16   0x3128             ADDS     R1,R1,#+40
   \       0x18   0x6001             STR      R1,[R0, #+0]
    384              gu2pcapp_send_dest_unreachable_icmp_ind
    385                                                    (
    386                                                    p_icmp_packet->type, //type
    387                                                    p_icmp_packet->icode,//uint8_t code, 
    388                                                    p_icmp_packet->icmpchksum,//uint16_t checksum
    389                                                    0,
    390                                                    NULL
    391                                                    );
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x9100             STR      R1,[SP, #+0]
   \       0x1E   0x2300             MOVS     R3,#+0
   \       0x20   0x6801             LDR      R1,[R0, #+0]
   \       0x22   0x884A             LDRH     R2,[R1, #+2]
   \       0x24   0x6801             LDR      R1,[R0, #+0]
   \       0x26   0x7849             LDRB     R1,[R1, #+1]
   \       0x28   0x6800             LDR      R0,[R0, #+0]
   \       0x2A   0x7800             LDRB     R0,[R0, #+0]
   \       0x2C   0x.... 0x....      BL       gu2pcapp_send_dest_unreachable_icmp_ind
    392          }
   \       0x30   0xBD01             POP      {R0,PC}
    393          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    394          static void process_para_problem_msg( void )
    395          {
   \                     process_para_problem_msg: (+1)
   \        0x0   0xB580             PUSH     {R7,LR}
    396              send_all_queued_sicslowpan_packets();
   \        0x2   0x.... 0x....      BL       send_all_queued_sicslowpan_packets
    397              p_icmp_packet = UIP_ICMP_BUF;
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable15_7
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \        0xE   0x.... 0x....      LDR.W    R2,??DataTable15_4
   \       0x12   0x7812             LDRB     R2,[R2, #+0]
   \       0x14   0x4411             ADD      R1,R1,R2
   \       0x16   0x3128             ADDS     R1,R1,#+40
   \       0x18   0x6001             STR      R1,[R0, #+0]
    398              gu2pcapp_process_para_problem_msg_ind(
    399                                                    p_icmp_packet->type, //type
    400                                                    p_icmp_packet->icode,//uint8_t code, 
    401                                                    p_icmp_packet->icmpchksum,//uint16_t checksum
    402                                                    0,
    403                                                    NULL
    404                                                    );
   \       0x1A   0x2100             MOVS     R1,#+0
   \       0x1C   0x9100             STR      R1,[SP, #+0]
   \       0x1E   0x2300             MOVS     R3,#+0
   \       0x20   0x6801             LDR      R1,[R0, #+0]
   \       0x22   0x884A             LDRH     R2,[R1, #+2]
   \       0x24   0x6801             LDR      R1,[R0, #+0]
   \       0x26   0x7849             LDRB     R1,[R1, #+1]
   \       0x28   0x6800             LDR      R0,[R0, #+0]
   \       0x2A   0x7800             LDRB     R0,[R0, #+0]
   \       0x2C   0x.... 0x....      BL       gu2pcapp_process_para_problem_msg_ind
    405          }
   \       0x30   0xBD01             POP      {R0,PC}
    406          /*----------------------------------------------------------------------------*/
    407          uint8_t get_uncomp_hdr_len (void);

   \                                 In section .text, align 2, keep-with-next
    408          static void process_echo( void )
    409          {
   \                     process_echo: (+1)
   \        0x0   0xE92D 0x41FF      PUSH     {R0-R8,LR}
    410              uint16_t echo_id = 0;
   \        0x4   0x2400             MOVS     R4,#+0
    411              uint16_t echo_seq_num = 0;
   \        0x6   0x2500             MOVS     R5,#+0
    412          #ifdef ENET_GOLDEN_UNIT
    413              send_all_queued_sicslowpan_packets();
    414          #endif
    415              p_icmp_packet = UIP_ICMP_BUF;
   \        0x8   0x.... 0x....      LDR.W    R8,??DataTable15_7
   \        0xC   0x.... 0x....      LDR.W    R0,??DataTable15_5
   \       0x10   0x.... 0x....      LDR.W    R1,??DataTable15_4
   \       0x14   0x7809             LDRB     R1,[R1, #+0]
   \       0x16   0x4408             ADD      R0,R0,R1
   \       0x18   0x3028             ADDS     R0,R0,#+40
   \       0x1A   0xF8C8 0x0000      STR      R0,[R8, #+0]
    416              echo_id = get_ushort_BE((((uint8_t*)p_icmp_packet)+4));
   \       0x1E   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x22   0x7940             LDRB     R0,[R0, #+5]
   \       0x24   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x28   0x7909             LDRB     R1,[R1, #+4]
   \       0x2A   0x0209             LSLS     R1,R1,#+8
   \       0x2C   0x180E             ADDS     R6,R1,R0
    417              echo_seq_num = get_ushort_BE((((uint8_t*)p_icmp_packet)+6));
   \       0x2E   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x32   0x79C0             LDRB     R0,[R0, #+7]
   \       0x34   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x38   0x7989             LDRB     R1,[R1, #+6]
   \       0x3A   0x0209             LSLS     R1,R1,#+8
   \       0x3C   0x180F             ADDS     R7,R1,R0
    418                   
    419              gu2pcapp_send_echo_req_res(
    420                                        p_icmp_packet->type, //type
    421                                        p_icmp_packet->icode,//uint8_t code, 
    422                                        p_icmp_packet->icmpchksum,//uint16_t checksum
    423                                        echo_id,
    424                                        echo_seq_num,
    425                                        ( uip_len - (sizeof(struct uip_icmp_hdr) + 4 + get_uncomp_hdr_len() ) ),
    426                                        (((uint8_t*)p_icmp_packet)+8)
    427                                        );
   \       0x3E   0x.... 0x....      BL       get_uncomp_hdr_len
   \       0x42   0xF8D8 0x1000      LDR      R1,[R8, #+0]
   \       0x46   0x3108             ADDS     R1,R1,#+8
   \       0x48   0x9102             STR      R1,[SP, #+8]
   \       0x4A   0x.... 0x....      LDR.W    R1,??DataTable15_8
   \       0x4E   0x8809             LDRH     R1,[R1, #+0]
   \       0x50   0xB2C0             UXTB     R0,R0
   \       0x52   0x1A08             SUBS     R0,R1,R0
   \       0x54   0x3808             SUBS     R0,R0,#+8
   \       0x56   0xB280             UXTH     R0,R0
   \       0x58   0x9001             STR      R0,[SP, #+4]
   \       0x5A   0x0038             MOVS     R0,R7
   \       0x5C   0xB280             UXTH     R0,R0
   \       0x5E   0x9000             STR      R0,[SP, #+0]
   \       0x60   0x0033             MOVS     R3,R6
   \       0x62   0xB29B             UXTH     R3,R3
   \       0x64   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x68   0x8842             LDRH     R2,[R0, #+2]
   \       0x6A   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x6E   0x7841             LDRB     R1,[R0, #+1]
   \       0x70   0xF8D8 0x0000      LDR      R0,[R8, #+0]
   \       0x74   0x7800             LDRB     R0,[R0, #+0]
   \       0x76   0x.... 0x....      BL       gu2pcapp_send_echo_req_res
    428              
    429              if( p_icmp_packet->type == 0x81)
    430              {
    431          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    432                if((edfe_information.edfe_frame_enabled == 0x01) && (echo_config.counter == 0x00))
    433                {
    434                  enable_disable_edfe_frame(1,FINAL_RESPONSE_FRAME);
    435                  send_edfe_initial_frame(edfe_information.edfe_ini_mac_addr ,1,FINAL_RESPONSE_FRAME);
    436                  echo_config.counter  = 0x00;
    437                  edfe_information.edfe_trigger_packt = 0x00;
    438                }
    439          #endif
    440              }
    441              //red_led_off();  
    442          }
   \       0x7A   0xE8BD 0x81FF      POP      {R0-R8,PC}
    443          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    444          static uint8_t process_nans( void )
    445          {
   \                     process_nans: (+1)
   \        0x0   0xB5F8             PUSH     {R3-R7,LR}
    446              send_all_queued_sicslowpan_packets();    
   \        0x2   0x.... 0x....      BL       send_all_queued_sicslowpan_packets
    447              p_icmp_packet = UIP_ICMP_BUF;
   \        0x6   0x.... 0x....      LDR.W    R0,??DataTable15_7
   \        0xA   0x.... 0x....      LDR.W    R1,??DataTable15_5
   \        0xE   0x.... 0x....      LDR.W    R2,??DataTable15_4
   \       0x12   0x7812             LDRB     R2,[R2, #+0]
   \       0x14   0x4411             ADD      R1,R1,R2
   \       0x16   0x3128             ADDS     R1,R1,#+40
   \       0x18   0x6001             STR      R1,[R0, #+0]
    448          
    449              if(p_icmp_packet->type == ICMP6_NA)
   \       0x1A   0x6801             LDR      R1,[R0, #+0]
   \       0x1C   0x7809             LDRB     R1,[R1, #+0]
   \       0x1E   0x2988             CMP      R1,#+136
   \       0x20   0xD116             BNE.N    ??process_nans_0
    450              {
    451                gu2pcapp_send_na_ind(p_icmp_packet->type,
    452                                    p_icmp_packet->icode,
    453                                    p_icmp_packet->icmpchksum,
    454                                    *(((uint8_t*)p_icmp_packet)+4),
    455                                    (uip_ipaddr_t*) (((uint8_t*)p_icmp_packet)+8),
    456                                    *(((uint8_t*)p_icmp_packet)+24),
    457                                    *(((uint8_t*)p_icmp_packet)+25),
    458                                    (uip_lladdr_t*) (((uint8_t*)p_icmp_packet)+26)
    459                                    );
   \       0x22   0x6801             LDR      R1,[R0, #+0]
   \       0x24   0x311A             ADDS     R1,R1,#+26
   \       0x26   0x9103             STR      R1,[SP, #+12]
   \       0x28   0x6801             LDR      R1,[R0, #+0]
   \       0x2A   0x7E49             LDRB     R1,[R1, #+25]
   \       0x2C   0x9102             STR      R1,[SP, #+8]
   \       0x2E   0x6801             LDR      R1,[R0, #+0]
   \       0x30   0x7E09             LDRB     R1,[R1, #+24]
   \       0x32   0x9101             STR      R1,[SP, #+4]
   \       0x34   0x6801             LDR      R1,[R0, #+0]
   \       0x36   0x3108             ADDS     R1,R1,#+8
   \       0x38   0x9100             STR      R1,[SP, #+0]
   \       0x3A   0x6801             LDR      R1,[R0, #+0]
   \       0x3C   0x790B             LDRB     R3,[R1, #+4]
   \       0x3E   0x6801             LDR      R1,[R0, #+0]
   \       0x40   0x884A             LDRH     R2,[R1, #+2]
   \       0x42   0x6801             LDR      R1,[R0, #+0]
   \       0x44   0x7849             LDRB     R1,[R1, #+1]
   \       0x46   0x6800             LDR      R0,[R0, #+0]
   \       0x48   0x7800             LDRB     R0,[R0, #+0]
   \       0x4A   0x.... 0x....      BL       gu2pcapp_send_na_ind
   \       0x4E   0xE013             B.N      ??process_nans_1
    460              }
    461              else
    462              {
    463                gu2pcapp_send_ns_ind(p_icmp_packet->type,
    464                                    p_icmp_packet->icode,
    465                                    p_icmp_packet->icmpchksum,
    466                                    //*(((uint8_t*)p_icmp_packet)+4),
    467                                    (uip_ipaddr_t*) (((uint8_t*)p_icmp_packet)+8),
    468                                    *(((uint8_t*)p_icmp_packet)+24),
    469                                    *(((uint8_t*)p_icmp_packet)+25),
    470                                    (uip_lladdr_t*) (((uint8_t*)p_icmp_packet)+26)
    471                                    );
   \                     ??process_nans_0: (+1)
   \       0x50   0x6801             LDR      R1,[R0, #+0]
   \       0x52   0x311A             ADDS     R1,R1,#+26
   \       0x54   0x9102             STR      R1,[SP, #+8]
   \       0x56   0x6801             LDR      R1,[R0, #+0]
   \       0x58   0x7E49             LDRB     R1,[R1, #+25]
   \       0x5A   0x9101             STR      R1,[SP, #+4]
   \       0x5C   0x6801             LDR      R1,[R0, #+0]
   \       0x5E   0x7E09             LDRB     R1,[R1, #+24]
   \       0x60   0x9100             STR      R1,[SP, #+0]
   \       0x62   0x6801             LDR      R1,[R0, #+0]
   \       0x64   0xF111 0x0308      ADDS     R3,R1,#+8
   \       0x68   0x6801             LDR      R1,[R0, #+0]
   \       0x6A   0x884A             LDRH     R2,[R1, #+2]
   \       0x6C   0x6801             LDR      R1,[R0, #+0]
   \       0x6E   0x7849             LDRB     R1,[R1, #+1]
   \       0x70   0x6800             LDR      R0,[R0, #+0]
   \       0x72   0x7800             LDRB     R0,[R0, #+0]
   \       0x74   0x.... 0x....      BL       gu2pcapp_send_ns_ind
    472              }    
    473          
    474              return 0;
   \                     ??process_nans_1: (+1)
   \       0x78   0x2000             MOVS     R0,#+0
   \       0x7A   0xB005             ADD      SP,SP,#+20
   \       0x7C   0xBD00             POP      {PC}
    475          }
    476          
    477          /*---------------------------------------------------------------------------*/
    478          //Suneet :: send ping when external intrrupt is trigger

   \                                 In section .text, align 2, keep-with-next
    479          void explicit_trigger_echo_request(uip_ipaddr_t* dest_ip_addr){
   \                     explicit_trigger_echo_request: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xF5AD 0x6DA0      SUB      SP,SP,#+1280
   \        0x8   0xB0B7             SUB      SP,SP,#+220
   \        0xA   0x0004             MOVS     R4,R0
    480          
    481              uint16_t datalen = 1232;
   \        0xC   0xF44F 0x699A      MOV      R9,#+1232
   \       0x10   0xF240 0x51DC      MOVW     R1,#+1500
   \       0x14   0x2200             MOVS     R2,#+0
   \       0x16   0x466D             MOV      R5,SP
   \       0x18   0x0028             MOVS     R0,R5
   \       0x1A   0x.... 0x....      BL       __aeabi_memset
    482              uint8_t data[MAX_UDP_LENGTH_SUPPORT/*1024*/] = {0x00};     
    483          
    484              if(datalen > MAX_UDP_LENGTH_SUPPORT)
   \       0x1E   0x4649             MOV      R1,R9
   \       0x20   0xB289             UXTH     R1,R1
   \       0x22   0xF240 0x50DD      MOVW     R0,#+1501
   \       0x26   0x4281             CMP      R1,R0
   \       0x28   0xDA40             BGE.N    ??explicit_trigger_echo_request_0
    485                return;
    486             
    487          //#if AUTO_CONFIG_ENABLE      // Raka [ 02- Dec-2017]
    488              memset(data, temp_buf_set, datalen);
   \                     ??explicit_trigger_echo_request_1: (+1)
   \       0x2A   0x464D             MOV      R5,R9
   \       0x2C   0xB2AD             UXTH     R5,R5
   \       0x2E   0x.... 0x....      LDR.W    R6,??DataTable15_9
   \       0x32   0x7837             LDRB     R7,[R6, #+0]
   \       0x34   0x46E8             MOV      R8,SP
   \       0x36   0x003A             MOVS     R2,R7
   \       0x38   0x0029             MOVS     R1,R5
   \       0x3A   0x4640             MOV      R0,R8
   \       0x3C   0x.... 0x....      BL       __aeabi_memset
    489              data[datalen-1] = 0x2f;//for getting the last byte
   \       0x40   0x202F             MOVS     R0,#+47
   \       0x42   0x466A             MOV      R2,SP
   \       0x44   0x4649             MOV      R1,R9
   \       0x46   0xB289             UXTH     R1,R1
   \       0x48   0x4411             ADD      R1,R2,R1
   \       0x4A   0xF801 0x0C01      STRB     R0,[R1, #-1]
    490              temp_buf_set+=1;
   \       0x4E   0x7830             LDRB     R0,[R6, #+0]
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0x7030             STRB     R0,[R6, #+0]
    491          //#else    
    492          //    memset(data, 0xaa, datalen);
    493          //    data[datalen-1] = 0x2f;//for getting the last byte    
    494          //#endif
    495                  
    496              if( dest_ip_addr != NULL ){    
   \       0x54   0x2C00             CMP      R4,#+0
   \       0x56   0xD029             BEQ.N    ??explicit_trigger_echo_request_2
    497                memcpy(&(echo_config.dest_ip_addr), (uip_ipaddr_t*)dest_ip_addr, 16);     
   \       0x58   0x2510             MOVS     R5,#+16
   \       0x5A   0x46A3             MOV      R11,R4
   \       0x5C   0x.... 0x....      LDR.W    R7,??DataTable15_6
   \       0x60   0xF117 0x0610      ADDS     R6,R7,#+16
   \       0x64   0x002A             MOVS     R2,R5
   \       0x66   0x4659             MOV      R1,R11
   \       0x68   0x0030             MOVS     R0,R6
   \       0x6A   0x.... 0x....      BL       __aeabi_memcpy
    498          
    499                echo_config.echo_data_len = datalen;
   \       0x6E   0xF8A7 0x9020      STRH     R9,[R7, #+32]
    500          
    501                echo_config.p_echo_data = app_bm_alloc( echo_config.echo_data_len );
   \       0x72   0x8C38             LDRH     R0,[R7, #+32]
   \       0x74   0x.... 0x....      BL       app_bm_alloc
   \       0x78   0x6278             STR      R0,[R7, #+36]
    502                //copy echo data to be transmitted
    503                memcpy(echo_config.p_echo_data, data, echo_config.echo_data_len);       
   \       0x7A   0xF8B7 0xA020      LDRH     R10,[R7, #+32]
   \       0x7E   0x466E             MOV      R6,SP
   \       0x80   0x6A7F             LDR      R7,[R7, #+36]
   \       0x82   0x4652             MOV      R2,R10
   \       0x84   0x0031             MOVS     R1,R6
   \       0x86   0x0038             MOVS     R0,R7
   \       0x88   0x.... 0x....      BL       __aeabi_memcpy
    504          
    505                L3_PROCESS_CONTEXT_BEGIN(&ping6_process);
   \       0x8C   0x.... 0x....      LDR.W    R7,??DataTable15_10
   \       0x90   0xF8D7 0x8000      LDR      R8,[R7, #+0]
   \       0x94   0x.... 0x....      LDR.W    R0,??DataTable15_11
   \       0x98   0x6038             STR      R0,[R7, #+0]
    506                //10*CLOCK_SECOND: for 28 hops in 50Kbps, FAN_TPS1v07
    507                l3_etimer_set(&ping6_periodic_timer, 10*CLOCK_SECOND);
   \       0x9A   0xF242 0x7210      MOVW     R2,#+10000
   \       0x9E   0x2300             MOVS     R3,#+0
   \       0xA0   0x.... 0x....      LDR.W    R0,??DataTable15_2
   \       0xA4   0x.... 0x....      BL       l3_etimer_set
    508                L3_PROCESS_CONTEXT_END(&ping6_process);       
   \       0xA8   0xF8C7 0x8000      STR      R8,[R7, #+0]
    509              }
    510              return;
   \                     ??explicit_trigger_echo_request_2: (+1)
   \                     ??explicit_trigger_echo_request_0: (+1)
   \       0xAC   0xF50D 0x6DA0      ADD      SP,SP,#+1280
   \       0xB0   0xB037             ADD      SP,SP,#+220
   \       0xB2   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    511          }
    512          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    513          void send_icmpv6(uint8_t *buf, uint16_t length)
    514          {        
   \                     send_icmpv6: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \        0x4   0x0005             MOVS     R5,R0
   \        0x6   0x000C             MOVS     R4,R1
    515            memset(&echo_config, 0x00, sizeof(echo_config) - 4);
   \        0x8   0xF05F 0x0A2C      MOVS     R10,#+44
   \        0xC   0xF05F 0x0900      MOVS     R9,#+0
   \       0x10   0x.... 0x....      LDR.W    R8,??DataTable15_6
   \       0x14   0x4646             MOV      R6,R8
   \       0x16   0x464A             MOV      R2,R9
   \       0x18   0x4651             MOV      R1,R10
   \       0x1A   0x0030             MOVS     R0,R6
   \       0x1C   0x.... 0x....      BL       __aeabi_memset
    516            icmv6_counter = 0x00;
   \       0x20   0x2000             MOVS     R0,#+0
   \       0x22   0x.... 0x....      LDR.W    R1,??DataTable15_12
   \       0x26   0x8008             STRH     R0,[R1, #+0]
    517            icmv6_response_counter = 0x00;
   \       0x28   0x2100             MOVS     R1,#+0
   \       0x2A   0x.... 0x....      LDR.W    R0,??DataTable15_13
   \       0x2E   0x8001             STRH     R1,[R0, #+0]
    518            uint16_t index=0;
                            ^
Warning[Pe177]: variable "index" was declared but never referenced
   \       0x30   0x2000             MOVS     R0,#+0
   \       0x32   0xF8AD 0x0004      STRH     R0,[SP, #+4]
    519            uint8_t tag = 0;
   \       0x36   0x2600             MOVS     R6,#+0
    520            uint8_t len = 0;
   \       0x38   0x2700             MOVS     R7,#+0
    521            
    522            while (length)
   \                     ??send_icmpv6_0: (+1)
   \       0x3A   0x0020             MOVS     R0,R4
   \       0x3C   0xB280             UXTH     R0,R0
   \       0x3E   0x2800             CMP      R0,#+0
   \       0x40   0xF000 0x80BD      BEQ.W    ??send_icmpv6_1
    523            {
    524              tag = *buf;
   \       0x44   0x7828             LDRB     R0,[R5, #+0]
   \       0x46   0x0006             MOVS     R6,R0
    525              length -= 1;
   \       0x48   0x1E64             SUBS     R4,R4,#+1
    526              buf += 1;
   \       0x4A   0x1C6D             ADDS     R5,R5,#+1
    527              switch (tag)
   \       0x4C   0x0030             MOVS     R0,R6
   \       0x4E   0xB2C0             UXTB     R0,R0
   \       0x50   0x2814             CMP      R0,#+20
   \       0x52   0xD00B             BEQ.N    ??send_icmpv6_2
   \       0x54   0xD3F1             BCC.N    ??send_icmpv6_0
   \       0x56   0x2816             CMP      R0,#+22
   \       0x58   0xD033             BEQ.N    ??send_icmpv6_3
   \       0x5A   0xD31C             BCC.N    ??send_icmpv6_4
   \       0x5C   0x2818             CMP      R0,#+24
   \       0x5E   0xD066             BEQ.N    ??send_icmpv6_5
   \       0x60   0xD342             BCC.N    ??send_icmpv6_6
   \       0x62   0x281A             CMP      R0,#+26
   \       0x64   0xF000 0x8092      BEQ.W    ??send_icmpv6_7
   \       0x68   0xD377             BCC.N    ??send_icmpv6_8
   \       0x6A   0xE7E6             B.N      ??send_icmpv6_0
    528              {
    529              case ICMPV6_PING_SRC_ADDR:
    530                len = *buf;
   \                     ??send_icmpv6_2: (+1)
   \       0x6C   0x7828             LDRB     R0,[R5, #+0]
   \       0x6E   0x0007             MOVS     R7,R0
    531                length -= 1;
   \       0x70   0x1E64             SUBS     R4,R4,#+1
    532                buf += 1;
   \       0x72   0x1C6D             ADDS     R5,R5,#+1
    533                memcpy(&echo_config.src_ip_addr.u8, buf, len);
   \       0x74   0x46BA             MOV      R10,R7
   \       0x76   0xFA5F 0xFA8A      UXTB     R10,R10
   \       0x7A   0x46A9             MOV      R9,R5
   \       0x7C   0x46C3             MOV      R11,R8
   \       0x7E   0x4652             MOV      R2,R10
   \       0x80   0x4649             MOV      R1,R9
   \       0x82   0x4658             MOV      R0,R11
   \       0x84   0x.... 0x....      BL       __aeabi_memcpy
    534                length -= len;
   \       0x88   0x0038             MOVS     R0,R7
   \       0x8A   0xB2C0             UXTB     R0,R0
   \       0x8C   0x1A24             SUBS     R4,R4,R0
    535                buf += len;
   \       0x8E   0x0038             MOVS     R0,R7
   \       0x90   0xB2C0             UXTB     R0,R0
   \       0x92   0x4405             ADD      R5,R5,R0
    536                break;
   \       0x94   0xE7D1             B.N      ??send_icmpv6_0
    537                
    538              case ICMPV6_PING_DST_ADDR:
    539                len = *buf;
   \                     ??send_icmpv6_4: (+1)
   \       0x96   0x7828             LDRB     R0,[R5, #+0]
   \       0x98   0x0007             MOVS     R7,R0
    540                length -= 1;
   \       0x9A   0x1E64             SUBS     R4,R4,#+1
    541                buf += 1;
   \       0x9C   0x1C6D             ADDS     R5,R5,#+1
    542                memcpy(&echo_config.dest_ip_addr.u8, buf, len);
   \       0x9E   0x46BA             MOV      R10,R7
   \       0xA0   0xFA5F 0xFA8A      UXTB     R10,R10
   \       0xA4   0x46A9             MOV      R9,R5
   \       0xA6   0xF118 0x0B10      ADDS     R11,R8,#+16
   \       0xAA   0x4652             MOV      R2,R10
   \       0xAC   0x4649             MOV      R1,R9
   \       0xAE   0x4658             MOV      R0,R11
   \       0xB0   0x.... 0x....      BL       __aeabi_memcpy
    543                length -= len;
   \       0xB4   0x0038             MOVS     R0,R7
   \       0xB6   0xB2C0             UXTB     R0,R0
   \       0xB8   0x1A24             SUBS     R4,R4,R0
    544                buf += len;
   \       0xBA   0x0038             MOVS     R0,R7
   \       0xBC   0xB2C0             UXTB     R0,R0
   \       0xBE   0x4405             ADD      R5,R5,R0
    545                break;
   \       0xC0   0xE7BB             B.N      ??send_icmpv6_0
    546                
    547              case ICMPV6_PING_HOP_LIMIT:
    548                len = *buf;
   \                     ??send_icmpv6_3: (+1)
   \       0xC2   0x7828             LDRB     R0,[R5, #+0]
   \       0xC4   0x0007             MOVS     R7,R0
    549                length -= 1;
   \       0xC6   0x1E64             SUBS     R4,R4,#+1
    550                buf += 1;
   \       0xC8   0x1C69             ADDS     R1,R5,#+1
    551                if (len == 1)
   \       0xCA   0x0038             MOVS     R0,R7
   \       0xCC   0xB2C0             UXTB     R0,R0
   \       0xCE   0x2801             CMP      R0,#+1
   \       0xD0   0xD102             BNE.N    ??send_icmpv6_9
    552                  echo_config.hop_limit = *buf;
   \       0xD2   0x7808             LDRB     R0,[R1, #+0]
   \       0xD4   0xF888 0x002B      STRB     R0,[R8, #+43]
    553                length -= len;
   \                     ??send_icmpv6_9: (+1)
   \       0xD8   0x0038             MOVS     R0,R7
   \       0xDA   0xB2C0             UXTB     R0,R0
   \       0xDC   0x1A24             SUBS     R4,R4,R0
    554                buf += len;
   \       0xDE   0x0038             MOVS     R0,R7
   \       0xE0   0xB2C0             UXTB     R0,R0
   \       0xE2   0xEB01 0x0500      ADD      R5,R1,R0
    555                break;
   \       0xE6   0xE7A8             B.N      ??send_icmpv6_0
    556                
    557              case ICMPV6_PING_ECHO_DATA:
    558                mem_rev_cpy ((uint8_t *)&echo_config.echo_data_len, buf, 2);
   \                     ??send_icmpv6_6: (+1)
   \       0xE8   0x2202             MOVS     R2,#+2
   \       0xEA   0x0029             MOVS     R1,R5
   \       0xEC   0xF118 0x0020      ADDS     R0,R8,#+32
   \       0xF0   0x.... 0x....      BL       mem_rev_cpy
    559                length -= 2;
   \       0xF4   0x1EA4             SUBS     R4,R4,#+2
    560                buf += 2;
   \       0xF6   0x1CAD             ADDS     R5,R5,#+2
    561                echo_config.p_echo_data = app_bm_alloc (echo_config.echo_data_len);
   \       0xF8   0xF8B8 0x0020      LDRH     R0,[R8, #+32]
   \       0xFC   0x.... 0x....      BL       app_bm_alloc
   \      0x100   0xF8C8 0x0024      STR      R0,[R8, #+36]
    562                if (echo_config.p_echo_data != NULL)
   \      0x104   0xF8D8 0x0024      LDR      R0,[R8, #+36]
   \      0x108   0x2800             CMP      R0,#+0
   \      0x10A   0xD009             BEQ.N    ??send_icmpv6_10
    563                  memcpy (echo_config.p_echo_data, buf, echo_config.echo_data_len);
   \      0x10C   0xF8B8 0x9020      LDRH     R9,[R8, #+32]
   \      0x110   0x46AB             MOV      R11,R5
   \      0x112   0xF8D8 0xA024      LDR      R10,[R8, #+36]
   \      0x116   0x464A             MOV      R2,R9
   \      0x118   0x4659             MOV      R1,R11
   \      0x11A   0x4650             MOV      R0,R10
   \      0x11C   0x.... 0x....      BL       __aeabi_memcpy
    564                length -= echo_config.echo_data_len;
   \                     ??send_icmpv6_10: (+1)
   \      0x120   0xF8B8 0x0020      LDRH     R0,[R8, #+32]
   \      0x124   0x1A24             SUBS     R4,R4,R0
    565                buf += echo_config.echo_data_len;
   \      0x126   0xF8B8 0x0020      LDRH     R0,[R8, #+32]
   \      0x12A   0x4405             ADD      R5,R5,R0
    566                break;
   \      0x12C   0xE785             B.N      ??send_icmpv6_0
    567                  
    568              case ICMPV6_PING_FRAME_EXCHANGE_PATTERN:
    569                len = *buf;
   \                     ??send_icmpv6_5: (+1)
   \      0x12E   0x7828             LDRB     R0,[R5, #+0]
   \      0x130   0x0007             MOVS     R7,R0
    570                length -= 1;
   \      0x132   0x1E64             SUBS     R4,R4,#+1
    571                buf += 1;
   \      0x134   0x1C69             ADDS     R1,R5,#+1
    572                if (len == 1)
   \      0x136   0x0038             MOVS     R0,R7
   \      0x138   0xB2C0             UXTB     R0,R0
   \      0x13A   0x2801             CMP      R0,#+1
   \      0x13C   0xD105             BNE.N    ??send_icmpv6_11
    573                {
    574                  if (*buf == 0x01)
   \      0x13E   0x7808             LDRB     R0,[R1, #+0]
   \      0x140   0x2801             CMP      R0,#+1
   \      0x142   0xD102             BNE.N    ??send_icmpv6_11
    575                  {
    576          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    577                    if(echo_config.echo_data_len > max_frag_size)
    578                    {
    579                      edfe_information.is_fragmented = 0x001;
    580                      enable_disable_edfe_frame(buf[index],0);//frameExchangePattern
    581                    }
    582                    else
    583                    {
    584                      enable_disable_edfe_frame(buf[index],0);//frameExchangePattern
    585                      edfe_information.edfe_trigger_packt = 0x01;
    586                      edfe_information.edfe_sent_pkt = 0x01;
    587                      echo_config.counter = 0x01;
    588                    }
    589          #else
    590                    echo_config.counter = 0x01;
   \      0x144   0x2001             MOVS     R0,#+1
   \      0x146   0xF8A8 0x0028      STRH     R0,[R8, #+40]
    591          #endif
    592                  }
    593                }
    594                length -= len;
   \                     ??send_icmpv6_11: (+1)
   \      0x14A   0x0038             MOVS     R0,R7
   \      0x14C   0xB2C0             UXTB     R0,R0
   \      0x14E   0x1A24             SUBS     R4,R4,R0
    595                buf += len;
   \      0x150   0x0038             MOVS     R0,R7
   \      0x152   0xB2C0             UXTB     R0,R0
   \      0x154   0xEB01 0x0500      ADD      R5,R1,R0
    596                break;
   \      0x158   0xE76F             B.N      ??send_icmpv6_0
    597                
    598              case ICMPV6_PING_IDENTIFIER:
    599                len = *buf;
   \                     ??send_icmpv6_8: (+1)
   \      0x15A   0x7828             LDRB     R0,[R5, #+0]
   \      0x15C   0x0007             MOVS     R7,R0
    600                length -= 1;
   \      0x15E   0x1E64             SUBS     R4,R4,#+1
    601                buf += 1;
   \      0x160   0x1C6D             ADDS     R5,R5,#+1
    602                if (len == 2)
   \      0x162   0x0038             MOVS     R0,R7
   \      0x164   0xB2C0             UXTB     R0,R0
   \      0x166   0x2802             CMP      R0,#+2
   \      0x168   0xD109             BNE.N    ??send_icmpv6_12
    603                  memcpy((uint8_t *)&echo_config.identifier, buf, 2);
   \      0x16A   0xF05F 0x0B02      MOVS     R11,#+2
   \      0x16E   0x46A9             MOV      R9,R5
   \      0x170   0xF118 0x0A2C      ADDS     R10,R8,#+44
   \      0x174   0x465A             MOV      R2,R11
   \      0x176   0x4649             MOV      R1,R9
   \      0x178   0x4650             MOV      R0,R10
   \      0x17A   0x.... 0x....      BL       __aeabi_memcpy
    604                length -= len;
   \                     ??send_icmpv6_12: (+1)
   \      0x17E   0x0038             MOVS     R0,R7
   \      0x180   0xB2C0             UXTB     R0,R0
   \      0x182   0x1A24             SUBS     R4,R4,R0
    605                buf += len;
   \      0x184   0x0038             MOVS     R0,R7
   \      0x186   0xB2C0             UXTB     R0,R0
   \      0x188   0x4405             ADD      R5,R5,R0
    606                break;
   \      0x18A   0xE756             B.N      ??send_icmpv6_0
    607                
    608              case ICMPV6_PING_SEQUENCE_NUMBER:
    609                len = *buf;
   \                     ??send_icmpv6_7: (+1)
   \      0x18C   0x7828             LDRB     R0,[R5, #+0]
   \      0x18E   0x0007             MOVS     R7,R0
    610                length -= 1;
   \      0x190   0x1E64             SUBS     R4,R4,#+1
    611                buf += 1;
   \      0x192   0x1C6D             ADDS     R5,R5,#+1
    612                if (len == 2)
   \      0x194   0x0038             MOVS     R0,R7
   \      0x196   0xB2C0             UXTB     R0,R0
   \      0x198   0x2802             CMP      R0,#+2
   \      0x19A   0xD109             BNE.N    ??send_icmpv6_13
    613                  memcpy((uint8_t *)&echo_config.sequence_number, buf, 2);
   \      0x19C   0xF05F 0x0B02      MOVS     R11,#+2
   \      0x1A0   0x46A9             MOV      R9,R5
   \      0x1A2   0xF118 0x0A2E      ADDS     R10,R8,#+46
   \      0x1A6   0x465A             MOV      R2,R11
   \      0x1A8   0x4649             MOV      R1,R9
   \      0x1AA   0x4650             MOV      R0,R10
   \      0x1AC   0x.... 0x....      BL       __aeabi_memcpy
    614                length -= len;
   \                     ??send_icmpv6_13: (+1)
   \      0x1B0   0x0038             MOVS     R0,R7
   \      0x1B2   0xB2C0             UXTB     R0,R0
   \      0x1B4   0x1A24             SUBS     R4,R4,R0
    615                buf += len;
   \      0x1B6   0x0038             MOVS     R0,R7
   \      0x1B8   0xB2C0             UXTB     R0,R0
   \      0x1BA   0x4405             ADD      R5,R5,R0
    616                break;
   \      0x1BC   0xE73D             B.N      ??send_icmpv6_0
    617              }
    618            }
    619            
    620            uip_ipaddr_t* src_ipaddr = (uip_ipaddr_t*)get_self_global_addr();
   \                     ??send_icmpv6_1: (+1)
   \      0x1BE   0x.... 0x....      BL       get_self_global_addr
   \      0x1C2   0x9000             STR      R0,[SP, #+0]
    621            if(!memcmp(&src_ipaddr,&echo_config.src_ip_addr, 16))
   \      0x1C4   0x2210             MOVS     R2,#+16
   \      0x1C6   0x4641             MOV      R1,R8
   \      0x1C8   0x4668             MOV      R0,SP
   \      0x1CA   0x.... 0x....      BL       memcmp
   \      0x1CE   0x2800             CMP      R0,#+0
   \      0x1D0   0xD00A             BEQ.N    ??send_icmpv6_14
    622              return;//requesting to self address error           
    623            
    624            //sending echo request
    625            uip_icmp6_send_echo_request();
   \                     ??send_icmpv6_15: (+1)
   \      0x1D2   0x.... 0x....      BL       uip_icmp6_send_echo_request
    626          
    627          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    628            edfe_information.edfe_trigger_packt--;
    629            edfe_information.edfe_sent_pkt--;
    630          #endif
    631            
    632            echo_config.counter--;
   \      0x1D6   0xF8B8 0x0028      LDRH     R0,[R8, #+40]
   \      0x1DA   0x1E40             SUBS     R0,R0,#+1
   \      0x1DC   0xF8A8 0x0028      STRH     R0,[R8, #+40]
    633            app_bm_free((uint8_t*)echo_config.p_echo_data);
   \      0x1E0   0xF8D8 0x0024      LDR      R0,[R8, #+36]
   \      0x1E4   0x.... 0x....      BL       app_bm_free
    634            return;
   \                     ??send_icmpv6_14: (+1)
   \      0x1E8   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}
    635          }
    636          
    637          

   \                                 In section .text, align 2, keep-with-next
    638          void send_icmpv6_with_count(uint8_t *buf, uint16_t length)
    639          {
   \                     send_icmpv6_with_count: (+1)
   \        0x0   0xE92D 0x4FF2      PUSH     {R1,R4-R11,LR}
   \        0x4   0xB084             SUB      SP,SP,#+16
   \        0x6   0x0005             MOVS     R5,R0
    640            memset(&echo_config, 0x00,  sizeof(echo_config) - 4);
   \        0x8   0x202C             MOVS     R0,#+44
   \        0xA   0x9003             STR      R0,[SP, #+12]
   \        0xC   0xF05F 0x0800      MOVS     R8,#+0
   \       0x10   0x.... 0x....      LDR.W    R6,??DataTable15_6
   \       0x14   0x0034             MOVS     R4,R6
   \       0x16   0x4642             MOV      R2,R8
   \       0x18   0x9903             LDR      R1,[SP, #+12]
   \       0x1A   0x0020             MOVS     R0,R4
   \       0x1C   0x.... 0x....      BL       __aeabi_memset
    641            icmv6_counter = 0x00;
   \       0x20   0x2100             MOVS     R1,#+0
   \       0x22   0x.... 0x....      LDR.W    R0,??DataTable15_12
   \       0x26   0x8001             STRH     R1,[R0, #+0]
    642            icmv6_response_counter = 0x00;
   \       0x28   0x2100             MOVS     R1,#+0
   \       0x2A   0x.... 0x....      LDR.W    R0,??DataTable15_13
   \       0x2E   0x8001             STRH     R1,[R0, #+0]
    643            uint16_t index=0;    
   \       0x30   0x2400             MOVS     R4,#+0
    644            memcpy(&echo_config.src_ip_addr.u8, &buf[index], 16);
   \       0x32   0x2710             MOVS     R7,#+16
   \       0x34   0x0020             MOVS     R0,R4
   \       0x36   0xB280             UXTH     R0,R0
   \       0x38   0x4428             ADD      R0,R5,R0
   \       0x3A   0x9001             STR      R0,[SP, #+4]
   \       0x3C   0x46B1             MOV      R9,R6
   \       0x3E   0x003A             MOVS     R2,R7
   \       0x40   0x9901             LDR      R1,[SP, #+4]
   \       0x42   0x4648             MOV      R0,R9
   \       0x44   0x.... 0x....      BL       __aeabi_memcpy
    645            index+=16;//16
   \       0x48   0x3410             ADDS     R4,R4,#+16
    646            
    647            memcpy(&echo_config.dest_ip_addr.u8, &buf[index], 16);
   \       0x4A   0xF05F 0x0910      MOVS     R9,#+16
   \       0x4E   0x0020             MOVS     R0,R4
   \       0x50   0xB280             UXTH     R0,R0
   \       0x52   0x4428             ADD      R0,R5,R0
   \       0x54   0x9000             STR      R0,[SP, #+0]
   \       0x56   0x.... 0x....      LDR.W    R10,??DataTable15_14
   \       0x5A   0x46D3             MOV      R11,R10
   \       0x5C   0x464A             MOV      R2,R9
   \       0x5E   0x9900             LDR      R1,[SP, #+0]
   \       0x60   0x4658             MOV      R0,R11
   \       0x62   0x.... 0x....      BL       __aeabi_memcpy
    648            index+=16;//32
   \       0x66   0x3410             ADDS     R4,R4,#+16
    649            
    650             echo_config.hop_limit = 0xFF;
   \       0x68   0x20FF             MOVS     R0,#+255
   \       0x6A   0xF886 0x002B      STRB     R0,[R6, #+43]
    651            
    652            // uip_ds6_nbr_t *nbr = nbr_table_head(ds6_neighbors);
    653            uip_ipaddr_t* src_ipaddr = (uip_ipaddr_t*)get_self_global_addr();
   \       0x6E   0x.... 0x....      BL       get_self_global_addr
   \       0x72   0x9002             STR      R0,[SP, #+8]
    654            if(!memcmp(&src_ipaddr,&echo_config.dest_ip_addr, 16))
   \       0x74   0x2210             MOVS     R2,#+16
   \       0x76   0x4651             MOV      R1,R10
   \       0x78   0xA802             ADD      R0,SP,#+8
   \       0x7A   0x.... 0x....      BL       memcmp
   \       0x7E   0x2800             CMP      R0,#+0
   \       0x80   0xD067             BEQ.N    ??send_icmpv6_with_count_0
    655              return;//requesting to self address error
    656            
    657            mem_rev_cpy((uint8_t *)&echo_config.counter, &buf[index], 2);
   \                     ??send_icmpv6_with_count_1: (+1)
   \       0x82   0x2202             MOVS     R2,#+2
   \       0x84   0x0020             MOVS     R0,R4
   \       0x86   0xB280             UXTH     R0,R0
   \       0x88   0xEB05 0x0100      ADD      R1,R5,R0
   \       0x8C   0xF116 0x0028      ADDS     R0,R6,#+40
   \       0x90   0x.... 0x....      BL       mem_rev_cpy
    658            index+=2;//34
   \       0x94   0x1CA4             ADDS     R4,R4,#+2
    659          
    660          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    661            edfe_information.edfe_trigger_packt  = echo_config.counter;
    662          #endif
    663            
    664            echo_config.interval = buf[index];
   \       0x96   0x0020             MOVS     R0,R4
   \       0x98   0xB280             UXTH     R0,R0
   \       0x9A   0x5C28             LDRB     R0,[R5, R0]
   \       0x9C   0xF886 0x002A      STRB     R0,[R6, #+42]
    665            index+=1;//35        
   \       0xA0   0x1C64             ADDS     R4,R4,#+1
    666            
    667            if(buf[index] == 0x01)
    668            {
    669          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    670              enable_disable_edfe_frame(buf[index],0);//frameExchangePattern
    671          #endif
    672            }
    673            index+=1;//36  
   \       0xA2   0x1C64             ADDS     R4,R4,#+1
    674            mem_rev_cpy((uint8_t *)&echo_config.echo_data_len, &buf[index], 2);
   \       0xA4   0x2202             MOVS     R2,#+2
   \       0xA6   0x0020             MOVS     R0,R4
   \       0xA8   0xB280             UXTH     R0,R0
   \       0xAA   0xEB05 0x0100      ADD      R1,R5,R0
   \       0xAE   0xF116 0x0020      ADDS     R0,R6,#+32
   \       0xB2   0x.... 0x....      BL       mem_rev_cpy
    675            
    676            index+=2;
   \       0xB6   0x1CA4             ADDS     R4,R4,#+2
    677            if( echo_config.counter == 0 || echo_config.counter >= 0xFFFF ||
    678               echo_config.interval == 0 || echo_config.interval >= 0xFF)
   \       0xB8   0x8D30             LDRH     R0,[R6, #+40]
   \       0xBA   0x2800             CMP      R0,#+0
   \       0xBC   0xD00C             BEQ.N    ??send_icmpv6_with_count_2
   \       0xBE   0xF64F 0x77FF      MOVW     R7,#+65535
   \       0xC2   0x8D30             LDRH     R0,[R6, #+40]
   \       0xC4   0x42B8             CMP      R0,R7
   \       0xC6   0xD007             BEQ.N    ??send_icmpv6_with_count_2
   \       0xC8   0xF896 0x002A      LDRB     R0,[R6, #+42]
   \       0xCC   0x2800             CMP      R0,#+0
   \       0xCE   0xD003             BEQ.N    ??send_icmpv6_with_count_2
   \       0xD0   0xF896 0x002A      LDRB     R0,[R6, #+42]
   \       0xD4   0x28FF             CMP      R0,#+255
   \       0xD6   0xD100             BNE.N    ??send_icmpv6_with_count_3
    679              return;//sending fail status
   \                     ??send_icmpv6_with_count_2: (+1)
   \       0xD8   0xE03B             B.N      ??send_icmpv6_with_count_0
    680            
    681            echo_config.p_echo_data = app_bm_alloc( echo_config.echo_data_len );
   \                     ??send_icmpv6_with_count_3: (+1)
   \       0xDA   0x8C30             LDRH     R0,[R6, #+32]
   \       0xDC   0x.... 0x....      BL       app_bm_alloc
   \       0xE0   0x6270             STR      R0,[R6, #+36]
    682            if(echo_config.p_echo_data == NULL)
   \       0xE2   0x6A70             LDR      R0,[R6, #+36]
   \       0xE4   0x2800             CMP      R0,#+0
   \       0xE6   0xD034             BEQ.N    ??send_icmpv6_with_count_0
    683            {
    684              return;
    685            }
    686            memcpy(echo_config.p_echo_data, &buf[index], echo_config.echo_data_len);//NEED DYNAMIC ALLOCATION                
   \                     ??send_icmpv6_with_count_4: (+1)
   \       0xE8   0xF8B6 0x8020      LDRH     R8,[R6, #+32]
   \       0xEC   0x0020             MOVS     R0,R4
   \       0xEE   0xB280             UXTH     R0,R0
   \       0xF0   0xEB05 0x0900      ADD      R9,R5,R0
   \       0xF4   0xF8D6 0xA024      LDR      R10,[R6, #+36]
   \       0xF8   0x4642             MOV      R2,R8
   \       0xFA   0x4649             MOV      R1,R9
   \       0xFC   0x4650             MOV      R0,R10
   \       0xFE   0x.... 0x....      BL       __aeabi_memcpy
    687            //sending echo request
    688            uip_icmp6_send_echo_request();
   \      0x102   0x.... 0x....      BL       uip_icmp6_send_echo_request
    689            ping_seq_number++;
   \      0x106   0x....             LDR.N    R0,??DataTable15_15
   \      0x108   0x8801             LDRH     R1,[R0, #+0]
   \      0x10A   0x1C49             ADDS     R1,R1,#+1
   \      0x10C   0x8001             STRH     R1,[R0, #+0]
    690            echo_config.sequence_number = (((0xFF00 & ping_seq_number) >> 8) | ((0x00FF & ping_seq_number) << 8));
   \      0x10E   0x8801             LDRH     R1,[R0, #+0]
   \      0x110   0xB289             UXTH     R1,R1
   \      0x112   0x8802             LDRH     R2,[R0, #+0]
   \      0x114   0x0212             LSLS     R2,R2,#+8
   \      0x116   0xEA52 0x2211      ORRS     R2,R2,R1, LSR #+8
   \      0x11A   0x85F2             STRH     R2,[R6, #+46]
    691            if(ping_seq_number == 0xFFFF)
   \      0x11C   0x8801             LDRH     R1,[R0, #+0]
   \      0x11E   0x42B9             CMP      R1,R7
   \      0x120   0xD101             BNE.N    ??send_icmpv6_with_count_5
    692            {
    693              ping_seq_number = 0;
   \      0x122   0x2100             MOVS     R1,#+0
   \      0x124   0x8001             STRH     R1,[R0, #+0]
    694            }
    695            echo_config.counter--;
   \                     ??send_icmpv6_with_count_5: (+1)
   \      0x126   0x8D30             LDRH     R0,[R6, #+40]
   \      0x128   0x1E40             SUBS     R0,R0,#+1
   \      0x12A   0x8530             STRH     R0,[R6, #+40]
    696            //gu2pcapp_node_config_set_conf(0x00);
    697            send_icmv6_conf();
   \      0x12C   0x.... 0x....      BL       send_icmv6_conf
    698            if(echo_config.counter)
   \      0x130   0x8D30             LDRH     R0,[R6, #+40]
   \      0x132   0x2800             CMP      R0,#+0
   \      0x134   0xD00D             BEQ.N    ??send_icmpv6_with_count_6
    699            {
    700              l3_ctimer_set(&echo_send_ctimer, echo_config.interval*CLOCK_SECOND, 
    701                         echo_send_ctimer_callback, NULL);
   \      0x136   0x2000             MOVS     R0,#+0
   \      0x138   0x9001             STR      R0,[SP, #+4]
   \      0x13A   0x.... 0x....      ADR.W    R0,echo_send_ctimer_callback
   \      0x13E   0x9000             STR      R0,[SP, #+0]
   \      0x140   0xF896 0x202A      LDRB     R2,[R6, #+42]
   \      0x144   0xF44F 0x707A      MOV      R0,#+1000
   \      0x148   0x4342             MULS     R2,R0,R2
   \      0x14A   0x17D3             ASRS     R3,R2,#+31
   \      0x14C   0x....             LDR.N    R0,??DataTable15_16
   \      0x14E   0x.... 0x....      BL       l3_ctimer_set
    702            }
    703            
    704            return;
   \                     ??send_icmpv6_with_count_6: (+1)
   \                     ??send_icmpv6_with_count_0: (+1)
   \      0x152   0xB005             ADD      SP,SP,#+20
   \      0x154   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    705          }
    706          /*---------------------------------------------------------------------------*/

   \                                 In section .text, align 4, keep-with-next
    707          void echo_send_ctimer_callback(void* ptr)
    708          {  
   \                     echo_send_ctimer_callback: (+1)
   \        0x0   0xB53E             PUSH     {R1-R5,LR}
   \        0x2   0x0004             MOVS     R4,R0
    709            //sending echo request
    710            uip_icmp6_send_echo_request();
   \        0x4   0x.... 0x....      BL       uip_icmp6_send_echo_request
    711            ping_seq_number++;
   \        0x8   0x....             LDR.N    R0,??DataTable15_15
   \        0xA   0x8801             LDRH     R1,[R0, #+0]
   \        0xC   0x1C49             ADDS     R1,R1,#+1
   \        0xE   0x8001             STRH     R1,[R0, #+0]
    712            echo_config.sequence_number = (((0xFF00 & ping_seq_number) >> 8) | ((0x00FF & ping_seq_number) << 8));
   \       0x10   0x....             LDR.N    R5,??DataTable15_6
   \       0x12   0x8802             LDRH     R2,[R0, #+0]
   \       0x14   0xB292             UXTH     R2,R2
   \       0x16   0x8801             LDRH     R1,[R0, #+0]
   \       0x18   0x0209             LSLS     R1,R1,#+8
   \       0x1A   0xEA51 0x2112      ORRS     R1,R1,R2, LSR #+8
   \       0x1E   0x85E9             STRH     R1,[R5, #+46]
    713            if(ping_seq_number == 0xFFFF)
   \       0x20   0x8802             LDRH     R2,[R0, #+0]
   \       0x22   0xF64F 0x71FF      MOVW     R1,#+65535
   \       0x26   0x428A             CMP      R2,R1
   \       0x28   0xD101             BNE.N    ??echo_send_ctimer_callback_0
    714            {
    715              ping_seq_number = 0;
   \       0x2A   0x2100             MOVS     R1,#+0
   \       0x2C   0x8001             STRH     R1,[R0, #+0]
    716            }      
    717            echo_config.counter--;    
   \                     ??echo_send_ctimer_callback_0: (+1)
   \       0x2E   0x8D28             LDRH     R0,[R5, #+40]
   \       0x30   0x1E40             SUBS     R0,R0,#+1
   \       0x32   0x8528             STRH     R0,[R5, #+40]
    718            //gu2pcapp_node_config_set_conf(0x00);    
    719            send_icmv6_conf();
   \       0x34   0x.... 0x....      BL       send_icmv6_conf
    720            if(echo_config.counter)
   \       0x38   0x8D28             LDRH     R0,[R5, #+40]
   \       0x3A   0x2800             CMP      R0,#+0
   \       0x3C   0xD00D             BEQ.N    ??echo_send_ctimer_callback_1
    721            {
    722              l3_ctimer_set(&echo_send_ctimer, echo_config.interval*CLOCK_SECOND, 
    723                         echo_send_ctimer_callback, NULL);      
   \       0x3E   0x2000             MOVS     R0,#+0
   \       0x40   0x9001             STR      R0,[SP, #+4]
   \       0x42   0x....             LDR.N    R0,??DataTable15_17
   \       0x44   0x9000             STR      R0,[SP, #+0]
   \       0x46   0xF895 0x202A      LDRB     R2,[R5, #+42]
   \       0x4A   0xF44F 0x707A      MOV      R0,#+1000
   \       0x4E   0x4342             MULS     R2,R0,R2
   \       0x50   0x17D3             ASRS     R3,R2,#+31
   \       0x52   0x....             LDR.N    R0,??DataTable15_16
   \       0x54   0x.... 0x....      BL       l3_ctimer_set
   \       0x58   0xE002             B.N      ??echo_send_ctimer_callback_2
    724            }
    725            else
    726            {
    727              l3_ctimer_stop(&echo_send_ctimer);    
   \                     ??echo_send_ctimer_callback_1: (+1)
   \       0x5A   0x....             LDR.N    R0,??DataTable15_16
   \       0x5C   0x.... 0x....      BL       l3_ctimer_stop
    728            }
    729          }
   \                     ??echo_send_ctimer_callback_2: (+1)
   \       0x60   0xBD37             POP      {R0-R2,R4,R5,PC}
    730          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    731          void uip_icmp6_send_echo_request(void)
    732          {
   \                     uip_icmp6_send_echo_request: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
   \        0x4   0xB086             SUB      SP,SP,#+24
    733              /* set identifier and sequence number to 0 */
    734              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN, 0x00, 4);       
   \        0x6   0x2004             MOVS     R0,#+4
   \        0x8   0x9005             STR      R0,[SP, #+20]
   \        0xA   0xF05F 0x0A00      MOVS     R10,#+0
   \        0xE   0x....             LDR.N    R4,??DataTable15_4
   \       0x10   0x....             LDR.N    R5,??DataTable15_5
   \       0x12   0x7820             LDRB     R0,[R4, #+0]
   \       0x14   0x4428             ADD      R0,R5,R0
   \       0x16   0xF110 0x062C      ADDS     R6,R0,#+44
   \       0x1A   0x4652             MOV      R2,R10
   \       0x1C   0x9905             LDR      R1,[SP, #+20]
   \       0x1E   0x0030             MOVS     R0,R6
   \       0x20   0x.... 0x....      BL       __aeabi_memset
    735              /* reset icmpv6 data */
    736              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/ + 2/*seqno*/,
    737                      0x00, PING6_DATALEN);        
   \       0x24   0x....             LDR.N    R6,??DataTable15_6
   \       0x26   0x8C30             LDRH     R0,[R6, #+32]
   \       0x28   0x9004             STR      R0,[SP, #+16]
   \       0x2A   0x2700             MOVS     R7,#+0
   \       0x2C   0x7820             LDRB     R0,[R4, #+0]
   \       0x2E   0x4428             ADD      R0,R5,R0
   \       0x30   0xF110 0x0830      ADDS     R8,R0,#+48
   \       0x34   0x003A             MOVS     R2,R7
   \       0x36   0x9904             LDR      R1,[SP, #+16]
   \       0x38   0x4640             MOV      R0,R8
   \       0x3A   0x.... 0x....      BL       __aeabi_memset
    738              
    739              /* copy identifier*/                                                                        //Arjun: 23-0318: to be set fom tool
    740              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN, (uint8_t *)&echo_config.identifier, 2);
   \       0x3E   0xF05F 0x0802      MOVS     R8,#+2
   \       0x42   0xF116 0x002C      ADDS     R0,R6,#+44
   \       0x46   0x9003             STR      R0,[SP, #+12]
   \       0x48   0x7820             LDRB     R0,[R4, #+0]
   \       0x4A   0x4428             ADD      R0,R5,R0
   \       0x4C   0xF110 0x092C      ADDS     R9,R0,#+44
   \       0x50   0x4642             MOV      R2,R8
   \       0x52   0x9903             LDR      R1,[SP, #+12]
   \       0x54   0x4648             MOV      R0,R9
   \       0x56   0x.... 0x....      BL       __aeabi_memcpy
    741              /* copy sequnce_number*/
    742              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/, (uint8_t *)&echo_config.sequence_number, 2);
   \       0x5A   0xF05F 0x0902      MOVS     R9,#+2
   \       0x5E   0xF116 0x002E      ADDS     R0,R6,#+46
   \       0x62   0x9002             STR      R0,[SP, #+8]
   \       0x64   0x7820             LDRB     R0,[R4, #+0]
   \       0x66   0x4428             ADD      R0,R5,R0
   \       0x68   0xF110 0x0B2E      ADDS     R11,R0,#+46
   \       0x6C   0x464A             MOV      R2,R9
   \       0x6E   0x9902             LDR      R1,[SP, #+8]
   \       0x70   0x4658             MOV      R0,R11
   \       0x72   0x.... 0x....      BL       __aeabi_memcpy
    743              
    744              
    745              /* copy icmpv6 data */
    746              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/ + 2/*seqno*/, 
    747                     echo_config.p_echo_data, echo_config.echo_data_len);    
   \       0x76   0x8C30             LDRH     R0,[R6, #+32]
   \       0x78   0x9001             STR      R0,[SP, #+4]
   \       0x7A   0xF8D6 0xB024      LDR      R11,[R6, #+36]
   \       0x7E   0x7820             LDRB     R0,[R4, #+0]
   \       0x80   0x4428             ADD      R0,R5,R0
   \       0x82   0xF110 0x0430      ADDS     R4,R0,#+48
   \       0x86   0x9A01             LDR      R2,[SP, #+4]
   \       0x88   0x4659             MOV      R1,R11
   \       0x8A   0x0020             MOVS     R0,R4
   \       0x8C   0x.... 0x....      BL       __aeabi_memcpy
    748              /* send icmpv6 request */
    749              uip_icmp6_send(&(echo_config.dest_ip_addr), ICMP6_ECHO_REQUEST, 0x00/*code*/, 
    750                             echo_config.echo_data_len + 2/*id*/ + 2/*seqno*/,echo_config.hop_limit); 
   \       0x90   0xF896 0x002B      LDRB     R0,[R6, #+43]
   \       0x94   0x9000             STR      R0,[SP, #+0]
   \       0x96   0x8C33             LDRH     R3,[R6, #+32]
   \       0x98   0x1D1B             ADDS     R3,R3,#+4
   \       0x9A   0x2200             MOVS     R2,#+0
   \       0x9C   0x2180             MOVS     R1,#+128
   \       0x9E   0xF116 0x0010      ADDS     R0,R6,#+16
   \       0xA2   0x.... 0x....      BL       uip_icmp6_send
    751          }
   \       0xA6   0xB007             ADD      SP,SP,#+28
   \       0xA8   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    752          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    753          void wan_uip_icmp6_send_echo_reply (void)
    754          {
   \                     wan_uip_icmp6_send_echo_reply: (+1)
   \        0x0   0xE92D 0x4FF0      PUSH     {R4-R11,LR}
   \        0x4   0xB085             SUB      SP,SP,#+20
    755              echo_config.hop_limit = uip_ds6_if.cur_hop_limit;
   \        0x6   0x.... 0x....      LDR.W    R11,??DataTable15_6
   \        0xA   0x....             LDR.N    R0,??DataTable15_18
   \        0xC   0x7900             LDRB     R0,[R0, #+4]
   \        0xE   0xF88B 0x002B      STRB     R0,[R11, #+43]
    756              /* set identifier and sequence number to 0 */
    757              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN, 0x00, 4);       
   \       0x12   0x2404             MOVS     R4,#+4
   \       0x14   0x2500             MOVS     R5,#+0
   \       0x16   0x....             LDR.N    R6,??DataTable15_4
   \       0x18   0x....             LDR.N    R7,??DataTable15_5
   \       0x1A   0x7830             LDRB     R0,[R6, #+0]
   \       0x1C   0x4438             ADD      R0,R7,R0
   \       0x1E   0xF110 0x082C      ADDS     R8,R0,#+44
   \       0x22   0x002A             MOVS     R2,R5
   \       0x24   0x0021             MOVS     R1,R4
   \       0x26   0x4640             MOV      R0,R8
   \       0x28   0x.... 0x....      BL       __aeabi_memset
    758              /* reset icmpv6 data */
    759              memset((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/ + 2/*seqno*/,
    760                      0x00, PING6_DATALEN);        
   \       0x2C   0xF8BB 0x0020      LDRH     R0,[R11, #+32]
   \       0x30   0x9004             STR      R0,[SP, #+16]
   \       0x32   0xF05F 0x0800      MOVS     R8,#+0
   \       0x36   0x7830             LDRB     R0,[R6, #+0]
   \       0x38   0x4438             ADD      R0,R7,R0
   \       0x3A   0xF110 0x0930      ADDS     R9,R0,#+48
   \       0x3E   0x4642             MOV      R2,R8
   \       0x40   0x9904             LDR      R1,[SP, #+16]
   \       0x42   0x4648             MOV      R0,R9
   \       0x44   0x.... 0x....      BL       __aeabi_memset
    761              
    762              /* copy identifier*/                                                                        //Arjun: 23-0318: to be set fom tool
    763              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN, (uint8_t *)&echo_config.identifier, 2);
   \       0x48   0xF05F 0x0902      MOVS     R9,#+2
   \       0x4C   0xF11B 0x002C      ADDS     R0,R11,#+44
   \       0x50   0x9003             STR      R0,[SP, #+12]
   \       0x52   0x7830             LDRB     R0,[R6, #+0]
   \       0x54   0x4438             ADD      R0,R7,R0
   \       0x56   0xF110 0x0A2C      ADDS     R10,R0,#+44
   \       0x5A   0x464A             MOV      R2,R9
   \       0x5C   0x9903             LDR      R1,[SP, #+12]
   \       0x5E   0x4650             MOV      R0,R10
   \       0x60   0x.... 0x....      BL       __aeabi_memcpy
    764              /* copy sequnce_number*/
    765              memcpy((uint8_t *)UIP_ICMP_BUF + UIP_ICMPH_LEN + 2/*id*/, (uint8_t *)&echo_config.sequence_number, 2);
   \       0x64   0xF05F 0x0A02      MOVS     R10,#+2
   \       0x68   0xF11B 0x002E      ADDS     R0,R11,#+46
   \       0x6C   0x9002             STR      R0,[SP, #+8]
   \       0x6E   0x7830             LDRB     R0,[R6, #+0]
   \       0x70   0x4438             ADD      R0,R7,R0
   \       0x72   0xF110 0x062E      ADDS     R6,R0,#+46
   \       0x76   0x4652             MOV      R2,R10
   \       0x78   0x9902             LDR      R1,[SP, #+8]
   \       0x7A   0x0030             MOVS     R0,R6
   \       0x7C   0x.... 0x....      BL       __aeabi_memcpy
    766              
    767              /* send icmpv6 request */
    768              wan_uip_icmp6_send(&(echo_config.src_ip_addr), &(echo_config.dest_ip_addr), ICMP6_ECHO_REPLY, 0x00/*code*/, 
    769                             0 + 2/*id*/ + 2/*seqno*/,echo_config.hop_limit); 
   \       0x80   0xF89B 0x002B      LDRB     R0,[R11, #+43]
   \       0x84   0x9001             STR      R0,[SP, #+4]
   \       0x86   0x2004             MOVS     R0,#+4
   \       0x88   0x9000             STR      R0,[SP, #+0]
   \       0x8A   0x2300             MOVS     R3,#+0
   \       0x8C   0x2281             MOVS     R2,#+129
   \       0x8E   0xF11B 0x0110      ADDS     R1,R11,#+16
   \       0x92   0x4658             MOV      R0,R11
   \       0x94   0x.... 0x....      BL       wan_uip_icmp6_send
    770          }
   \       0x98   0xB005             ADD      SP,SP,#+20
   \       0x9A   0xE8BD 0x8FF0      POP      {R4-R11,PC}
    771          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    772          uint16_t hex2int(uint16_t val)
    773          {
   \                     hex2int: (+1)
   \        0x0   0xB4F0             PUSH     {R4-R7}
   \        0x2   0x0001             MOVS     R1,R0
    774              uint8_t j = 0;
   \        0x4   0x2200             MOVS     R2,#+0
    775              uint8_t i = 0;
   \        0x6   0x2500             MOVS     R5,#+0
    776              uint16_t sum = 0;
   \        0x8   0x2000             MOVS     R0,#+0
    777              uint16_t rem = 0;
   \        0xA   0x2300             MOVS     R3,#+0
    778              for(i=0;i<4;i++)
   \        0xC   0x2400             MOVS     R4,#+0
   \                     ??hex2int_0: (+1)
   \        0xE   0x0025             MOVS     R5,R4
   \       0x10   0xB2ED             UXTB     R5,R5
   \       0x12   0x2D04             CMP      R5,#+4
   \       0x14   0xDA11             BGE.N    ??hex2int_1
    779              {
    780                rem = (val%10);
   \       0x16   0x000F             MOVS     R7,R1
   \       0x18   0xB2BF             UXTH     R7,R7
   \       0x1A   0x260A             MOVS     R6,#+10
   \       0x1C   0xFB97 0xF5F6      SDIV     R5,R7,R6
   \       0x20   0xFB06 0x7715      MLS      R7,R6,R5,R7
    781                rem = rem<<j;
   \       0x24   0xB2BF             UXTH     R7,R7
   \       0x26   0x4097             LSLS     R7,R7,R2
   \       0x28   0x003B             MOVS     R3,R7
    782                j = j + 4;
   \       0x2A   0x1D12             ADDS     R2,R2,#+4
    783                sum = sum | rem;
   \       0x2C   0x4318             ORRS     R0,R3,R0
    784                //sum = sum|rem;
    785                val = val/10;
   \       0x2E   0xB289             UXTH     R1,R1
   \       0x30   0x250A             MOVS     R5,#+10
   \       0x32   0xFB91 0xF1F5      SDIV     R1,R1,R5
    786              }
   \       0x36   0x1C64             ADDS     R4,R4,#+1
   \       0x38   0xE7E9             B.N      ??hex2int_0
    787              
    788              return sum;
   \                     ??hex2int_1: (+1)
   \       0x3A   0xB280             UXTH     R0,R0
   \       0x3C   0xBCF0             POP      {R4-R7}
   \       0x3E   0x4770             BX       LR
    789          }
    790          /*----------------------------------------------------------------------------*/

   \                                 In section .text, align 2, keep-with-next
    791          void send_icmv6_conf(void)
    792          {
   \                     send_icmv6_conf: (+1)
   \        0x0   0xE92D 0x4FF8      PUSH     {R3-R11,LR}
    793            
    794          #ifdef SEND_PING_PKT_TO_HIF
    795            
    796            enet_msg_t* msg = allocate_hif_msg( echo_config.echo_data_len+50 );//50 bytes is sefty zone    
   \        0x4   0x....             LDR.N    R5,??DataTable15_6
   \        0x6   0x8C28             LDRH     R0,[R5, #+32]
   \        0x8   0x3032             ADDS     R0,R0,#+50
   \        0xA   0xB280             UXTH     R0,R0
   \        0xC   0x.... 0x....      BL       allocate_hif_msg
   \       0x10   0x0004             MOVS     R4,R0
    797            uint8_t* buf = msg->data;    
   \       0x12   0x1DA6             ADDS     R6,R4,#+6
    798            if(msg != NULL)
   \       0x14   0x2C00             CMP      R4,#+0
   \       0x16   0xD04E             BEQ.N    ??send_icmv6_conf_0
    799            {
    800              *buf++ = SEND_ICMPV6_CONF;
   \       0x18   0x208A             MOVS     R0,#+138
   \       0x1A   0x7030             STRB     R0,[R6, #+0]
   \       0x1C   0xF116 0x0801      ADDS     R8,R6,#+1
    801              
    802              memcpy(buf,echo_config.src_ip_addr.u8,16);
   \       0x20   0xF05F 0x0B10      MOVS     R11,#+16
   \       0x24   0x002E             MOVS     R6,R5
   \       0x26   0x4647             MOV      R7,R8
   \       0x28   0x465A             MOV      R2,R11
   \       0x2A   0x0031             MOVS     R1,R6
   \       0x2C   0x0038             MOVS     R0,R7
   \       0x2E   0x.... 0x....      BL       __aeabi_memcpy
    803              buf+=16;
   \       0x32   0xF118 0x0710      ADDS     R7,R8,#+16
    804              
    805              memcpy(buf,echo_config.dest_ip_addr.u8,16);
   \       0x36   0xF05F 0x0810      MOVS     R8,#+16
   \       0x3A   0xF115 0x0910      ADDS     R9,R5,#+16
   \       0x3E   0x46BA             MOV      R10,R7
   \       0x40   0x4642             MOV      R2,R8
   \       0x42   0x4649             MOV      R1,R9
   \       0x44   0x4650             MOV      R0,R10
   \       0x46   0x.... 0x....      BL       __aeabi_memcpy
    806              buf+=16;
   \       0x4A   0x3710             ADDS     R7,R7,#+16
    807              ++icmv6_counter;
   \       0x4C   0x....             LDR.N    R1,??DataTable15_12
   \       0x4E   0x8808             LDRH     R0,[R1, #+0]
   \       0x50   0x1C40             ADDS     R0,R0,#+1
   \       0x52   0x8008             STRH     R0,[R1, #+0]
    808          
    809          #if(FAN_EDFE_FEATURE_ENABLED == 1)
    810              edfe_information.edfe_sent_pkt =  icmv6_counter;
    811          #endif
    812          
    813              if(icmv6_counter == 0xFFFF)
   \       0x54   0x880A             LDRH     R2,[R1, #+0]
   \       0x56   0xF64F 0x70FF      MOVW     R0,#+65535
   \       0x5A   0x4282             CMP      R2,R0
   \       0x5C   0xD101             BNE.N    ??send_icmv6_conf_1
    814              {
    815                icmv6_counter = 0x00;
   \       0x5E   0x2000             MOVS     R0,#+0
   \       0x60   0x8008             STRH     R0,[R1, #+0]
    816              }
    817              
    818              mem_rev_cpy(buf,(uint8_t*)&icmv6_counter,2);
   \                     ??send_icmv6_conf_1: (+1)
   \       0x62   0x2202             MOVS     R2,#+2
   \       0x64   0x0038             MOVS     R0,R7
   \       0x66   0x.... 0x....      BL       mem_rev_cpy
    819              buf+=2;
   \       0x6A   0x1CB9             ADDS     R1,R7,#+2
    820              
    821              *buf++ = echo_config.interval;
   \       0x6C   0xF895 0x002A      LDRB     R0,[R5, #+42]
   \       0x70   0x7008             STRB     R0,[R1, #+0]
   \       0x72   0x1C48             ADDS     R0,R1,#+1
    822              
    823              put_ushort_BE(buf,echo_config.echo_data_len);
   \       0x74   0x8C29             LDRH     R1,[R5, #+32]
   \       0x76   0x7041             STRB     R1,[R0, #+1]
   \       0x78   0x8C29             LDRH     R1,[R5, #+32]
   \       0x7A   0xB289             UXTH     R1,R1
   \       0x7C   0x0A09             LSRS     R1,R1,#+8
   \       0x7E   0x7001             STRB     R1,[R0, #+0]
    824              buf += 2;
   \       0x80   0x1C86             ADDS     R6,R0,#+2
    825              
    826              memcpy(buf,echo_config.p_echo_data,echo_config.echo_data_len);
   \       0x82   0x8C2F             LDRH     R7,[R5, #+32]
   \       0x84   0xF8D5 0x8024      LDR      R8,[R5, #+36]
   \       0x88   0x46B1             MOV      R9,R6
   \       0x8A   0x003A             MOVS     R2,R7
   \       0x8C   0x4641             MOV      R1,R8
   \       0x8E   0x4648             MOV      R0,R9
   \       0x90   0x.... 0x....      BL       __aeabi_memcpy
    827              buf += echo_config.echo_data_len;
   \       0x94   0x8C28             LDRH     R0,[R5, #+32]
   \       0x96   0xEB06 0x0100      ADD      R1,R6,R0
    828              
    829              *buf++ = DUMMY_COMPORT;
   \       0x9A   0x2055             MOVS     R0,#+85
   \       0x9C   0x7008             STRB     R0,[R1, #+0]
   \       0x9E   0x1C4E             ADDS     R6,R1,#+1
    830              
    831              msg->data_length  = buf - msg->data;
   \       0xA0   0x1DA0             ADDS     R0,R4,#+6
   \       0xA2   0x1A30             SUBS     R0,R6,R0
   \       0xA4   0x80A0             STRH     R0,[R4, #+4]
    832              
    833              // data_length -1 :: -1 is for command ID
    834          //[Kimbal]
    835          //    hif_send_msg_up(msg->data,msg->data_length-1,response_laye_ID,PROTOCOL_ID_FOR_APP);
    836          //    free_hif_msg( msg );
    837              if(echo_config.counter == 0x00)
   \       0xA6   0x8D28             LDRH     R0,[R5, #+40]
   \       0xA8   0x2800             CMP      R0,#+0
   \       0xAA   0xD104             BNE.N    ??send_icmv6_conf_0
    838              {
    839                app_bm_free((uint8_t*)echo_config.p_echo_data);
   \       0xAC   0x6A68             LDR      R0,[R5, #+36]
   \       0xAE   0x.... 0x....      BL       app_bm_free
    840                echo_config.p_echo_data = NULL;
   \       0xB2   0x2000             MOVS     R0,#+0
   \       0xB4   0x6268             STR      R0,[R5, #+36]
    841               }
    842            }
    843            if(echo_config.p_echo_data != NULL)
   \                     ??send_icmv6_conf_0: (+1)
   \       0xB6   0x6A68             LDR      R0,[R5, #+36]
   \       0xB8   0x2800             CMP      R0,#+0
   \       0xBA   0xD007             BEQ.N    ??send_icmv6_conf_2
    844            {
    845              if(echo_config.counter == 0x00)
   \       0xBC   0x8D28             LDRH     R0,[R5, #+40]
   \       0xBE   0x2800             CMP      R0,#+0
   \       0xC0   0xD104             BNE.N    ??send_icmv6_conf_2
    846              {
    847                app_bm_free((uint8_t*)echo_config.p_echo_data);
   \       0xC2   0x6A68             LDR      R0,[R5, #+36]
   \       0xC4   0x.... 0x....      BL       app_bm_free
    848                echo_config.p_echo_data = NULL;
   \       0xC8   0x2000             MOVS     R0,#+0
   \       0xCA   0x6268             STR      R0,[R5, #+36]
    849               }
    850            }
    851          #endif
    852               
    853          }
   \                     ??send_icmv6_conf_2: (+1)
   \       0xCC   0xE8BD 0x8FF1      POP      {R0,R4-R11,PC}
    854          
    855          /*----------------------------------------------------------------------------*/
    856          

   \                                 In section .text, align 2, keep-with-next
    857          void set_src_dst_in_echo_structure (uip_ipaddr_t *src, uip_ipaddr_t *dest, uint16_t identifier, uint16_t seq_number)
    858          {
   \                     set_src_dst_in_echo_structure: (+1)
   \        0x0   0xE92D 0x4FFE      PUSH     {R1-R11,LR}
   \        0x4   0x0004             MOVS     R4,R0
   \        0x6   0x000D             MOVS     R5,R1
   \        0x8   0x0016             MOVS     R6,R2
   \        0xA   0x001F             MOVS     R7,R3
    859            memcpy(&(echo_config.dest_ip_addr), dest, 16);
   \        0xC   0xF05F 0x0810      MOVS     R8,#+16
   \       0x10   0x9501             STR      R5,[SP, #+4]
   \       0x12   0x.... 0x....      LDR.W    R10,??DataTable15_6
   \       0x16   0xF11A 0x0910      ADDS     R9,R10,#+16
   \       0x1A   0x4642             MOV      R2,R8
   \       0x1C   0x9901             LDR      R1,[SP, #+4]
   \       0x1E   0x4648             MOV      R0,R9
   \       0x20   0x.... 0x....      BL       __aeabi_memcpy
    860            memcpy(&(echo_config.src_ip_addr), src, 16);
   \       0x24   0xF05F 0x0910      MOVS     R9,#+16
   \       0x28   0x9400             STR      R4,[SP, #+0]
   \       0x2A   0x46D3             MOV      R11,R10
   \       0x2C   0x464A             MOV      R2,R9
   \       0x2E   0x9900             LDR      R1,[SP, #+0]
   \       0x30   0x4658             MOV      R0,R11
   \       0x32   0x.... 0x....      BL       __aeabi_memcpy
    861            echo_config.identifier = identifier;
   \       0x36   0xF8AA 0x602C      STRH     R6,[R10, #+44]
    862            echo_config.sequence_number = seq_number;
   \       0x3A   0xF8AA 0x702E      STRH     R7,[R10, #+46]
    863          }
   \       0x3E   0xE8BD 0x8FF7      POP      {R0-R2,R4-R11,PC}

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15:
   \        0x0   0x....'....        DC32     siclowpanPakcetsIndex

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_1:
   \        0x0   0x....'....        DC32     siclowpanPakcets

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_2:
   \        0x0   0x....'....        DC32     ping6_periodic_timer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_3:
   \        0x0   0x....'....        DC32     tcpip_icmp6_event

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_4:
   \        0x0   0x....'....        DC32     uip_ext_len

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_5:
   \        0x0   0x....'....        DC32     uip_aligned_buf

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_6:
   \        0x0   0x....'....        DC32     echo_config

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_7:
   \        0x0   0x....'....        DC32     p_icmp_packet

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_8:
   \        0x0   0x....'....        DC32     uip_len

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_9:
   \        0x0   0x....'....        DC32     temp_buf_set

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_10:
   \        0x0   0x....'....        DC32     process_current

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_11:
   \        0x0   0x....'....        DC32     ping6_process

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_12:
   \        0x0   0x....'....        DC32     icmv6_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_13:
   \        0x0   0x....'....        DC32     icmv6_response_counter

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_14:
   \        0x0   0x....'....        DC32     echo_config+16

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_15:
   \        0x0   0x....'....        DC32     ping_seq_number

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_16:
   \        0x0   0x....'....        DC32     echo_send_ctimer

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_17:
   \        0x0   0x....'....        DC32     echo_send_ctimer_callback

   \                                 In section .text, align 4, keep-with-next
   \                     ??DataTable15_18:
   \        0x0   0x....'....        DC32     uip_ds6_if

   Maximum stack usage in bytes:

   .cstack Function
   ------- --------
      24   echo_send_ctimer_callback
        24   -> l3_ctimer_set
        24   -> l3_ctimer_stop
        24   -> send_icmv6_conf
        24   -> uip_icmp6_send_echo_request
    1536   explicit_trigger_echo_request
      1536   -> __aeabi_memcpy
      1536   -> __aeabi_memset
      1536   -> app_bm_alloc
      1536   -> l3_etimer_set
      16   hex2int
      16   ping_event_handler
        16   -> l3_etimer_expired
        16   -> process_dest_unreachable_msg
        16   -> process_echo
        16   -> process_nans
        16   -> process_para_problem_msg
        16   -> process_timer_expiry
       8   process_dest_unreachable_msg
         8   -> gu2pcapp_send_dest_unreachable_icmp_ind
         8   -> send_all_queued_sicslowpan_packets
      40   process_echo
        40   -> get_uncomp_hdr_len
        40   -> gu2pcapp_send_echo_req_res
      24   process_nans
        24   -> gu2pcapp_send_na_ind
        24   -> gu2pcapp_send_ns_ind
        24   -> send_all_queued_sicslowpan_packets
       8   process_para_problem_msg
         8   -> gu2pcapp_process_para_problem_msg_ind
         8   -> send_all_queued_sicslowpan_packets
      24   process_thread_ping6_process
        24   -> icmp6_new
        24   -> ping_event_handler
      48   process_timer_expiry
        48   -> __aeabi_memcpy
        48   -> __aeabi_memset
        48   -> l3_etimer_stop
        48   -> uip_icmp6_send
       4   send_all_queued_sicslowpan_packets
      48   send_icmpv6
        48   -> __aeabi_memcpy
        48   -> __aeabi_memset
        48   -> app_bm_alloc
        48   -> app_bm_free
        48   -> get_self_global_addr
        48   -> mem_rev_cpy
        48   -> memcmp
        48   -> uip_icmp6_send_echo_request
      56   send_icmpv6_with_count
        56   -> __aeabi_memcpy
        56   -> __aeabi_memset
        56   -> app_bm_alloc
        56   -> get_self_global_addr
        56   -> l3_ctimer_set
        56   -> mem_rev_cpy
        56   -> memcmp
        56   -> send_icmv6_conf
        56   -> uip_icmp6_send_echo_request
      40   send_icmv6_conf
        40   -> __aeabi_memcpy
        40   -> allocate_hif_msg
        40   -> app_bm_free
        40   -> mem_rev_cpy
      48   set_src_dst_in_echo_structure
        48   -> __aeabi_memcpy
       0   trigger_echo_request
      64   uip_icmp6_send_echo_request
        64   -> __aeabi_memcpy
        64   -> __aeabi_memset
        64   -> uip_icmp6_send
      56   wan_uip_icmp6_send_echo_reply
        56   -> __aeabi_memcpy
        56   -> __aeabi_memset
        56   -> wan_uip_icmp6_send


   Section sizes:

   Bytes  Function/Label
   -----  --------------
       4  ??DataTable15
       4  ??DataTable15_1
       4  ??DataTable15_10
       4  ??DataTable15_11
       4  ??DataTable15_12
       4  ??DataTable15_13
       4  ??DataTable15_14
       4  ??DataTable15_15
       4  ??DataTable15_16
       4  ??DataTable15_17
       4  ??DataTable15_18
       4  ??DataTable15_2
       4  ??DataTable15_3
       4  ??DataTable15_4
       4  ??DataTable15_5
       4  ??DataTable15_6
       4  ??DataTable15_7
       4  ??DataTable15_8
       4  ??DataTable15_9
      48  echo_config
      48  echo_send_ctimer
      98  echo_send_ctimer_callback
     182  explicit_trigger_echo_request
      64  hex2int
       2  icmv6_counter
       2  icmv6_response_counter
       4  p_icmp_packet
      24  ping6_periodic_timer
      12  ping6_process
     112  ping_event_handler
       2  ping_seq_number
      50  process_dest_unreachable_msg
     126  process_echo
     126  process_nans
      50  process_para_problem_msg
      88  process_thread_ping6_process
     128  process_timer_expiry
      62  send_all_queued_sicslowpan_packets
     492  send_icmpv6
     344  send_icmpv6_with_count
     208  send_icmv6_conf
      66  set_src_dst_in_echo_structure
      80  siclowpanPakcets
       1  siclowpanPakcetsIndex
       2  trigger_echo_request
     172  uip_icmp6_send_echo_request
     158  wan_uip_icmp6_send_echo_reply

 
   211 bytes in section .bss
    12 bytes in section .data
 2'604 bytes in section .text
 
 2'604 bytes of CODE memory
   223 bytes of DATA memory

Errors: none
Warnings: 1

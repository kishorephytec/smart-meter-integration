###############################################################################
#
# IAR ANSI C/C++ Compiler V9.50.2.385/W64 for ARM         26/Nov/2024  12:15:55
# Copyright 1999-2024 IAR Systems AB.
#
#    Cpu mode          =  thumb
#    Endian            =  little
#    Source file       =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\Util\hif\hif_service.c
#    Command line      =
#        -f
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Util_9809783495009140069.dir\hif_service.o.rsp
#        (C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\Util\hif\hif_service.c
#        -D EFR32FG23A020F512GM40=1 -D SL_COMPONENT_CATALOG_PRESENT=1 -D
#        SL_RAIL_LIB_MULTIPROTOCOL_SUPPORT=0 -D
#        SL_RAIL_UTIL_PA_CONFIG_HEADER=<sl_rail_util_pa_config.h> -lC
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\lst\Util_9809783495009140069.dir
#        --diag_suppress Pa050 -o
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Util_9809783495009140069.dir
#        --no_cse --no_unroll --no_inline --no_code_motion --no_tbaa
#        --no_clustering --no_scheduling --debug --endian=little
#        --cpu=Cortex-M33 --cmse -e --fpu=VFPv5_sp --dlib_config "C:\Program
#        Files\IAR Systems\Embedded Workbench
#        9.2\arm\inc\c\DLib_Config_Normal.h" -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\.\ -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\AppConfigs\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\config\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\autogen\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\HAL\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\NVM\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\buffer_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\event_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\list_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\queue_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\timer_manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\hif\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\raw_uart_if\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\Util\debug_console\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\Device\SiliconLabs\EFR32FG23\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\CMSIS\Core\Include\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\device_init\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\common\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\mpu\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\common\toolchain\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\system\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\network-manager\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\RAIL_TRX\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\MAC\Inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\wisun_modified\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\ProAppSrc\FANApp\AppInc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_callbacks\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ip\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ipv6\multicast\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\ipv6\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\rpl\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\OS_interface\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\L3\L2_L3_interface\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\cpu\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\Interface_Layer\contiki_mac_interface_layer\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\Interface_Layer\mac_sicslowpan_if\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emlib\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\os\platform\p3_lp_dk\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\common\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\chip\efr32\efr32xg2x\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\ble\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\ieee802154\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\protocol\zwave\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\pa-conversions\efr32xg1x\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_protocol\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_pti\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\rail_lib\plugin\rail_util_rssi\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\PHY\radio\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\MeterApp\Inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\service\iostream\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emdrv\dmadrv\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\SiliconLabs\platform\emdrv\common\inc\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\FLASH\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\APP_LOG\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\response_print\config\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\DebugLog\response_print\
#        -I
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\..\NVM\nvm3\inc\
#        -On --use_c++_inline) --dependencies=n
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Util_9809783495009140069.dir\hif_service.o.iar_deps
#    Locale            =  C
#    List file         =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\lst\Util_9809783495009140069.dir\hif_service.lst
#    Object file       =
#        C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\AppBuild\ewarm-iar\obj\Util_9809783495009140069.dir\hif_service.o
#    Runtime model:       
#      __CPP_Runtime   =  1
#      __SystemLibrary =  DLib
#
###############################################################################

C:\Users\PHYTEC\Desktop\custom-FG23\MeshApp_FG23_Node\ProAppSrc\Util\hif\hif_service.c
      1          /** \file hif_service.c
      2           *******************************************************************************
      3           ** \brief 
      4           ** Implements the Host interface functionality
      5           **
      6           ** \cond STD_FILE_HEADER
      7           **
      8           ** COPYRIGHT(c) 2023-24 Procubed Innovations Pvt Ltd.
      9           ** All rights reserved.
     10           **
     11           ** THIS SOFTWARE IS PROVIDED BY "AS IS" AND ALL WARRANTIES OF ANY KIND,
     12           ** INCLUDING THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR USE,
     13           ** ARE EXPRESSLY DISCLAIMED.  THE DEVELOPER SHALL NOT BE LIABLE FOR ANY
     14           ** DAMAGES WHATSOEVER RESULTING FROM THE USE OF THIS SOFTWARE. THIS SOFTWARE
     15           ** MAY NOT BE USED IN PRODUCTS INTENDED FOR USE IN IMPLANTATION OR OTHER
     16           ** DIRECT LIFE SUPPORT APPLICATIONS WHERE MALFUNCTION MAY RESULT IN THE DIRECT
     17           ** PHYSICAL HARM OR INJURY TO PERSONS. ALL SUCH IS USE IS EXPRESSLY PROHIBITED.
     18           **
     19           *******************************************************************************
     20           **  \endcond
     21           */
     22          
     23          /*
     24          ********************************************************************************
     25          * File inclusion
     26          ********************************************************************************
     27          */
     28          
     29          
     30          #if 0 
     31          
     32          #include "StackPHYConf.h"
     33          #include "common.h"
     34          #include "queue_latest.h"
     35          #include "uart_hal.h"
     36          #include "hif_utility.h"
     37          #include "event_manager.h"
     38          #include "sw_timer.h"
     39          #include "timer_service.h"
     40          #if APP_LBR_ROUTER
     41          #if(APP_HIF_PROCESS_FEATURE_ENABLED == 1)
     42          #include "hif_process.h"
     43          #endif
     44          #endif
     45          //#include "buffer_service.h"
     46          
     47          /*
     48          ** =============================================================================
     49          ** Private Macro definitions
     50          ** =============================================================================
     51          */
     52          	
     53          /* None */
     54          
     55          /*
     56          ** =============================================================================
     57          ** Private Structures, Unions & enums Type Definitions
     58          ** =============================================================================
     59          **/
     60          
     61          /* None */
     62          
     63          /*
     64          ** =============================================================================
     65          ** Private Variable Definitions
     66          ** =============================================================================
     67          */
     68          
     69          drv_calls_t driver = 
     70          {
     71          	NULL,
     72          	uart_hal_write,
     73          	uart_hal_read,
     74          	UART_init,
     75          	UART_close
     76          };
     77          
     78          static hif_t* mp_hif;
     79          static uint16_t rx_buff_wrong_queue_cnt = 0;
     80          
     81          /*
     82          ** =============================================================================
     83          ** Private Function Prototypes
     84          ** =============================================================================
     85          */
     86          
     87          static void hif_service_notify( uint8_t evt , uint8_t ch );
     88          
     89          /*
     90          ** =============================================================================
     91          ** External Variable Declarations
     92          ** =============================================================================
     93          */
     94          
     95          extern uint8_t heap[];
     96          #if APP_LBR_ROUTER
     97          extern sw_tmr_t uart_debug;//@Umesh 05_12_2018
     98          #endif
     99          
    100          extern sw_tmr_t uart_rx_data_poll_tmr;
    101          //extern uart_hal_data_t uart_hal_info;
    102          
    103          /*
    104          ** =============================================================================
    105          ** External Function Prototypes
    106          ** =============================================================================
    107          */
    108          
    109          //extern void signal_event_to_mac_task( uint8_t event );
    110          
    111          /*
    112          ** =============================================================================
    113          ** Public Variables Definitions
    114          ** =============================================================================
    115          **/
    116          
    117          void clear_buffer_and_state(void *uart_data);
    118          
    119          #if(APP_USE_HIF_FOR_RAW_COMMUNICARION == 1)
    120          void UART_poll_timer_expire_callback_to_App(void *uart_data);
    121          #endif
    122          
    123          
    124          /*
    125          ** =============================================================================
    126          ** Public Function Prototypes
    127          ** =============================================================================
    128          */
    129          
    130          /* None */
    131          
    132          /*
    133          ** =============================================================================
    134          ** Public Function Definitions
    135          ** =============================================================================
    136          */
    137          
    138          void hif_service_init(hif_t* p_hif_data) //To be called from main
    139          {
    140          
    141          	mp_hif = p_hif_data;
    142          	p_hif_data->p_hif_heap = heap;
    143          
    144          	hif_module_init
    145          	( 
    146          		p_hif_data,
    147          		hif_service_notify,
    148          		&driver 
    149          	);
    150          #if APP_LBR_ROUTER        
    151                  /*calling one-shot timer for hif*//*Umesh 17-sep-2018*/
    152                  tmr_create_one_shot_timer
    153                  (
    154                      &(uart_debug),
    155                      180000,//200000, //code working on 180000 for 2048 pkt,from cal culation timer value is set to 213333. 
    156                      (sw_tmr_cb_t)&clear_buffer_and_state,
    157                      NULL//&uart_hal_info
    158                  );
    159          #endif
    160                  
    161           #if(APP_USE_HIF_FOR_RAW_COMMUNICARION == 1)       
    162                    /*calling one-shot timer for hif*//*Umesh 17-sep-2018*/
    163                  tmr_create_one_shot_timer
    164                  (
    165                      &(uart_rx_data_poll_tmr),
    166                      (30 * 1000 ),  // Approx 30 Milli Sec 
    167                      (sw_tmr_cb_t)&UART_poll_timer_expire_callback_to_App,
    168                      NULL
    169                  );
    170          #endif     
    171                  
    172          }
    173          
    174          /*----------------------------------------------------------------------------*/
    175          
    176          void hif_task_init(void) //To be called from main after hif_service_init() call
    177          {
    178          	//create task
    179          }
    180          
    181          /*----------------------------------------------------------------------------*/
    182          
    183          void hif_task(hif_t* p_hif)
    184          {
    185          	hif_buff_t* pBuffer = NULL;
    186          	pBuffer = ( hif_buff_t* )queue_peek( &( p_hif->recv_q ));
    187          	if ( NULL != pBuffer )
    188          	{
    189          		/*Packet recieved*/
    190          		hif_proc_packet_from_host( p_hif );
    191          	}
    192          
    193          	pBuffer = ( hif_buff_t* )queue_peek( &( p_hif->send_q ));
    194          	
    195          	if ( NULL != pBuffer )
    196          	{
    197                          /*Packet Transmitt*/
    198          		hif_send_packet_to_host( p_hif );
    199          	}
    200          
    201          }
    202          /*----------------------------------------------------------------------------*/
    203          
    204          void ReceiveProcess(void)
    205          {
    206          	uint16_t queueCnt = 0;
    207          	hif_buff_t* pBuffer = NULL;
    208          	pBuffer = ( hif_buff_t* )queue_peek( &( mp_hif->recv_q ));
    209                  queueCnt = queue_count_get( &( mp_hif->recv_q ));
    210          	if ( NULL != pBuffer )
    211          	{
    212          		/*Packet recieved*/
    213          		hif_proc_packet_from_host( mp_hif );
    214                          // Raka  :: As per current logic this condition should never fail 
    215                          // and we should not get into else  anytime. If we are going to else
    216                          // we need to relook into this condition.
    217                          if (queueCnt == 1)
    218                          {
    219          #if ((RADIO_VALIDATION ==1 )|| ( SNIFFER == 1) || (APP_HIF_PROCESS_FEATURE_ENABLED == 0))          
    220                            event_clear(HIF_RX_EVENT);
    221          #endif
    222                          }
    223                          else
    224                          {
    225                            rx_buff_wrong_queue_cnt++;
    226                          }
    227                          
    228          	}
    229          #if (RADIO_VALIDATION || SNIFFER)     
    230          	else
    231          	{
    232          		event_clear(HIF_RX_EVENT);
    233          	}
    234          #endif
    235          }
    236          /*----------------------------------------------------------------------------*/
    237          void TransmitProcess(void)
    238          {
    239            uint16_t queueCnt = 0;
    240            hif_buff_t* pBuffer = NULL;
    241            queueCnt = queue_count_get( &( mp_hif->send_q ));
    242            
    243          /* Debdeep :: This do-while loop was implemented becouse tx packet was being accumulated in mp_hif->send_q.
    244          But if uart driver is busy transmitting a previous packet then multiple hif tx event is posted by this do-while loop.
    245          Now we need to see why tx packet was being accumulted in mp_hif->send_q previously */
    246          //  do
    247          //  {
    248            
    249            if (queueCnt <= 0)
    250            {
    251          #if ((RADIO_VALIDATION ==1 )|| ( SNIFFER == 1) || (APP_HIF_PROCESS_FEATURE_ENABLED == 0))
    252              event_clear(HIF_TX_EVENT);
    253          #endif
    254              return;
    255            }
    256            
    257            pBuffer = ( hif_buff_t* )queue_peek( &( mp_hif->send_q ));
    258            if ( NULL != pBuffer )
    259            {
    260              /*Packet transmitted*/
    261              hif_send_packet_to_host( mp_hif );
    262            }
    263            else
    264            {
    265          #if ((RADIO_VALIDATION ==1 )|| ( SNIFFER == 1) || (APP_HIF_PROCESS_FEATURE_ENABLED == 0))
    266              event_clear(HIF_TX_EVENT);
    267          #endif
    268              mp_hif->send_q.count = 0;
    269            }
    270          
    271          //    queueCnt = queue_count_get( &( mp_hif->send_q ));
    272          //  }while (queueCnt != 0);
    273          }
    274          /*
    275          ** ============================================================================
    276          ** Private Function Definitions
    277          ** ============================================================================
    278          */ 
    279          
    280          #if(APP_USE_HIF_FOR_RAW_COMMUNICARION == 1)
    281          #define MAX_UART_DATA_BUFF_SIZE 1500
    282          uint8_t myData [ MAX_UART_DATA_BUFF_SIZE ] = {0};
    283          uint16_t myDataIDx = 0;
    284          static void hif_service_notify( uint8_t ev , uint8_t ch )
    285          {
    286            
    287            if (ev == RX_PACKET_EVENT) 
    288            {
    289              myData[myDataIDx++] = ch;
    290            
    291            }
    292          }
    293          
    294          #else
    295                      
    296          static void hif_service_notify( uint8_t evt , uint8_t ch )
    297          {
    298            if (evt == RX_PACKET_EVENT)
    299            {
    300          #if (((RADIO_VALIDATION == 1)|| (SNIFFER == 1) ) || (APP_HIF_PROCESS_FEATURE_ENABLED == 0))
    301              event_set(HIF_RX_EVENT);
    302          #else
    303              hif_process_rx (NULL);
    304          #endif
    305            }
    306          }
    307           
    308          
    309                   
    310          #endif
    311          
    312          
    313          /*
    314          ** ============================================================================
    315          ** ============================================================================
    316          */ 
    317          extern  uint8_t UART_Data_send_udp(uint8_t *buf, uint16_t length);
    318          extern int get_joing_state;
    319          uint8_t state_join = 0;
    320          #if(APP_USE_HIF_FOR_RAW_COMMUNICARION == 1)
    321          void UART_poll_timer_expire_callback_to_App(void *uart_data)
    322          {
    323            
    324            
    325            
    326             UART_Data_send_udp(&myData[0], myDataIDx);
    327            
    328            myDataIDx = 0;
    329            
    330           
    331            
    332            
    333          }
    334          
    335          #endif
    336          
    337          
    338          
    339          #endif // #if 0
    340          
    341          
    342          /*----------------------------------------------------------------------------*/
    343          


 
 
 0 bytes of memory

Errors: none
Warnings: none
